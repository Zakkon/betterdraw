/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/app.js":
/*!*******************!*\
  !*** ./js/app.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _loadAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadAction.js */ \"./js/loadAction.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./js/helpers.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings.js */ \"./js/settings.js\");\n/* harmony import */ var _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./netSyncer.js */ \"./js/netSyncer.js\");\n/* harmony import */ var _ui_CreateLayerDialog_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui/CreateLayerDialog.js */ \"./js/ui/CreateLayerDialog.js\");\n/* harmony import */ var _ui_BrushControls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui/BrushControls.js */ \"./js/ui/BrushControls.js\");\n/* harmony import */ var _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tools/toolsHandler.js */ \"./js/tools/toolsHandler.js\");\n/* harmony import */ var _layer_simpledraw_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./layer/simpledraw.js */ \"./js/layer/simpledraw.js\");\n/* harmony import */ var _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./layer/layerSettings.js */ \"./js/layer/layerSettings.js\");\n\r\nvar pixels = __webpack_require__(/*! image-pixels */ \"./node_modules/image-pixels/index.js\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nHooks.once('canvasInit', () => {\r\n    //Create the ToolsHandler\r\n    const th = new _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](); //will create a singleton of itself\r\n    canvas.toolsHandler = th; //Storing it in canvas aswell, hoping not to have it be garbage collected\r\n    \r\n    //Add our SimpleDrawLayer to the canvas. This wont have any visible effect at first, it's simply a place that interacts with controls, and can in the future spawn sprites that we can draw on.\r\n    const layerct = canvas.stage.children.length;\r\n    canvas.drawLayer = canvas.stage.addChildAt(new _layer_simpledraw_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](\"DrawLayer\"), layerct);\r\n    canvas.drawLayer.draw(); //This has to be called straight away, it basically initializes the CanvasLayer that is the core of SimpleDrawLayer\r\n});\r\nHooks.on(\"canvasInit\", async function() {\r\n  //This hook can be called on things like world grid rescale, so expect this to be called more then once\r\n\r\n  const drawLayer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n  await drawLayer.init();//Make sure we have a sprite object in the layer, and that its rendertexture is properly set, drawing from the pixelmap\r\n  //We need to insert our drawLayer into the .layers of the canvas, so the game can find our drawLayer in some core functions\r\n  let theLayers = Canvas.layers;\r\n  theLayers.drawLayer = _layer_simpledraw_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\r\n  Object.defineProperty(Canvas, 'layers', {get: function() { return theLayers }});\r\n\r\n  drawLayer.showControls = false;\r\n\r\n  //Set the initial visibility of the sprite\r\n  drawLayer.SetVisible(false);\r\n  await Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"sleep\"])(100); //Need to sleep here to ensure that layer is properly positioned\r\n  drawLayer.Reposition();\r\n  drawLayer.isSetup = true; //Set isSetup to true, which tells the drawLayer that its ready to interact with stuff like cursors\r\n  drawLayer.layer.texture = drawLayer.pixelmap.texture; //Just to make sure the layer texture is properly set. Probably unessesary.\r\n  //Create the cursor objects for the different brushes. They will live inside drawLayer.\r\n  if(_tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].singleton==null){console.error(\"ToolsHandler could not be found!\");}\r\n  _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].singleton.createToolCursors(drawLayer);\r\n  \r\n  //Do any test drawing functions here\r\n});\r\nHooks.on(\"ready\", async function() {\r\n  _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__[\"NetSyncer\"].onReady();\r\n  game.socket.on('module.betterdraw', (data) => recieveNetMsg(data));\r\n});\r\n\r\n/**\r\n * Socket through which we recieve network messages\r\n * @param {any} data \r\n */\r\nfunction recieveNetMsg(data) {\r\n  _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__[\"NetSyncer\"].ParseMessage(data);\r\n}\r\nHooks.on('updateUser', () => {\r\n});\r\n\r\nHooks.on('updateScene', () => {\r\n  //NetSyncer.onUpdateScene();\r\n});\r\n\r\n/**\r\n * Add control buttons\r\n */\r\nHooks.on('getSceneControlButtons', (controls) => {\r\n    const interactable = false; //layerInteractable();\r\n    if (game.user.isGM) {\r\n      if (canvas != null) {\r\n        controls.push({\r\n          name: 'DrawLayer',\r\n          title: \"BetterDraw\",\r\n          icon: 'custom-icon betterdraw-icon',\r\n          layer: 'DrawLayer',\r\n          tools: [\r\n            {\r\n              name: 'brush',\r\n              title: \"Brush\",\r\n              icon: 'fas fa-paint-brush',\r\n              visible: layerInteractable(),\r\n            },\r\n            {\r\n              name: 'grid',\r\n              title: \"Grid\",\r\n              icon: 'fas fa-border-none',\r\n              visible: layerInteractable(),\r\n            },\r\n            {\r\n              name: 'rect',\r\n              title: \"Rectangle\",\r\n              icon: 'far fa-square',\r\n              visible: layerInteractable(),\r\n            },/*\r\n            {\r\n              name: 'ellipse',\r\n              title: \"Ellipse\",\r\n              icon: 'far fa-circle',\r\n            }, */\r\n            {\r\n              name: 'eyedropper',\r\n              title: \"Eyedropper\",\r\n              icon: 'custom-icon eyedropper-icon',\r\n              visible: layerInteractable(),\r\n            },\r\n           /*  {\r\n              name: 'sceneConfig',\r\n              title: \"Config\",\r\n              icon: 'fas fa-cog',\r\n              onClick: () => {\r\n                new BetterdrawConfig().render(true);\r\n              },\r\n              button: true,\r\n            }, */\r\n            {\r\n              name: 'toggleVisible',\r\n              title: \"Toggle Visible\",\r\n              icon: 'fas fa-eye',\r\n              toggle: true,\r\n              active: Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])()._cachedVisibility == true,\r\n              onClick: () => {\r\n                const curVis = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])()._cachedVisibility == true;\r\n                _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__[\"NetSyncer\"].CmdSetVisible(!curVis);\r\n              },\r\n              visible: layerInteractable(),\r\n            },\r\n            {\r\n              name: 'addLayer',\r\n              title: \"Create Layer\",\r\n              icon: 'fa fa-plus',\r\n              onClick: () => {\r\n                new _ui_CreateLayerDialog_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]().render(true);\r\n              },\r\n              button: true,\r\n            },\r\n            {\r\n              name: 'removeLayer',\r\n              title: \"Delete Layer\",\r\n              icon: 'fa fa-trash',\r\n              onClick: () => {\r\n                DeleteLayer();\r\n              },\r\n              button: true,\r\n              visible: layerInteractable(),\r\n            },\r\n          ],\r\n          activeTool: 'brush',\r\n        });\r\n      }\r\n    }\r\n});\r\n  \r\n/**\r\n * Handles adding the custom brush controls pallet\r\n * and switching active brush flag\r\n */\r\nHooks.on('renderSceneControls', (controls) => {\r\n  // Switching to layer\r\n  if (canvas != null) {\r\n    if (controls.activeControl == 'DrawLayer' && controls.activeTool != undefined) {\r\n      const drawLayer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n      // Open brush tools if not already open\r\n      if (!$('#betterdraw-brush-controls').length) { drawLayer.brushControls = new _ui_BrushControls_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]().render(true); }\r\n      // Set active tool\r\n      const tool = controls.controls.find((control) => control.name === 'DrawLayer').activeTool; //get type of tool from controlBtn\r\n      //canvas.drawLayer.brushControls.configureElements(tool);\r\n      drawLayer.setActiveTool(tool);\r\n    }\r\n    // Switching away from layer\r\n    else {\r\n      if(_tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].singleton){_tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].singleton.clearActiveTool();}\r\n      \r\n\r\n      // Remove brush tools if open\r\n      const bc = $('#betterdraw-brush-controls');\r\n      if (bc) bc.remove();\r\n    }\r\n  }\r\n\r\n  \r\n});\r\n\r\n/**\r\n * Sets Y position of the brush controls to account for scene navigation buttons\r\n */\r\nfunction setBrushControlPos() {\r\n  const bc = $('#betterdraw-brush-controls');\r\n  if (bc) {\r\n    const h = $('#navigation').height();\r\n    bc.css({ top: `${h + 30}px` });\r\n  }\r\n}\r\nfunction layerInteractable(){\r\n  const l = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n  let x =  l && l.showControls == true;\r\n  return x;\r\n}\r\n\r\n// Reset position when brush controls are rendered or sceneNavigation changes\r\nHooks.on('renderBrushControls', setBrushControlPos);\r\nHooks.on('renderSceneNavigation', setBrushControlPos);\r\n\r\n\r\n\r\nHooks.on(\"canvasReady\", async function() {\r\n  //This is more reliable then the 'ready' hook, and fires each time we switch scenes\r\n\r\n  await onSceneLoaded();\r\n\r\n});\r\nasync function onSceneLoaded() {\r\n\r\n  //Called when a scene loads, and when we switch to another scene\r\n  //If we had the scene controls of betterdraw open when we left the previous scene, they are still visible here\r\n  //So we need to redraw the scene to only show the buttons we want\r\n  if(canvas.scene===null) { console.error(\"No canvas.scene found!\"); return; }\r\n  const drawLayer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n  drawLayer.SetVisible(drawLayer._cachedVisibility); //Refresh whatever visibility the layer last had\r\n\r\n  _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].singleton.validateHealth(); //Validate the health of the tools, sometimes they break during Foundry setup\r\n\r\n  \r\n  await TryLoadLayer(); //Load the image file to use as a background\r\n  \r\n  ui.controls.initialize();\r\n}\r\n\r\nasync function TryLoadLayer() {\r\n\r\n  //Load settings, or create new ones if none were found\r\n  let settings = await Object(_settings_js__WEBPACK_IMPORTED_MODULE_2__[\"getLayerSettings\"])();\r\n  const isGM = game.user.isGM;\r\n  //Check if settings exist\r\n  let settingsExist = _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_8__[\"LayerSettings\"].VerifySettingSanity(settings);\r\n\r\n  if(!settingsExist && isGM) {\r\n    let l = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n    l.sceneControlButtonsShow = false; //Some buttons should be disabled until layersettings are created\r\n    //For now, dont auto-create new layer settings, even for the GM\r\n    //This means that the layer object will still exist, but it wont be accessible or visible until we create a new LayerSettings object through the plus button on the controls\r\n    return;\r\n  }\r\n  else if(!settingsExist && !isGM)\r\n  {\r\n    //If not GM and no settings exist, stop here\r\n    //Just mimicking the above statement, controls wont be visible for non-GMs anyway\r\n    let l = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n    l.sceneControlButtonsShow = false; \r\n    return;\r\n  }\r\n\r\n  let e = null;\r\n  //This next part progresses regardless if you are GM or a player\r\n  //If our settings specify an image file, we load it and build the settings around it\r\n  if(settings.hasImageFile) {\r\n    //Grab an image file from the server\r\n    //data = buffer, width = buffer width, height = buffer height\r\n    let failed = false;\r\n    try{\r\n      e = await _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_8__[\"LayerSettings\"].LoadImage(settings, settings.imageFilename);\r\n    }\r\n    catch{\r\n      console.error(\"Could not load corrupted or missing image at /betterdraw/uploaded/\" + settings.imageFilename);\r\n      failed = true;\r\n      //Just forget we have an image for now (until we save the settings again)\r\n      settings.imageFilename = \"\";\r\n      settings.hasImageFile = false;\r\n    }\r\n    \r\n    if(failed){\r\n      //Revert to fallback, parse the settings\r\n      e = await _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_8__[\"LayerSettings\"].ParseSettings(settings);\r\n      //Delete strokes here? Not sure\r\n    }\r\n  }\r\n  else {\r\n    //If settings does not have an image file\r\n    //Basically just sets the texture size of the settings based on other settings, or image present\r\n    e = await _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_8__[\"LayerSettings\"].ParseSettings(settings);\r\n  } \r\n\r\n  //Then hand over the settings to the loadaction, which will set up the layer (and the scene, if nessesary)\r\n  let task = new _loadAction_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n  await task.Perform(e);\r\n\r\n  //Any strokes made after this texture was last saved will be drawn ontop\r\n  let strokeHistory = await Object(_settings_js__WEBPACK_IMPORTED_MODULE_2__[\"getStrokes\"])();\r\n  //Check integrity of strokes here?\r\n  if(!_layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_8__[\"LayerSettings\"].VerifyStrokeDataSanity(strokeHistory)){return;}\r\n  //Draw the strokes onto the pixelmap\r\n  let layer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n  layer.pixelmap.DrawStrokeParts(strokeHistory, true);\r\n}\r\n\r\n/**\r\n * Delete the layer settings and strokes saved in the scene flags, aswell as telling all clients to hide the layer.\r\n * The layer object will still exist on the canvas, but be hidden and uninteractable\r\n */\r\nasync function DeleteLayer(){\r\n  const isGM = game.user.isGM;\r\n  if(!isGM){return;}\r\n  const layer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"getDrawLayer\"])();\r\n  //NetSyncer.CmdSetVisible(false); //Pointless, since we will refresh the canvas soon anyway\r\n  await Object(_settings_js__WEBPACK_IMPORTED_MODULE_2__[\"setLayerSettings\"])(null);\r\n  await Object(_settings_js__WEBPACK_IMPORTED_MODULE_2__[\"setStrokes\"])(null);\r\n  Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"setLayerControlsInteractable\"])(false);\r\n  layer.interactable = false;\r\n  layer.isSetup = false;\r\n  layer.showControls = false;\r\n  //Reload scene controls ui\r\n  //Accomplish this by calling scene draw?\r\n  //Lets tell clients that layer has been destroyed\r\n  _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__[\"NetSyncer\"].CmdOnLayerDestroyed();\r\n  await Object(_helpers_js__WEBPACK_IMPORTED_MODULE_1__[\"redrawScene\"])();\r\n}\r\n\n\n//# sourceURL=webpack:///./js/app.js?");

/***/ }),

/***/ "./js/color32.js":
/*!***********************!*\
  !*** ./js/color32.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Color32; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./js/helpers.js\");\n\r\n\r\nclass Color32 {\r\n\r\n    //r: number\r\n    //g: number\r\n    //b: number\r\n    //a: number\r\n    \r\n    constructor(red,green,blue,alpha=255)\r\n    {\r\n        this.r = this.clamp(red);\r\n        this.g = this.clamp(green);\r\n        this.b = this.clamp(blue);\r\n        this.a = this.clamp(alpha);\r\n    }\r\n    clamp(value){\r\n        if(value<0){return 0;}\r\n        if(value>255){return 255;}\r\n        return value;\r\n    }\r\n    /** 0x000000 string format to Color32 */\r\n    static fromHex(hex) { return Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"hexToColor\"])(hex); }\r\n    /** #FFFFFF format to Color32 */\r\n    static fromWeb(web)\r\n    {\r\n        if(web===undefined){console.error(\"color is undefined!\");}\r\n        return Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"hexToColor\"])(Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"webToHex\"])(web));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./js/color32.js?");

/***/ }),

/***/ "./js/drawing/pixelmap.js":
/*!********************************!*\
  !*** ./js/drawing/pixelmap.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PixelMap; });\n/* harmony import */ var thaw_image_processing_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! thaw-image-processing.ts */ \"./node_modules/thaw-image-processing.ts/lib/main.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../color32 */ \"./js/color32.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../layer/layerSettings */ \"./js/layer/layerSettings.js\");\n/* harmony import */ var _smarttexture__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./smarttexture */ \"./js/drawing/smarttexture.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass PixelMap {\r\n\r\n    constructor(width, height, options) {\r\n        this.defaultColor = Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"hexToColor\"])(Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"webToHex\"])(_layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].DefaultBackgroundColor())); //DEFAULT COLOR OF THE PIXELMAP\r\n        this.texture = this._newTexture(width, height);\r\n        this._reform(width, height, this.defaultColor);\r\n        //Wont have any effect until ApplyPixels() is called\r\n    }\r\n    \r\n    /**\r\n     * Replaces the current pixel buffer with the one provided. Resizes the entire texture if needed.\r\n     * Auto-applying pixels to texture is optional (default true).\r\n     * @param {Uint8ClampedArray} buffer \r\n     * @param {number} bufferWidth \r\n     * @param {number} bufferHeight \r\n     * @param {boolean} applyPixels \r\n     */\r\n    ReadFromBuffer(buffer, bufferWidth, bufferHeight, applyPixels=true) {\r\n        //Simple check to make sure the buffer is the same size as stated\r\n        if(buffer==undefined){console.error(\"buffer is undefined!\");}\r\n        if(buffer.length===NaN){console.error(\"Buffer does not have a length property, are you sure its really a Uint8ClampedArray?\"); return;}\r\n        if(buffer.length != (bufferWidth*bufferHeight*4)){console.error(\"Buffer is of the wrong size! Its size is \" + buffer.length + \", and we expected one of size \" + (bufferWidth*bufferHeight*4) + \" (for our \"+this.width+\"x\"+this.height +\" texture)\"); return;}\r\n        //We will essentially replace our pixel buffer with theirs\r\n        this.pixels = buffer; //assume its a uin8clamped array, rgba32 format\r\n        if((this.width!==bufferWidth)||(this.height!==bufferHeight)) //See if this buffer is of a different size then our current one\r\n        {\r\n            this.width = bufferWidth; this.height = bufferHeight;\r\n            //the texture needs to be resized\r\n            this.texture.Resize(this.width, this.height);\r\n        }\r\n        if(applyPixels) { this.ApplyPixels(); }\r\n    }\r\n    /**\r\n     * Reads the buffer and resizes the pixelmap to be of size toWidth x toHeight.\r\n     * Useful in cases where you have a pixel buffer of a larger or smaller size then the intended output texture size, and you want to do some rescaling.\r\n     * Auto-applying pixels to texture is optional (default true).\r\n     * @param {Uint8ClampedArray} buffer \r\n     * @param {number} bufferWidth \r\n     * @param {number} bufferHeight \r\n     * @param {boolean} applyPixels \r\n     */\r\n    ReadFromBuffer_Scaled(buffer, bufferWidth, bufferHeight, toWidth, toHeight, applyPixels = true)\r\n    {\r\n        //Simple check to make sure the buffer is the same size as stated\r\n        if(buffer.length != (bufferWidth*bufferHeight*4)){console.error(\"buffer is of the wrong size!\"); return;}\r\n        //Create a new scaled down texture (our width/height), which used the buffer. Once the texture is made, we read our scaled buffer from it\r\n\r\n        const srcImage = Object(thaw_image_processing_ts__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(bufferWidth, bufferHeight, 4, 4*bufferWidth, buffer);\r\n        const dstImage = Object(thaw_image_processing_ts__WEBPACK_IMPORTED_MODULE_0__[\"resampleImage\"])(\r\n            srcImage,\r\n            toWidth,\r\n            toHeight,\r\n            thaw_image_processing_ts__WEBPACK_IMPORTED_MODULE_0__[\"ResamplingMode\"].NearestNeighbour //Bilinear or NearestNeighbour\r\n        );\r\n        this.ReadFromBuffer(dstImage.data, toWidth, toHeight, applyPixels);\r\n    }\r\n    /**\r\n     * \r\n     * @param {number} width \r\n     * @param {number} height \r\n     * @param {Color32} color \r\n     * @param {boolean} applyPixels \r\n     */\r\n    Reform(width, height, color, applyPixels=true)\r\n    {\r\n        if(width<1||height<1){\r\n            console.error(\"Cannot reform pixelmap, width & height are out of range! Width: \" + width + \", Height: \" + height);\r\n            return;\r\n        }\r\n        this._reform(width, height, color);\r\n        if(applyPixels) { this.ApplyPixels(); }\r\n    }\r\n/**\r\n     * \r\n     * @param {number} width \r\n     * @param {number} height \r\n     * @param {Color32} color \r\n     */\r\n    _reform(width, height, color) {\r\n        this.width = width; this.height = height;\r\n        this.pixels = new Uint8ClampedArray(width*height*4);\r\n        for(var i = 0; i < this.pixels.length; i+=4)\r\n        {\r\n            this.pixels[i] = color.r;\r\n            this.pixels[i+1] = color.g;\r\n            this.pixels[i+2] = color.b;\r\n            this.pixels[i+3] = color.a;\r\n        }\r\n        if((this.width!=this.texture.width)||(this.height!=this.texture.height)) //Resize texture if needed\r\n        {\r\n            this.texture.Resize(this.width, this.height);\r\n        }\r\n        //Apply pixels should be called from elsewhere after this\r\n    }\r\n    /**\r\n     * Returns a pixel from the buffer\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {Color32}\r\n     */\r\n    GetPixel(x, y) { return this._getPixel_i4(this._xy_to_i4(x,y)); }\r\n    /**\r\n     * Returns the pixels in a rectangle\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {number} areaWidth \r\n     * @param {number} areaHeight \r\n     */\r\n    GetPixelsRect(x, y, areaWidth, areaHeight) {\r\n\r\n        var l = new Uint8ClampedArray[(w * h * 4)];\r\n        for(i = 0; i < areaWidth; ++i)\r\n        {\r\n            for (j = 0; j < areaHeight; ++j)\r\n            {\r\n                let ix = (((j+y) * this.width) + (i+x)) * 4;\r\n                let ix2 = ((j * w) + i) * 4;\r\n                l[ix2] = this.pixels[ix];\r\n                l[ix2+1] = this.pixels[ix+1];\r\n                l[ix2+2] = this.pixels[ix+2];\r\n                l[ix2+3] = this.pixels[ix+3];\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n    _setPixel(x, y, color){\r\n        this._setPixel_i4(this._xy_to_i4(x,y), color);\r\n    }\r\n    _setPixel_i4(i4, color){\r\n        this.pixels[i4] = color.r;\r\n        this.pixels[i4 + 1] = color.g;\r\n        this.pixels[i4 + 2] = color.b;\r\n        this.pixels[i4 + 3] = color.a;\r\n    }\r\n    _getPixel_i4(i4) {\r\n        return new _color32__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.pixels[i4], this.pixels[i4 + 1], this.pixels[i4 + 2], this.pixels[i4 + 3]);\r\n    }\r\n    _xy_to_i4(x,y){return ((y * this.width) + x) * 4;}\r\n    /**\r\n     * Draw a single pixel\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {Color32} color \r\n     * @param {boolean} autoApply \r\n     */\r\n    DrawPixel(x, y, color, autoApply=false) {\r\n        this._setPixel(x,y,color);\r\n        if(autoApply){ this.ApplyPixels();}\r\n    }\r\n     /**\r\n     * Draw a rectangle\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {number} w \r\n     * @param {number} h\r\n     * @param {Color32} col \r\n     * @param {boolean} autoApply \r\n     */\r\n    DrawRect(x, y, w, h, col, autoApply=false)\r\n    {\r\n        //console.log(\"Draw rect at \" + x + \",\" + y + \" : \" + w + \",\" + h);\r\n        if (x < 0 || y < 0 || ((w * h * 4) > this.pixels.Length)) {\r\n            console.error(\"Rect is too big or out of bounds\");\r\n            console.error((w * h) + \" pixels are needed to fill the rect, but we only have \" + (this.pixels.Length / 4));\r\n        }\r\n        for (let i = 0; i < w; ++i)\r\n        {\r\n            for (let j = 0; j < h; ++j)\r\n            {\r\n                let gx = (i+x);\r\n                let gy = (j+y);\r\n                if(gx<0||gx>=this.width||gy<0||gy>=this.height) { continue; }\r\n                let pixel_i4 = ((gy * this.width) + gx) * 4;\r\n                this._setPixel_i4(pixel_i4, col);\r\n            }\r\n        }\r\n        if (autoApply) { console.log(\"Applying\"); this.ApplyPixels(); }\r\n    }\r\n    /**\r\n     * Draw an ellipse\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {number} brushSize \r\n     * @param {Color32} color \r\n     * @param {boolean} autoApply \r\n     */\r\n    DrawEllipse(x, y, brushSize, color, autoApply=false)\r\n    {\r\n        if(brushSize===undefined){console.error(\"BrushSize is undefined!\");}\r\n        const useAdditiveColors = false;\r\n        if(brushSize <= 1) { this.DrawPixel(x, y, color, autoApply); /*return new Array(((this.width * y) + x)*4);*/ }\r\n\r\n        var pixel_i4 = 0;\r\n\r\n        const radius = brushSize/2;\r\n        const radiusSquared = radius*radius;\r\n        let sx = x-radius;\r\n        let sy = y-radius;\r\n        for(let i = 0; i < (radius*2)+1; ++i) {\r\n            let ex = sx + i; //point\r\n            let dx = ex - x; //distance\r\n            for(let j = 0; j < (radius*2)+1; ++j) {\r\n                let ey = sy + j; //point\r\n                let dy = ey - y; //distance\r\n                if(ex<0||ex>=this.width||ey<0||ey>=this.height){continue;}\r\n                let distanceSquared = Math.abs(dx * dx + dy * dy);\r\n                if(distanceSquared<=radiusSquared) {\r\n\r\n                    pixel_i4 = ((this.width * ey) + ex) * 4;\r\n                    this._setPixel_i4(pixel_i4, color);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (autoApply) { this.ApplyPixels(); }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {{type:string, color:Color32, cellBased:boolean, brushSize: number, x:number, y:number, width:number, height:number, xyCoords:{x:number, y:number}[]}[]} parts \r\n     * @param {boolean} autoApply \r\n     */\r\n    DrawStrokeParts(parts, autoApply=true) {\r\n        //todo: check against duplicate coordinates\r\n        for(let i = 0; i < parts.length; ++i)\r\n        {\r\n            let p = parts[i];\r\n            if(p.type==\"circle\") {\r\n                if(p.cellBased) { }\r\n                else {\r\n                    for(let j = 0; j < p.xyCoords.length; ++j) {\r\n                        this.DrawEllipse(p.xyCoords[j].x, p.xyCoords[j].y, p.brushSize, p.color, false);\r\n                    }\r\n                }\r\n            }\r\n            else if(p.type==\"grid\") {\r\n                const gridSize = _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].pixelsPerGrid;\r\n                for(let j = 0; j < p.xyCoords.length; ++j){\r\n                    let cellCoords = p.xyCoords[j];\r\n                    //Clamp to be inside the grid bounds (seems to only need fixing negative coordinates)\r\n                    let width = p.brushSize;\r\n                    let height = p.brushSize;\r\n                    if(cellCoords.x < 0){\r\n                        let diff = 0-cellCoords.x;\r\n                        cellCoords.x = 0;\r\n                        width = width - diff;\r\n                    }\r\n                    if(cellCoords.y < 0){\r\n                        let diff = 0-cellCoords.y;\r\n                        cellCoords.y = 0;\r\n                        height = height - diff;\r\n                    }\r\n                    //Convert to pixel coords\r\n                    this.DrawRect(cellCoords.x * gridSize, cellCoords.y * gridSize, width * gridSize, height * gridSize,\r\n                        p.color, false);\r\n                }\r\n            }\r\n            else if(p.type==\"rect\"){\r\n                if(p.cellBased){ }\r\n                else { this.DrawRect(p.x, p.y, p.width, p.height, p.color, false); }\r\n            }\r\n        }\r\n        //Apply the pixels (renders the texture to the sprite)\r\n        if(parts.length>0 && autoApply) { this.ApplyPixels(); }\r\n    }\r\n    /**\r\n     * Applies the texture buffer (including any recent changes) to the rendered texture in the scene\r\n     */\r\n    ApplyPixels() {\r\n        const gl = canvas.app;\r\n        const tex = PIXI.Texture.fromBuffer(this.pixels, this.width, this.height);\r\n        const sprite = new PIXI.Sprite(tex);\r\n\r\n        //Great, we now have a sprite with the correct pixels\r\n        //Now we need to apply this sprite onto the rendertexture somehow\r\n\r\n        var rt = this.texture;//canvas.drawLayer.maskTexture;\r\n        gl.renderer.render(sprite, rt);\r\n        sprite.destroy();\r\n        tex.destroy();\r\n    }\r\n    /**\r\n     * Does a health check on the base texture, and tries to recreate it if its missing\r\n     */\r\n    checkHealth(){\r\n        let needsTextureRepair = false;\r\n        if(this.texture==null||this.tex==undefined){needsTextureRepair=true;}\r\n        else if(this.texture.baseTexture==null||this.texture.baseTexture==undefined){needsTextureRepair=true;}\r\n\r\n        if(needsTextureRepair){\r\n            console.error(\"Pixelmap.texture seems to have been destroyed! Replacing...\");\r\n            this.RecreateTexture();\r\n            this.ApplyPixels();\r\n        }\r\n    }\r\n    RecreateTexture(){\r\n        this.texture = this._newTexture(this.width, this.height);\r\n    }\r\n    /**\r\n     * \r\n     * @param {number} width \r\n     * @param {number} height \r\n     * @param {PIXI.SCALE_MODES} scaleMode \r\n     */\r\n    _newTexture(width, height, scaleMode=PIXI.SCALE_MODES.NEAREST){\r\n        return _smarttexture__WEBPACK_IMPORTED_MODULE_4__[\"default\"].create(width, height, scaleMode); //Format should be RGBA32, i think\r\n    }\r\n\r\n    _sample(source, fromArea, newWidth, newHeight, scaleMode)\r\n    {\r\n        const rawTex = _smarttexture__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Sample(source, newWidth, newHeight, scaleMode);\r\n        return rawTex;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/drawing/pixelmap.js?");

/***/ }),

/***/ "./js/drawing/smarttexture.js":
/*!************************************!*\
  !*** ./js/drawing/smarttexture.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SmartTexture; });\nconst encode = __webpack_require__(/*! image-encode */ \"./node_modules/image-encode/browser.js\");\r\n\r\nclass SmartTexture extends PIXI.RenderTexture {\r\n\r\n    /**\r\n     * Encodes the data currently stored in the texture buffer into a PNG buffer\r\n     * @return {Buffer}\r\n     */\r\n    EncodeToPNG() {\r\n        let bytes = [];\r\n        let buffer;\r\n        try{\r\n            bytes = Array.from(this._getRawTextureData());\r\n            console.log(\"Got the raw texture data!\");\r\n            var a = encode([bytes], [this.width, this.height], 'png'); //there seems to be a max file size limit here, 7000x7000 is apparently too big. might need to do it async\r\n            console.log(\"texture has been encoded\");\r\n            buffer = Buffer.from(a);\r\n        }\r\n        catch(e){\r\n            console.log(\"FAILED TO GET RAW TEXTURE DATA!\");\r\n            console.log(e);\r\n        }\r\n        return buffer;\r\n    }\r\n    _getRawTextureData() { //target = rendertexture, hopefully\r\n        return this._readPixels(0,0,this.width, this.height);\r\n    }\r\n    _readPixels(x, y, width, height) { //renderer = canvas.app\r\n        const { renderer } = canvas.app; //lets just set this here, for now\r\n        let resolution;\r\n        let renderTexture = this;\r\n        if (renderTexture) {\r\n            resolution = renderTexture.baseTexture.resolution;\r\n            renderer.renderTexture.bind(renderTexture);\r\n        }\r\n        else{\r\n            console.error(\"Failed to collect renderTexture in readPixels\");\r\n        }\r\n        const pixels = new Uint8Array(width*height*4);\r\n        // read pixels to the array\r\n        const { gl } = renderer;\r\n        //Do we mult width & height with resolution aswell?\r\n        gl.readPixels(x * resolution, y * resolution, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n        return pixels;\r\n    }\r\n    _getPixel(byteArray, x, y, width, bytesPerPixel=4){\r\n        const i = ((width*y)+x) * bytesPerPixel;\r\n        return [byteArray[i], byteArray[i+1], byteArray[i+2], byteArray[+3]];\r\n    }\r\n    Resize(width, height){super.resize(width, height, true);}\r\n    /**\r\n     * \r\n     * @param {number} width \r\n     * @param {number} height \r\n     * @param {PIXI.SCALE_MODES} scaleMode \r\n     * @param {number} resolution \r\n     */\r\n    static create(width, height, scaleMode=1, resolution=1)\r\n    {\r\n       /* eslint-disable prefer-rest-params */\r\n       const options = {\r\n            width: width,\r\n            height: height,\r\n            scaleMode: scaleMode,\r\n            resolution: resolution,\r\n        };\r\n        /* eslint-enable prefer-rest-params */\r\n        //var brt = new PIXI.BaseRenderTexture(300,300, PIXI.SCALE_MODES.NEAREST, 1);\r\n        return new SmartTexture(new PIXI.BaseRenderTexture(options));\r\n    }\r\n\r\n    static LoadRawTextureData(buffer, width, height, apply=true){ //Buffer must eba UInt8Array\r\n        const tex = PIXI.Texture.fromBuffer(buffer,width,height);\r\n        const sprite = new PIXI.Sprite(tex);\r\n        //Great, we now have a sprite with the correct pixels\r\n        //Now we need to apply this sprite onto the rendertexture\r\n        var rt = canvas.drawLayer.maskTexture;\r\n        const gl = canvas.app;\r\n        gl.renderer.render(sprite, rt);\r\n    }\r\n    /**\r\n     * \r\n     * @param {Uint8ClampedArray} buffer \r\n     * @param {number} bufferWidth \r\n     * @param {number} bufferHeight \r\n     * @param {PIXI.settings.SCALE_MODE} scaleMode \r\n     */\r\n    static Sample(buffer, bufferWidth, bufferHeight, scaleMode) //PIXI.settings.SCALE_MODE or LINEAR\r\n    {\r\n        //Create a fresh texture from the buffer. Will have the same size as the buffer.\r\n        const options = { scaleMode: scaleMode };\r\n        const tex = PIXI.Texture.fromBuffer(buffer, bufferWidth, bufferHeight, options);\r\n        console.log(\"Tex: \");\r\n        console.log(tex);\r\n        //Read the pixels from that new texture\r\n        const sampled = this.readPixelsFromTexture(tex, scaleMode, bufferWidth, bufferHeight,0,0);\r\n        return sampled;\r\n    }\r\n    static readPixelsFromTexture(inputTexture, scaleMode, targetW, targetH, x = 0, y = 0) {\r\n        const { renderer } = canvas.app;\r\n        let resolution = 1;\r\n        let renderTexture;\r\n        //If inputted texture is not a renderTexture, we need to create a rendertexture around it\r\n        let generated = false;\r\n        if (inputTexture instanceof PIXI.RenderTexture) { renderTexture = inputTexture; }\r\n        else {\r\n            //If inputTexture is not a Sprite, we need to create a Sprite around the input texture first\r\n            //DEBUG: Assume its not a sprite for now\r\n            let sprite = new PIXI.Sprite(inputTexture);\r\n            renderTexture = renderer.generateTexture(/*inputTexture*/sprite, scaleMode); //Returns a RenderTexture\r\n            generated = true;\r\n        }\r\n\r\n        if (renderTexture) {\r\n          resolution = renderTexture.baseTexture.resolution;\r\n          renderer.renderTexture.bind(renderTexture);\r\n        }\r\n        const pixel = new Uint8Array(targetW*targetH*4);\r\n        // read pixels to the array\r\n        const { gl } = renderer;\r\n        console.log(\"DisplayObject: \"); console.log(renderTexture);\r\n        gl.readPixels(x * resolution, y * resolution, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n        if (generated) { renderTexture.destroy(true); }\r\n        return pixel;\r\n      }\r\n    static get_gl(){return canvas.app; }\r\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./js/drawing/smarttexture.js?");

/***/ }),

/***/ "./js/helpers.js":
/*!***********************!*\
  !*** ./js/helpers.js ***!
  \***********************/
/*! exports provided: webToHex, hexToWeb, affirmWebRGB, hexToPercent, hexToColor, colorToHex, GetHex, percentToHex, hexObjsToArr, pixiDump, betterdrawLog, readPixel, calcGridImportSize, sleep, isNullNumber, worldPosToPixelPos, pixelPosToWorldPos, getDrawLayer, setLayerControlsInteractable, redrawScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"webToHex\", function() { return webToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToWeb\", function() { return hexToWeb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"affirmWebRGB\", function() { return affirmWebRGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToPercent\", function() { return hexToPercent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexToColor\", function() { return hexToColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorToHex\", function() { return colorToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetHex\", function() { return GetHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"percentToHex\", function() { return percentToHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexObjsToArr\", function() { return hexObjsToArr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pixiDump\", function() { return pixiDump; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"betterdrawLog\", function() { return betterdrawLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readPixel\", function() { return readPixel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calcGridImportSize\", function() { return calcGridImportSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sleep\", function() { return sleep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNullNumber\", function() { return isNullNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"worldPosToPixelPos\", function() { return worldPosToPixelPos; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pixelPosToWorldPos\", function() { return pixelPosToWorldPos; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDrawLayer\", function() { return getDrawLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLayerControlsInteractable\", function() { return setLayerControlsInteractable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"redrawScene\", function() { return redrawScene; });\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color32 */ \"./js/color32.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"./js/settings.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layer/layerSettings */ \"./js/layer/layerSettings.js\");\n/* harmony import */ var _layer_simpledraw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layer/simpledraw */ \"./js/layer/simpledraw.js\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Converts web colors to base 16\r\n * @param n {Hex}               Web format color, f.x. #FF0000\r\n * @return {Hex}                Base 16 format color, f.x. 0xFF0000\r\n */\r\nfunction webToHex(n) {\r\n  return n.replace('#', '0x');\r\n}\r\n\r\n/**\r\n * Converts a base16 color into a web color\r\n * @param n {Hex}               Base 16 Color, f.x. 0xFF0000\r\n * @return {Hex}                Web format color, f.x. #FF0000\r\n */\r\nfunction hexToWeb(n) {\r\n  return (`${n}`).replace('0x', '#');\r\n}\r\nfunction affirmWebRGB(rgba){\r\n  let hex = webToHex(rgba);\r\n  let col32 = hexToColor(hex);\r\n  hex = colorToHex(col32);\r\n  return hexToWeb(hex);\r\n}\r\n\r\n/**\r\n * Converts a hexadecimal color to an integer percentage\r\n * @param n {Hex}               Base 16 Color, f.x. 0x000000\r\n * @return {Integer}             f.x 0\r\n */\r\nfunction hexToPercent(n) {\r\n  return Math.ceil(n / 0xFFFFFF * 100);\r\n}\r\n\r\n/**\r\n * Wants a string in a 0x00000 format\r\n * Returns a Color32 in RGB format (no alpha channel unless present in the hex)\r\n * @param {string} hex \r\n */\r\nfunction hexToColor(hex) { //Wants a color in a 0x000000 format\r\n  var chunks = [];\r\n  var tmp,i;\r\n  hex = hex.substr(2); // remove the pound \r\n  if ( hex.length === 3){\r\n      tmp = hex.split(\"\");\r\n      for(i=0;i<3;i++){\r\n          chunks.push(parseInt(tmp[i]+\"\"+tmp[i],16));\r\n      }\r\n  }else if (hex.length === 6){\r\n      tmp = hex.match(/.{2}/g);\r\n      for(i=0;i<3;i++){\r\n          chunks.push(parseInt(tmp[i],16));\r\n      }\r\n  }\r\n  else if(hex.length==8){\r\n    tmp = hex.match(/.{2}/g);\r\n      for(i=0;i<4;i++){\r\n          chunks.push(parseInt(tmp[i],16));\r\n      }\r\n  }\r\n  else {\r\n      throw new Error(\"'\"+hex+\"' is not a valid hex format\");\r\n  }\r\n  var c = new _color32__WEBPACK_IMPORTED_MODULE_0__[\"default\"](chunks[0], chunks[1], chunks[2]);\r\n  if(chunks.length>3){c.a = chunks[3];}\r\n  return c;\r\n}\r\n/**\r\n * Returns a color in 0xffffff format\r\n * @param {Color32} color \r\n */\r\nfunction colorToHex(color) {\r\n \r\n   const a = GetHex(Math.floor(color.r / 16));\r\n   const b = GetHex(Math.round(color.r % 16));\r\n   const c = GetHex(Math.floor(color.g / 16));\r\n   const d = GetHex(Math.round(color.g % 16));\r\n   const e = GetHex(Math.floor(color.b / 16));\r\n   const f = GetHex(Math.round(color.b % 16));\r\n \r\n   const z = a + b + c + d + e + f;\r\n \r\n   return \"0x\" + z;\r\n}\r\nfunction GetHex (decimal) {\r\n\tlet alpha = \"0123456789ABCDEF\";\r\n\tlet out = \"\" + alpha[decimal];\r\n\treturn out;\r\n};\r\n\r\n/**\r\n * Converts an integer percent (0-100) to a hexadecimal greyscale color\r\n * @param n {Number}            0-100 numeric input\r\n * @return {Hex}                Base 16 format color, f.x. 0xFFFFFF\r\n */\r\nfunction percentToHex(n) {\r\n  let c = Math.ceil(n * 2.55).toString(16);\r\n  if (c.length === 1) c = `0${c}`;\r\n  c = `0x${c}${c}${c}`;\r\n  return c;\r\n}\r\n\r\n/**\r\n * Converts an object containing coordinate pair arrays into a single array of points for PIXI\r\n * @param hex {Object}  An object containing a set of [x,y] pairs\r\n */\r\nfunction hexObjsToArr(hex) {\r\n  const a = [];\r\n  hex.forEach((point) => {\r\n    a.push(point.x);\r\n    a.push(point.y);\r\n  });\r\n  // Append first point to end of array to complete the shape\r\n  a.push(hex[0].x);\r\n  a.push(hex[0].y);\r\n  return a;\r\n}\r\n\r\n/**\r\n * Dumps a render of a given pixi container or texture to a new tab\r\n */\r\nfunction pixiDump(tgt = null) {\r\n  canvas.app.render();\r\n  const data = canvas.app.renderer.extract.base64(tgt);\r\n  const win = window.open();\r\n  win.document.write(`<img src='${data}'/>`);\r\n}\r\n\r\n/**\r\n * Prints formatted console msg if string, otherwise dumps object\r\n * @param data {String | Object} Output to be dumped\r\n * @param force {Boolean}        Log output even if CONFIG.debug.betterdraw = false\r\n */\r\nfunction betterdrawLog(data, force = false) {\r\n  if (CONFIG.debug.betterdraw || force) {\r\n    // eslint-disable-next-line no-console\r\n    if (typeof data === 'string') console.log(`Betterdraw | ${data}`);\r\n    // eslint-disable-next-line no-console\r\n    else console.log('Betterdraw |', data);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets a single pixel of texture data from GPU\r\n * @param target {Object} PIXI Object to read from\r\n * @param x {Integer}     X Position to read\r\n * @param y {Integer}     Y Position to read\r\n */\r\nfunction readPixel(target, x = 0, y = 0) {\r\n  const { renderer } = canvas.app;\r\n  let resolution;\r\n  let renderTexture;\r\n  let generated = false;\r\n  if (target instanceof PIXI.RenderTexture) {\r\n    renderTexture = target;\r\n  }\r\n  else {\r\n    renderTexture = renderer.generateTexture(target);\r\n    generated = true;\r\n  }\r\n  if (renderTexture) {\r\n    resolution = renderTexture.baseTexture.resolution;\r\n    renderer.renderTexture.bind(renderTexture);\r\n  }\r\n  const pixel = new Uint8Array(4);\r\n  // read pixels to the array\r\n  const { gl } = renderer;\r\n  gl.readPixels(x * resolution, y * resolution, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n  if (generated) {\r\n    renderTexture.destroy(true);\r\n  }\r\n  return pixel;\r\n}\r\n\r\n/**\r\n * \r\n * @param {number} pixelsPerGrid \r\n * @param {number} textureWidth \r\n * @param {number} textureHeight\r\n */\r\nfunction calcGridImportSize(pixelsPerGrid, textureWidth, textureHeight, sceneWidth, sceneHeight){\r\n  //All of these are desired values^\r\n  //The only unit we count for here is 'pixel'. All incoming parameters are measured by that unit.\r\n  //The above parameters describe a *desired* bunch of settings, its out job to solve problems\r\n  //texture size doesnt need to change\r\n  //scene width does however rely on texture width and grid size\r\n\r\n  /* example: 5000w scene, 5000px texture, desired grid size = 1\r\n  grid size upped from 1 to 50\r\n  tex size remains at 5000px\r\n  scene size upped to 5000*50 = 25000\r\n  */\r\n\r\n  let sceneSize = { w: sceneWidth, h: sceneHeight };\r\n  const minGridSize = _layer_layerSettings__WEBPACK_IMPORTED_MODULE_2__[\"LayerSettings\"].FoundryMinGridSize(); //Foundry doesnt allow for grid sizes < 50px\r\n  if(pixelsPerGrid<minGridSize) \r\n  {\r\n    let f = minGridSize/pixelsPerGrid;\r\n    pixelsPerGrid = minGridSize;\r\n    //Upscale the scene rect size. A 10x10 px scene (where each px = 1 grid) now becomes a 500x500 px scene, where each grid = 50px\r\n    //Each grid would however still represent 1 pixel from the texture data itself\r\n    sceneSize.w = Math.ceil(sceneSize.w * f);\r\n    sceneSize.h = Math.ceil(sceneSize.h * f);\r\n  }\r\n  const sceneWidthInGrids = Math.ceil(sceneSize.w / pixelsPerGrid);\r\n  const sceneHeightInGrids = Math.ceil(sceneSize.h / pixelsPerGrid);\r\n  //According to above example, a 10x10 px scene that was upscaled to 500x500px means that (10 / (500 / 50)) = 1 texture pixel per grid\r\n  const texPixelsPerGrid = textureWidth / (sceneSize.w / pixelsPerGrid); //todo: x & y?\r\n  //todo: max grid size\r\n  //or if gridsize > tex size\r\n\r\n  return { texturePixelsPerGrid: texPixelsPerGrid,\r\n    scenePixelsPerGrid: pixelsPerGrid,\r\n    sceneSize: sceneSize,\r\n    texSize: {w:textureWidth, h:textureHeight},\r\n    sceneWidthInGrids:sceneWidthInGrids, sceneHeightInGrids: sceneHeightInGrids };\r\n}\r\n\r\n/**\r\n * Simple sleep method.\r\n * @param {number} ms \r\n */\r\nfunction sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms)); }\r\nfunction isNullNumber(number){return number==NaN||number==undefined||number==null;}\r\nfunction worldPosToPixelPos(worldPos){\r\n  //Point in worldspace to pixel on the scene canvas\r\n  //Used primarily in mouse cursor transformations\r\n  const l = canvas.drawLayer.layer.transform;\r\n  let pixelPos = {x:(worldPos.x-l.position.x)/l.scale.x, y:(worldPos.y-l.position.y)/l.scale.y};\r\n  return pixelPos;\r\n}\r\nfunction pixelPosToWorldPos(pixelPos)\r\n{\r\n  //Point on the scene canvas to point in worldspace\r\n  //Used primarily in mouse cursor transformations\r\n  const l = canvas.drawLayer.layer.transform;\r\n  let worldPos = {x:(pixelPos.x*l.scale.x)+l.position.x, y:(pixelPos.y*l.scale.y)+l.position.y};\r\n  return worldPos;\r\n}\r\n/**\r\n * @return {SimpleDrawLayer}\r\n */\r\nfunction getDrawLayer(){\r\n  return canvas.drawLayer; //SimpleDrawLayer\r\n}\r\n/**\r\n * \r\n * @param {boolean} interactable \r\n */\r\nfunction setLayerControlsInteractable(interactable){\r\n  getDrawLayer().showControls = interactable;\r\n}\r\n\r\n\r\nasync function redrawScene(){\r\n  const curScene = game.scenes.get(canvas.scene.data._id);\r\n  await canvas.draw(curScene);\r\n}\n\n//# sourceURL=webpack:///./js/helpers.js?");

/***/ }),

/***/ "./js/layer/drawlayer.js":
/*!*******************************!*\
  !*** ./js/layer/drawlayer.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DrawLayer; });\n/* harmony import */ var _drawing_pixelmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../drawing/pixelmap */ \"./js/drawing/pixelmap.js\");\n\r\nvar pixels = __webpack_require__(/*! image-pixels */ \"./node_modules/image-pixels/index.js\");\r\n\r\n\r\nclass DrawLayer extends CanvasLayer {\r\n\r\n    constructor(layername) {\r\n        super();\r\n        this.layername = layername;\r\n        this.pixelmap = new _drawing_pixelmap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](400,400);\r\n    }\r\n\r\n    get name(){return this.layername;}\r\n\r\n    async init() {\r\n        this._checkHealth();\r\n    }\r\n    async _checkHealth(){\r\n        this.pixelmap.checkHealth();\r\n        if(this.layer&& this.layer._destroyed){\r\n            console.error(\"drawLayer.layer seems to have been destroyed!\");\r\n            this.layer = undefined; //throw it away\r\n            //Create a new one\r\n        }\r\n        if(this.layer==undefined) {\r\n            this._createSubLayer();\r\n        }\r\n    }\r\n    async _createSubLayer() {\r\n        if(this.pixelmap.texture==undefined) { console.error(\"pixelmap texture is null!\"); return; }\r\n        if(this.pixelmap.texture.baseTexture===null){ console.error(\"pixelmap baseTexture is null!\"); return;}\r\n\r\n        this.layer = await new PIXI.Sprite(this.pixelmap.texture); //This is the rendered object in the scene which we will paint with pixel data\r\n        await this.addChild(this.layer); //It will be a child of this object\r\n        this.pixelmap.ApplyPixels();\r\n        this.SetVisible(this._cachedVisibility);\r\n    }\r\n\r\n    SetVisible(v) { this._cachedVisibility = v; this.layer.visible = v; }\r\n   /*  get visible() { return this.layer.visible; }\r\n    set visible(value) { this.layer.visible = value;} */\r\n\r\n    SetLayerObjSize(width, height)\r\n    {\r\n        this.layer.width = width; this.layer.height = height;\r\n    }\r\n\r\n\r\n    /**\r\n   * Actions upon layer becoming active\r\n   */\r\n    activate() {\r\n        super.activate();\r\n        this.interactive = true;\r\n    }\r\n\r\n    /**\r\n     * Actions upon layer becoming inactive\r\n     */\r\n    deactivate() {\r\n        super.deactivate();\r\n        this.interactive = false;\r\n    }\r\n\r\n    async draw() {\r\n        await super.draw();\r\n    }\r\n\r\n    \r\n    Reposition(){\r\n        let r = canvas.dimensions.sceneRect;\r\n        let l = canvas.drawLayer.layer;;\r\n        l.transform.scale.set(1,1);\r\n        l.x = r.x/l.parent.transform.scale.x;\r\n        l.y = r.y/l.parent.transform.scale.y;\r\n        l.width = r.width/l.parent.transform.scale.x;\r\n        l.height = r.height/l.parent.transform.scale.y;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/layer/drawlayer.js?");

/***/ }),

/***/ "./js/layer/layerSettings.js":
/*!***********************************!*\
  !*** ./js/layer/layerSettings.js ***!
  \***********************************/
/*! exports provided: LayerSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LayerSettings\", function() { return LayerSettings; });\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color32 */ \"./js/color32.js\");\n\r\nvar pixels = __webpack_require__(/*! image-pixels */ \"./node_modules/image-pixels/index.js\");\r\n\r\nclass LayerSettings{\r\n\r\n    static PIXIMaxTextureWidth(){return 12000;}\r\n    static FoundryMinGridSize(){return 50;}\r\n    /**\r\n     * Color in Web format (#FFFFFF)\r\n     */\r\n    static DefaultBackgroundColor(){return \"#FFFFFFFF\";}\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    static get pixelsPerGrid() {return LayerSettings._ppg;}\r\n     /**\r\n     * @param {Number} value\r\n     */\r\n    static set pixelsPerGrid(value) {LayerSettings._ppg = value;}\r\n     /**\r\n     * @returns {Number}\r\n     */\r\n    static get sceneWidthPerGrid() {return LayerSettings._swpg;}\r\n     /**\r\n     * @param {Number} value\r\n     */\r\n    static set sceneWidthPerGrid(value) {LayerSettings._swpg = value;}\r\n\r\n    /**\r\n     * Create layer settings based on a set number of grids, and how many pixels each grid is meant to contain\r\n     * @param {number} gridsX \r\n     * @param {number} gridsY \r\n     * @param {number} gridSizeTexturePixels \r\n     */\r\n    static ByGrids(gridsX, gridsY, gridSizeTexturePixels)\r\n    {\r\n        let s = new LayerSettings();\r\n        s.desiredGridSize = gridSizeTexturePixels;\r\n        s.sceneWidth = s.textureWidth = gridsX * gridSizeTexturePixels;\r\n        s.sceneHeight = s.textureWidth = gridsY * gridSizeTexturePixels;\r\n        return s;\r\n    }\r\n    /**\r\n     * Create layer settings based on a set number of grids, and how many pixels each grid is meant to contain\r\n     * @param {number} textureWidth \r\n     * @param {number} textureWidth \r\n     * @param {number} gridSizeTexturePixels \r\n     */\r\n    static ByTextureSize(textureWidth, textureHeight, gridSizeTexturePixels)\r\n    {\r\n        let s = new LayerSettings();\r\n        s.desiredGridSize = gridSizeTexturePixels;\r\n        //Not sure if this is right\r\n        s.sceneWidth = s.textureWidth = textureWidth;\r\n        s.sceneHeight = s.textureHeight = textureHeight;\r\n        return s;\r\n    }\r\n\r\n    constructor() //set default values\r\n    {\r\n        //Define the dimensions of the texture (in pixels) that we will be drawing on the background object later.\r\n        //Note that the background object will be scaled to fit the scene, so a small texture (16x16 pixels) will work with a 2400x2400 \"pixels\" scene, and vice versa.\r\n        this.textureWidth = 0; //width of the displayed texture (buffer), in pixels\r\n        this.textureHeight = 0; //height of the displayed texture (buffer), in pixels\r\n\r\n        //Define how big a grid will be in terms of texture pixels\r\n        this.desiredGridSize = 1; //in pixels\r\n\r\n        //Define how big the scene in Foundry will be.\r\n        //These values are best set to the same as textureWidth and textureHeight.\r\n        //Later on, we will probably end up upscaling these two values to something Foundry can manage\r\n        this.sceneWidth = 0; //width of the scene rect, in \"pixels\"\r\n        this.sceneHeight = 0; //height of the scene rect, in \"pixels\"\r\n\r\n        \r\n\r\n        //Settings to keep track of a saved image file, if there is any\r\n        this.hasImageFile = false; //Should we read from an image file somewhere?\r\n        this.imageFilename = \"\"; //Includes extension\r\n        this.hasSourceTexture = false;/* \r\n        this.buffer = []; //Contains texture pixel data. Will be filled with data whenever we load from an image file\r\n        this.bufferWidth = 0; //in pixels\r\n        this.bufferHeight = 0; //in pixels */\r\n        this.hasBuffer = false; //Should we load straight from the buffer instead of caring about a texture file somewhere?\r\n        \r\n        this.backgroundColor = LayerSettings.DefaultBackgroundColor();\r\n        this.isSetup = false;\r\n        this.isHidden = false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Create LayerSettings for loading an image file from a path\r\n     * @param {LayerSettings} settings \r\n     * @param {String} filename \r\n     */\r\n    static async LoadImage(settings, filename){\r\n\r\n        try{\r\n            var d = await LayerSettings._loadImg(filename); //Try to load the image file\r\n            if(d.buffer) { //If success, put buffer into settings\r\n                settings.buffer = d.buffer;\r\n                settings.hasBuffer = true;\r\n                settings.bufferWidth = d.bufferWidth;\r\n                settings.bufferHeight = d.bufferHeight;\r\n                settings.textureWidth = d.bufferWidth;\r\n            }\r\n        }\r\n        catch(exception) { //If fail\r\n            console.error(\"Failed to load image file \" + filename);\r\n            console.error(exception);\r\n            throw exception;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n    /**\r\n     * \r\n     * @param {{hasImageFile:boolean, sceneWidth:number, sceneHeight:number, desiredGridSize:number, imageFilename:string, backgroundColor:string}} settings \r\n     */\r\n    static async ParseSettings(settings) { //custom object\r\n        var s = null;\r\n        //If we defined a path to an image file\r\n        if(settings.hasImageFile) {\r\n            const n = settings.imageFilename;\r\n            if(n===null||n.length<1) { console.error(\"Settings does not include a path for the image!\"); s = new LayerSettings(); }\r\n            else { s = await this.LoadImage(settings, settings.imageFilename); } //Create settings around the buffer of an image file\r\n        }\r\n        else {\r\n            s = new LayerSettings();\r\n            //TODO: Rounding might be an issue here!\r\n            const maxSize = LayerSettings.PIXIMaxTextureWidth();\r\n            s.textureWidth = LayerSettings.clamp(settings.sceneWidth, 1, maxSize);\r\n            s.textureHeight = LayerSettings.clamp(settings.sceneHeight, 1, maxSize);\r\n        }\r\n        s.desiredGridSize = settings.desiredGridSize; //Define what preferred grid size we want (in pixels)\r\n        //scene width & height\r\n        s.sceneWidth = settings.sceneWidth;\r\n        s.sceneHeight = settings.sceneHeight;\r\n        s.backgroundColor = settings.backgroundColor;\r\n        s.isHidden = settings.isHidden;\r\n\r\n        return s;\r\n    }\r\n    /**\r\n     * Prepare LayerSettings based on a pixel buffer array.\r\n     * texWidth & texHeight must be defined in the settings object.\r\n     * @param {LayerSettings} settings \r\n     * @param {Uint8ClampedArray} buffer \r\n     */\r\n    static async LoadFromBuffer(settings, buffer, bufferWidth, bufferHeight) {\r\n        settings.buffer = buffer; //Load our buffer into the settings\r\n        settings.hasBuffer = true; //Mark down that we intend to use the buffer\r\n        //Mark down the size of the buffer\r\n        settings.bufferWidth = bufferWidth;\r\n        settings.bufferHeight = bufferHeight;\r\n\r\n        //Sanity check time\r\n        if(bufferWidth<1 || bufferHeight<1){console.error(\"Buffer dimensions (\"+bufferWidth+\"x\"+bufferHeight+\") are invalid!\");}\r\n        if(!buffer){console.error(\"Buffer is invalid!\");}\r\n        else if(buffer.length!=(bufferWidth*bufferHeight*4)){\r\n            console.error(\"Buffer did not match expected size. Buffer length was said to be (\"+bufferWidth+\"x\"+bufferHeight+\"px) x 4 bytes per pixel = \" + (bufferWidth*bufferHeight*4)+\", when infact the buffer length is \" + buffer.length);\r\n        }\r\n\r\n        return settings;\r\n    }\r\n/**\r\n * \r\n * @param {string} filename \r\n * @returns {{buffer:Uint8ClampedArray, bufferWidth:number, bufferHeight:number}}\r\n */\r\n    static async _loadImg(filename) {\r\n        var {data, width, height} = await pixels('/betterdraw/uploaded/'+filename);\r\n        console.log(\"Loaded texture size: \" + width+\"x\"+height);\r\n        return {buffer: data, bufferWidth: width, bufferHeight: height}\r\n    }\r\n    \r\n    static bufferToUint8ClampedArray(buffer){return Uint8ClampedArray.from({...buffer, length: Object.keys(buffer).length });}\r\n\r\n    clampSize(){\r\n        //If the desired settings are too large for Foundry to handle, we need to clamp them down to something more sensible\r\n\r\n        const maxWidthPixels = 25000;\r\n        const maxHeightPixels = 25000;\r\n        const maxPIXIWidth = LayerSettings.PIXIMaxTextureWidth();\r\n        const maxPIXIHeight = maxPIXIWidth;\r\n        const foundryMinGridSize = LayerSettings.FoundryMinGridSize();;\r\n        const actualGridSize = Math.max(this.desiredGridSize, foundryMinGridSize);\r\n        const minWidthPixels = actualGridSize * 1;\r\n        const minHeightPixels = actualGridSize * 1;\r\n        let desiredWidthPixels = this.sceneWidth;\r\n        let desiredHeightPixels = this.sceneHeight;\r\n\r\n        //What would the scene size be after grid scaling?\r\n        let desiredSceneWidthPixels = (this.sceneHeight / this.desiredGridSize * foundryMinGridSize);\r\n        let desiredSceneHeightPixels = (this.sceneHeight / this.desiredGridSize * foundryMinGridSize);\r\n\r\n        //Clamp to a reasonable size here\r\n        desiredSceneWidthPixels = LayerSettings.clamp(desiredSceneWidthPixels, minWidthPixels, maxWidthPixels); //Could use gridsize * something aswell\r\n        desiredSceneHeightPixels = LayerSettings.clamp(desiredSceneHeightPixels, minHeightPixels, maxHeightPixels);\r\n\r\n        //How many whole grids would this result in?\r\n        let desiredGridsX = desiredSceneWidthPixels % actualGridSize;\r\n        let desiredGridsY = desiredSceneHeightPixels % actualGridSize;\r\n\r\n        //We can then clamp it down to fit a integer number of grids\r\n        //desiredSceneWidthPixels = desiredGridsX * actualGridSize;\r\n        //desiredSceneHeightPixels = desiredGridsY * actualGridSize;\r\n\r\n        this.sceneWidth = desiredSceneWidthPixels;\r\n        this.sceneHeight = desiredSceneHeightPixels;\r\n    }\r\n    static clamp(value, min, max){\r\n        if(value<min){return min;}\r\n        if(value>max){return max;}\r\n        return value;\r\n    }\r\n\r\n    static DefaultSettings(){\r\n        let s = this.ByGrids(50,50,1);\r\n\r\n        console.log(\"Created settings:\");\r\n        console.log(s);\r\n        return s;\r\n    }\r\n    /**\r\n     * \r\n     * @param {LayerSettings} settings \r\n     */\r\n    static VerifySettingSanity(settings) {\r\n        if(settings==null){return false;}\r\n        if(settings.desiredGridSize==null){return false;}\r\n        if(settings.sceneWidth==null){return false;}\r\n        if(settings.sceneHeight==null){return false;}\r\n        return true;\r\n    }\r\n    static VerifyImageSanity(data){\r\n\r\n    }\r\n    /**\r\n     * \r\n     * @param {{type:string, color:Color32, cellBased:boolean, brushSize: number, x:number, y:number, width:number, height:number, xyCoords:{x:number, y:number}[]}[]} strokeParts\r\n     */\r\n    static VerifyStrokeDataSanity(strokeParts){\r\n        if(strokeParts==null||strokeParts.length<1){return false;}\r\n        for(let i = 0; i < strokeParts.length; ++i)\r\n        {\r\n            let p = strokeParts[i];\r\n            if(p==null){return false;}\r\n        }\r\n        return true;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/layer/layerSettings.js?");

/***/ }),

/***/ "./js/layer/simpledraw.js":
/*!********************************!*\
  !*** ./js/layer/simpledraw.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SimpleDrawLayer; });\n/* harmony import */ var _drawlayer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drawlayer.js */ \"./js/layer/drawlayer.js\");\n/* harmony import */ var _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools/toolsHandler.js */ \"./js/tools/toolsHandler.js\");\n/* harmony import */ var _serializiation_saveload_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../serializiation/saveload.js */ \"./js/serializiation/saveload.js\");\n/* harmony import */ var _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../netSyncer.js */ \"./js/netSyncer.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers.js */ \"./js/helpers.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass SimpleDrawLayer extends _drawlayer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    constructor(layername) {\r\n        super(layername);\r\n        this.isSetup = false;\r\n        this.interactable = false;\r\n        this.showControls = false; //Turns most scene control buttons related to this layer on, like brushes, hide/show, delete\r\n        this._cachedVisibility = false; //A cached value of visibility, which is also applied to the underlying PIXI object\r\n        \r\n        // Register event listerenrs\r\n        this._registerMouseListeners();\r\n        this._registerKeyboardListeners();\r\n        \r\n        this.pointer = 0;\r\n        this.gridLayout = {};\r\n        this.dragStart = { x: 0, y: 0 };\r\n        this.BRUSH_TYPES = {\r\n          ELLIPSE: 0,\r\n          BOX: 1,\r\n          ROUNDED_RECT: 2,\r\n          POLYGON: 3,\r\n        };\r\n        this.DEFAULTS = {\r\n            visible: false,\r\n            blurQuality: 2,\r\n            blurRadius: 5,\r\n            brushSize: 50,\r\n            brushOpacity: 1,\r\n        };\r\n\r\n        \r\n    }\r\n    async init(){\r\n        super.init();\r\n        this.isSetup = false;\r\n    }\r\n    /**\r\n     * @param {string} tool \r\n     */\r\n    setActiveTool(tool) {\r\n        _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].singleton.setActiveTool(tool);\r\n    }\r\n    \r\n    setCursorTint() {\r\n        _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].singleton.setToolCursorTint();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Aborts any active drawing tools\r\n     */\r\n    clearActiveTool() {\r\n    }\r\n    onLeaveDrawControl(){_tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].singleton.clearActiveTool();}\r\n\r\n     /**\r\n   * Adds the mouse listeners to the layer\r\n   */\r\n    _registerMouseListeners() {\r\n        this.addListener('pointerdown', this._pointerDown);\r\n        this.addListener('pointerup', this._pointerUp);\r\n        this.addListener('pointermove', this._pointerMove);\r\n        this.dragging = false;\r\n        this.brushing = false;\r\n    }\r\n    /**\r\n    * Adds the keyboard listeners to the layer\r\n    */\r\n    _registerKeyboardListeners() {\r\n    $(document).keydown((event) => {\r\n    // Only react if betterdraw layer is active\r\n        if (ui.controls.activeControl !== this.layername) return;\r\n        // Don't react if game body isn't target\r\n        if (!event.target.tagName === 'BODY') return;\r\n        /* if (event.which === 219 && this.activeTool === 'brush') {\r\n            const s = getUserSetting('brushSize');\r\n            this.setBrushSize(s * 0.8);\r\n        }\r\n        if (event.which === 221 && this.activeTool === 'brush') {\r\n            const s = getUserSetting('brushSize');\r\n            this.setBrushSize(s * 1.25);\r\n        } */\r\n\r\n        //debug, ctrl+s to test save the layer\r\n        if(event.which === 83 && event.ctrlKey) {\r\n            event.stopPropagation();\r\n            console.log(\"Saving layer...\");\r\n            Object(_serializiation_saveload_js__WEBPACK_IMPORTED_MODULE_2__[\"QuicksaveLayer\"])();\r\n        }\r\n\r\n        // React to ctrl+z\r\n        if (event.which === 90 && event.ctrlKey) {\r\n            event.stopPropagation();\r\n            _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__[\"NetSyncer\"].UndoLast();\r\n            //Send undo command to clients\r\n            _netSyncer_js__WEBPACK_IMPORTED_MODULE_3__[\"NetSyncer\"].CmdSendUndo();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Mouse handlers for canvas layer interactions\r\n     */\r\n    _pointerDown(e) {\r\n        if(!this.isSetup){return;}\r\n        // On left mouse button\r\n        if (e.data.button === 0) {\r\n            let data = this._cursorData(e);\r\n\r\n            this.op = true;\r\n            // Check active tool\r\n            const curTool = _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].singleton.curTool;\r\n            if(curTool==null){return;}\r\n            curTool.onPointerDown(data.p, data.pixelPos, e);\r\n            // Call _pointermove so single click will still draw brush if mouse does not move\r\n            this._pointerMove(e);\r\n        }\r\n        // On right button, cancel action\r\n        else if (e.data.button === 2) {\r\n        // Todo: Not sure why this doesnt trigger when drawing ellipse & box\r\n            if (['polygon', 'box', 'ellipse'].includes(this.activeTool)) {\r\n            this.clearActiveTool();\r\n            }\r\n        }\r\n    }\r\n    _pointerMove(e) {\r\n        if(!this.isSetup){return;}\r\n       \r\n        let data = this._cursorData(e);\r\n\r\n        const curTool = _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].singleton.curTool;\r\n        if(curTool==null) { return; }\r\n        curTool.onPointerMove(data.p, data.pixelPos, e);\r\n    }\r\n    _pointerUp(e) {\r\n        if(!this.isSetup){return;}\r\n        // Only react to left mouse button\r\n        if (e.data.button === 0) {\r\n            let data = this._cursorData(e);\r\n            const curTool = _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].singleton.curTool;\r\n            if(curTool==null){return;}\r\n            curTool.onPointerUp(data.p, data.pixelPos, e);\r\n        }\r\n    }\r\n    /** Returns mouse position in worldspace (p) and canvas space (pixelPos)\r\n     * @return {p:{x:number,y:number}, pixelPos:{x:number, y:number}}\r\n     */\r\n    _cursorData(e){\r\n         //Position in relation to drawLayer (used to position graphical object)\r\n        const p = e.data.getLocalPosition(canvas.drawLayer);\r\n        let r = canvas.dimensions.sceneRect;\r\n        //Pixel on the drawlayer (needs rounding)\r\n        let pixelPos = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_4__[\"worldPosToPixelPos\"])(p);\r\n\r\n        // Round positions to nearest pixel\r\n        //If we want to round to a square pixel, rounding down is more accurate, as the value only changes once the cursor moves onto a new pixel, not whenever it happens to be closer to the top-left of another pixel\r\n        pixelPos.x = Math.floor(pixelPos.x);\r\n        pixelPos.y = Math.floor(pixelPos.y);\r\n        return {p:p, pixelPos: pixelPos};\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./js/layer/simpledraw.js?");

/***/ }),

/***/ "./js/loadAction.js":
/*!**************************!*\
  !*** ./js/loadAction.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LoadAction; });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"./js/helpers.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.js */ \"./js/settings.js\");\n/* harmony import */ var _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layer/layerSettings.js */ \"./js/layer/layerSettings.js\");\n/* harmony import */ var _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tools/toolsHandler.js */ \"./js/tools/toolsHandler.js\");\n/* harmony import */ var _serializiation_saveload_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./serializiation/saveload.js */ \"./js/serializiation/saveload.js\");\nvar pixels = __webpack_require__(/*! image-pixels */ \"./node_modules/image-pixels/index.js\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass LoadAction {\r\n\r\n\r\n    constructor() {\r\n        LoadAction.IsUpdating = false;\r\n    }\r\n\r\n  /**\r\n   * Fills the DrawLayer with a texture, based on the settings.\r\n   * Rescales the grid and canvas if nessesary.\r\n   * @param {LayerSettings} settings \r\n   */\r\n    async Perform(settings) {\r\n        console.log(\"BetterDraw LoadAction\");\r\n        //Sanity check on incoming settings\r\n        if(Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"isNullNumber\"])(settings.sceneWidth)||settings.sceneWidth<1){console.error(\"LayerSettings.sceneWidth is invalid, aborting\"); this.logLayerSettings(settings); return;}\r\n        if(Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"isNullNumber\"])(settings.sceneHeight)||settings.sceneHeight<1){console.error(\"LayerSettings.sceneHeight is invalid, aborting\"); this.logLayerSettings(settings); return;}\r\n        if(Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"isNullNumber\"])(settings.textureWidth)||settings.textureWidth<1){console.error(\"LayerSettings.textureWidth is invalid, aborting\"); this.logLayerSettings(settings); return;}\r\n        if(Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"isNullNumber\"])(settings.textureHeight)||settings.textureHeight<1){console.error(\"LayerSettings.textureHeight is invalid, aborting\"); this.logLayerSettings(settings); return;}\r\n        if(Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"isNullNumber\"])(settings.desiredGridSize)||settings.desiredGridSize<1){console.error(\"LayerSettings.desiredGridSize is invalid, aborting\"); this.logLayerSettings(settings); return;}\r\n\r\n        /* Calculating Grid & Texture Size\r\n        We need to define how big the grid is in relation to the source texture.\r\n        The unit of measurement we are going to use here is 'pixels'.\r\n        One grid space = x amount of pixels (from the source texture) in width & height. (Hex grids will be a different problem, and are not supported yet). Since Foundry currently doesn't allow for gridsizes smaller then 50 pixels, we have to work around that problem, should it arise.\r\n        Here are a few scenarios:\r\n\r\n        A): We have a small texture, 100x100 pixels, and each pixel is meant to represent one grid space. This could be a simple dungeon someone drew out in 1-2 minutes, or possibly generated with an algorithm.\r\n        In this case, we would need to set the gridsize to 50px, and then upscale the texture by 50x, to 5000x5000 (more on that below).\r\n\r\n        B): We have a texture that is 300x300, and every 3x3 pixel area is meant to represent one grid space.\r\n        In this case, we would need to set the gridsize to 50px, and then upscale the texture by 16.66x(rounded up), to 5000x5000\r\n\r\n        C): This is an interesting one. We have the same 100x100 texture as A, but we want each grid space to represent 3x3 pixels. This would ofcourse not line up with the source texture, unless we rescale the entire texture beforehand, which is what we will do.\r\n        We take the source texture, and scale it up by 3x, to 300x300, using Nearest Neighbour sampling. The texture should look very much the same as before, but with each pixel being split into 9 pixels. From here, the procedure is identical to scenario B.\r\n\r\n        D): We have a massive texture that is 5000x5000, and we want each 100x100 pixel area to represent one grid space.\r\n        In this case, we can actually set the gridsize to 100px (Foundry allows this), and not need to rescale the source texture at all. If we for some reason had to, this might be a suitable moment to use Bilinear resampling, although Nearest Neighbour might do aswell, even with some loss of detail.\r\n\r\n        In conclusion, it seems like Nearest Neighbour resampling works the best in most usecases. This module is designed with scenarios A & B in mind, although scenario C might work aswell. Scenario D falls outside of the intended usecases, as if you have a texture that large, chances are you have an external map drawing tool that can quickly draw high resolution maps. In this case, it would probably be more convenient to use that tool instead, rather then trying to painstakingly mimic the artstyle with the admittedly limited paint tools that are included in this module.\r\n        */\r\n\r\n        //Calculate what size the grid and texture should be\r\n        let desiredGridSize = settings.desiredGridSize;\r\n        //Calculate what size the scene (and its grid) should be\r\n        const gridData = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"calcGridImportSize\"])(desiredGridSize,\r\n            settings.textureWidth, settings.textureWidth,\r\n            settings.sceneWidth, settings.sceneHeight);\r\n\r\n        let curScene = game.scenes.get(canvas.scene.data._id);\r\n        \r\n        //We might need to update the scene to fit the new desired specifications\r\n        //This is problematic, but we have functions that will kick in and try to repair any damage caused.\r\n        //Expect CanvasInit_On hook to be called.\r\n        //Non-GM clients obviously dont need to rescale the scene, this is only nessesary when the GM creates the initial layer object\r\n        let didRescale = false;\r\n        if(game.user.isGM) \r\n        {\r\n            canvas.drawLayer.isSetup=false;\r\n            didRescale = await this._rescaleWorld(gridData.scenePixelsPerGrid,\r\n                gridData.sceneWidthInGrids, gridData.sceneHeightInGrids, 0.05);\r\n        }\r\n        \r\n        \r\n        //Read the texture from the buffer, and scale it if nessesary\r\n        const sceneSize = gridData.sceneSize;\r\n        const texSize = gridData.texSize;\r\n        const layer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"getDrawLayer\"])();\r\n        const pm = layer.pixelmap;\r\n\r\n        if(didRescale) { await layer.init(); }\r\n        /*There are two ways we can use the loaded texture here\r\n\r\n        A): We simply load the source texture (not changing its size) and apply it on the sprite. The sprite then handles the rescaling of the texture.\r\n        Take into consideration what resampling mode to use: Bilinear or Nearest Neighbour?\r\n        Bilinear will look horrible if the source texture is low res, and the sprite is very big. The texture will appear quite stretched. It is therefore suggested that you use a large source texture with good detail when using Bilinear.\r\n        Nearest Neighbour attempts to keep the pixel sharpness of the texture, even when stretched out far. This is useful if you have a small source texture, and you want every pixel to represent one grid space or thereabouts.\r\n\r\n        B): We load the source texture, but actively rescale it ourself, before we hand it to a sprite. The rescaled texture is also cached, meaning this could possibly be quite taxing on the RAM.\r\n\r\n        For the moment, I am going to go with option A, since it keeps things simple. If I down the line want to do something like complex like Scenario C up in the 'Calculating Grid & Texture Size' section, option B might be better.\r\n        */\r\n\r\n        let fallback = false;\r\n        //If the settings claim to know of an image file, and doesnt already contain a buffer\r\n        if(settings.hasImageFile && !settings.hasBuffer && (settings.imageFilename!=null&&settings.imageFilename.length>0))\r\n        {\r\n            let buffer = null; let bufferWidth = 0; let bufferHeight = 0;\r\n            try { //Load the buffer\r\n                var {data, width, height} = await pixels('/betterdraw/uploaded/'+settings.imageFilename);\r\n                console.log(\"Loaded texture size: \" + width+\"x\"+height);\r\n                buffer = data; bufferWidth = width; bufferHeight = height; //Cache these so we can use them later\r\n            }\r\n            catch { fallback = true; console.error(\"Failed loading an image file at \" + settings.imageFilename); }\r\n            if(buffer!=null) //If getting the buffer was a success\r\n            {\r\n                try {\r\n                    //Read from this buffer, and apply them to the pixelmap\r\n                    const presampleTexture = false;\r\n                    if(!presampleTexture){ //Option A\r\n                        //We want the pixelmap to just cache the buffer as it is\r\n                        pm.ReadFromBuffer(buffer, bufferWidth, bufferHeight, true);\r\n                        console.log(\"Loaded source texture straight from buffer\");\r\n                    }\r\n                    else{ //Option B\r\n                        //We want the pixelmap to rescale the buffer and cache that\r\n                        pm.ReadFromBuffer_Scaled(buffer, bufferWidth, bufferHeight, texSize.w, texSize.h, true);\r\n                        console.log(\"Loaded source texture and scaled it to fit our layer\");\r\n                    }\r\n                }\r\n                catch { fallback = true; console.error(\"Failed to load the image buffer and apply it to the pixelmap\"); }\r\n            }\r\n            else{fallback = true;}\r\n        }\r\n        //If we only have a buffer stored in the LayerSettings, we can use that right now\r\n        else if(settings.hasBuffer) {\r\n            try { //Try reading the \r\n                pm.ReadFromBuffer(settings.buffer, settings.bufferWidth, settings.bufferHeight, true);\r\n            }\r\n            catch { fallback = true; console.error(\"Failed to load the image buffer and apply it to the pixelmap\"); }\r\n            \r\n        }\r\n        else{fallback = true;}\r\n\r\n        if(fallback) {\r\n            console.log(\"No source texture was defined, filling it in with the background color instead\");\r\n            if(settings.backgroundColor===null||settings.backgroundColor===undefined) //Fill in with white for now?\r\n            { settings.backgroundColor = \"#ffffff\"; console.log(\"Filled in with white, since no backgroundcolor was defined\");}\r\n            const col = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"hexToColor\"])(Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"webToHex\"])(settings.backgroundColor));\r\n            console.log(\"Reforming texture to \" + texSize.w + \", \" + texSize.h + \" pixels\");\r\n            pm.Reform(texSize.w, texSize.h, col, true);\r\n        }\r\n\r\n        Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"setLayerControlsInteractable\"])(true);\r\n        //Put a wait period here, to let Foundry do nessesary setup functions before we continue\r\n        await Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"sleep\"])(100);\r\n        //Now we can set the layer sprite as visible\r\n        layer.SetVisible(!settings.isHidden);\r\n        //And then ofcourse make sure it is properly positioned\r\n        layer.Reposition();\r\n        layer.isSetup = true; //Allows us to interact with the layer using the cursor\r\n        console.log(\"Layer.isSetup now true\");\r\n\r\n        //Cache some values in the LayerSettings, for quick access during runtime\r\n        _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_2__[\"LayerSettings\"].pixelsPerGrid = gridData.texturePixelsPerGrid;\r\n        _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_2__[\"LayerSettings\"].sceneWidthPerGrid = gridData.scenePixelsPerGrid;\r\n\r\n        //What settings to we want to save in the scene?\r\n        //The desired grid size, corrected to the actual grid size we will be using from now on (in pixels)\r\n        //Source texture size (also saved in the texture itself)\r\n        //The size of the scene\r\n\r\n        //Only the GM should be able to save\r\n        if(!game.user.isGM) { return; }\r\n        //We will just save the settings we were given, and next time we load, we recalculate them in the same way we just did\r\n        let saveImgFile = false;\r\n        if(saveImgFile){\r\n            let buffer = pm.texture.EncodeToPNG();\r\n            //Will clear strokes, and save the settings with HasImageFile set to true, along with the filename\r\n            let filename = await Object(_serializiation_saveload_js__WEBPACK_IMPORTED_MODULE_4__[\"SaveLayer\"])(settings, buffer, false, true); //Save the image file\r\n            settings.hasImageFile = true;\r\n            settings.imageFilename = filename;\r\n        }\r\n        //Lets save the settings, but to make sure we dont have some unnessesary filler data in there, lets create a new one and copy some values over\r\n        let newSettings = new _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_2__[\"LayerSettings\"]();\r\n        newSettings.desiredGridSize = settings.desiredGridSize;\r\n        newSettings.sceneWidth = settings.sceneWidth;\r\n        newSettings.sceneHeight = settings.sceneHeight;\r\n        newSettings.textureWidth = settings.textureWidth;\r\n        newSettings.textureHeight = settings.textureHeight;\r\n        newSettings.backgroundColor = settings.backgroundColor;\r\n        newSettings.hasImageFile = settings.hasImageFile;\r\n        newSettings.imageFilename = settings.imageFilename;\r\n        newSettings.isHidden = settings.isHidden;\r\n        await Object(_settings_js__WEBPACK_IMPORTED_MODULE_1__[\"setLayerSettings\"])(newSettings);\r\n    }\r\n    logLayerSettings(settings){\r\n        console.error(settings);\r\n    }\r\n\r\n    /**\r\n     * Very heavy function that updates the entire Foundry scene. Use only when nessesary.\r\n     * @param {number} pixelsPerGrid \r\n     * @param {number} sceneGridsX \r\n     * @param {number} sceneGridsY \r\n     * @param {number} paddingGrids\r\n     */\r\n    async _rescaleWorld(pixelsPerGrid, sceneGridsX, sceneGridsY, paddingGrids){\r\n        \r\n        //Sanity check on parameters\r\n        let curScene = game.scenes.get(canvas.scene.data._id);\r\n        const oldGridSize = curScene.data.grid;\r\n        const oldSceneWidth = curScene.data.width;\r\n        const oldSceneHeight = curScene.data.width;\r\n        const newSceneWidth = pixelsPerGrid*sceneGridsX;\r\n        const newSceneHeight = pixelsPerGrid*sceneGridsY;\r\n        const oldPadding = curScene.padding;\r\n        const setPadding = true;\r\n        let didRescale = false;\r\n        if(oldGridSize!=pixelsPerGrid||oldSceneWidth!=newSceneWidth||oldSceneHeight!=newSceneHeight||(setPadding && oldPadding!=paddingGrids))\r\n        {\r\n            didRescale = true;\r\n            this._preRescale();\r\n            LoadAction.IsUpdating = true;\r\n            console.log(\"Rescaling grid to \" + pixelsPerGrid + \"px...\");\r\n            //'width: value' will change scene dimension width\r\n            let data = {grid: pixelsPerGrid, width:pixelsPerGrid*sceneGridsX, height:pixelsPerGrid*sceneGridsY};\r\n            if(setPadding){data.padding = paddingGrids;}\r\n            await curScene.update(data);\r\n            LoadAction.IsUpdating = false;\r\n            console.log(\"Rescale complete\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _preRescale(){\r\n        _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].singleton.destroyToolCursors();\r\n        const drawLayer = Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"getDrawLayer\"])();\r\n        var l = drawLayer.layer;\r\n        if(l===null||l._destroyed){\r\n            console.error(\"drawLayer.layer is destroyed?\");\r\n        }\r\n        drawLayer.layer.destroy(true);\r\n        drawLayer.layer = undefined;\r\n       \r\n        drawLayer.pixelmap.RecreateTexture();\r\n    }\r\n    \r\n}\n\n//# sourceURL=webpack:///./js/loadAction.js?");

/***/ }),

/***/ "./js/netSyncer.js":
/*!*************************!*\
  !*** ./js/netSyncer.js ***!
  \*************************/
/*! exports provided: NetSyncer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NetSyncer\", function() { return NetSyncer; });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings */ \"./js/settings.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layer/layerSettings */ \"./js/layer/layerSettings.js\");\n/* harmony import */ var _loadAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loadAction */ \"./js/loadAction.js\");\n/* harmony import */ var _syncing_stroke__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./syncing/stroke */ \"./js/syncing/stroke.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers */ \"./js/helpers.js\");\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./color32 */ \"./js/color32.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nvar pixels = __webpack_require__(/*! image-pixels */ \"./node_modules/image-pixels/index.js\");\r\n\r\nclass NetSyncer {\r\n//Assumes there is only one GM in the session, and that he is authorative when it comes to drawing\r\n    /**\r\n     * Returns true if the local client is the GM.\r\n     */\r\n    static get isMaster() { return game.user.isGM; }\r\n\r\n    static ParseMessage(data){\r\n        switch(data.event){\r\n            case \"onClientJoin\": //A new client has just connected/reloaded their scene\r\n              if(NetSyncer.isMaster) { NetSyncer.onClientJoin(); }\r\n              break;\r\n            case \"strokeparts\":\r\n              NetSyncer.RpcStrokeUpdatesRecieved(data.parts);\r\n              break;\r\n            case \"layerCreated\": NetSyncer.RpcOnLayerCreated(data.sceneID); break;\r\n            case \"layerDestroyed\": NetSyncer.RpcOnLayerDestroyed(data.sceneID); break;\r\n            case \"texturerefreshed\": NetSyncer.onRecieveTexture(); break;\r\n            case \"undo\": NetSyncer.RpcSendUndo();\r\n            default: console.error(\"message event \" + data.event + \" is not recognized\"); break;\r\n          }\r\n    }\r\n\r\n    /**\r\n     * Called from the onReady hook in Foundry\r\n     */\r\n    static onReady() {\r\n        if(!NetSyncer.isMaster)\r\n        {\r\n            console.log(\"Telling GM that I just joined...\");\r\n            game.socket.emit('module.betterdraw', {event: \"onClientJoin\"});\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Called from the updateScene hook in Foundry\r\n     */\r\n    static onUpdateScene() {\r\n        //The GM has the authorative version of the texture already, no need to fetch it from sceneflags\r\n        if(NetSyncer.isMaster) { return; }\r\n        console.log(\"refresh texture\");\r\n        NetSyncer.refreshLayerTexture();\r\n    }\r\n    static async refreshLayerTexture() {\r\n        //Fetch layer info from sceneflags\r\n        const settings = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getLayerSettings\"])();\r\n        if(settings.active && settings.hasBuffer) {\r\n          //The layer is active, and a buffer has been cached\r\n          const buffer = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getSetting\"])(\"buffer\");\r\n          var bufferArray = _layer_layerSettings__WEBPACK_IMPORTED_MODULE_1__[\"LayerSettings\"].bufferToUint8ClampedArray(buffer);\r\n          const pixelmap = canvas.drawLayer.pixelmap;\r\n          console.log(pixelmap.width*pixelmap.height);\r\n          pixelmap.ReadFromBuffer(bufferArray, pixelmap.width, pixelmap.height, true);\r\n        }\r\n        else if(!settings.active) {\r\n            //Layer is not active. Do nothing.\r\n         }\r\n        else  {console.error(\"Layer did not have a buffer ready for us\");}\r\n    }\r\n    /**\r\n     * Called from the socket whenever a client in the session has loaded/reloaded their scene\r\n     */\r\n    static async onClientJoin() {\r\n        if(!NetSyncer.isMaster) { return; }\r\n        //A client (not the GM) has hotjoined the session\r\n        //GM does not need to do anything here, since the client will handle texture syncing themselves\r\n        //Client will load texture from server\r\n        //And then load strokes from scene flags, and apply them\r\n    }\r\n    static async onRecieveTexture() {\r\n        if(NetSyncer.isMaster) { return; }\r\n        //Recieved notice from the GM that the source layer image has been refreshed. Fetching it from the server...\r\n        var img = await NetSyncer.loadImageFile();\r\n        let settings = await Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getLayerSettings\"])();\r\n        //Refresh our local version of the layersettings (is there even such a thing as that?) to include the buffer from the source layerimage\r\n        let e = await _layer_layerSettings__WEBPACK_IMPORTED_MODULE_1__[\"LayerSettings\"].LoadFromBuffer(settings, img.buffer, img.width, img.height);\r\n        //Perform a loadaction, to refresh the layer object texture, and make sure everthing is ready to go\r\n        let task = new _loadAction__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        task.Perform(e);\r\n    }\r\n    static async loadImageFile() {\r\n        var {data, width, height} = await pixels('/betterdraw/uploaded/image.png');\r\n        //console.log(data);\r\n        return {buffer: data, width: width, height: height};\r\n    }\r\n\r\n    /**\r\n     * Called by the authorative client whenever a stroke has finished and its effects have been applied onto the pixelmap\r\n     */\r\n    static onStrokeEnd() {\r\n        if(!NetSyncer.isMaster) { return; }\r\n       \r\n        //this.updateSceneFlags(); //lazy\r\n    }\r\n   \r\n\r\n    /**\r\n    * \r\n    * @param {{type:string, color:Color32, brushSize:number cellBased:boolean, xyCoords:{x:number, y:number}[], x:number, y:number, width:number, height:number }[]} parts \r\n    */\r\n    static CmdSendStrokeUpdates(parts){\r\n        if(!NetSyncer.isMaster){return;}\r\n        //going to straightup just send the parts as they are\r\n        game.socket.emit('module.betterdraw', {event: \"strokeparts\", parts: parts});\r\n    }\r\n     /**\r\n    * \r\n    * @param {{type:string, color:Color32, brushSize:number cellBased:boolean, xyCoords:{x:number, y:number}[], x:number, y:number, width:number, height:number }[]} parts \r\n    */\r\n    static RpcStrokeUpdatesRecieved(parts){\r\n        if(NetSyncer.isMaster){return;}\r\n        //Tell the pixelmap to draw according to these instructions\r\n        //Todo: make a timestamp comparison, to make sure we arent drawing out-of-date instructions\r\n        let layer = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"getDrawLayer\"])();\r\n        layer.pixelmap.DrawStrokeParts(parts);\r\n    }\r\n\r\n   \r\n    /**\r\n    * Logs strokes to history, so they can be used in the Undo process later\r\n    * @param {Stroke[]} strokes\r\n    */\r\n    static LogPastStrokes(strokes)\r\n    {\r\n        if(!NetSyncer.isMaster){return;}\r\n        let strokeHistory = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getStrokes\"])(); //Existing array of Strokes\r\n        if(!strokeHistory) { strokeHistory = []; } //Create new array if none exists\r\n       \r\n\r\n        let a = []; //New, merged array of Strokes\r\n        for(let i = 0; i < strokeHistory.length; ++i) { a.push(strokeHistory[i]); }\r\n        for(let i = 0; i < strokes.length; ++i)\r\n        {\r\n            //const encoded = this._encodeStroke(strokes[i]);\r\n            a.push(strokes[i]);\r\n        }\r\n\r\n        Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"setStrokes\"])(a);\r\n    }\r\n\r\n    static CmdSendUndo(){\r\n        if(!NetSyncer.isMaster){return;}\r\n        this.UndoLast(); //Call it here on my local end\r\n        game.socket.emit('module.betterdraw', {event: \"undo\"});\r\n    }\r\n    static RpcSendUndo(){\r\n        if(NetSyncer.isMaster){return;}\r\n        this.UndoLast();\r\n    }\r\n    /**\r\n     * Undo the last stroke\r\n     */\r\n    static async UndoLast() {\r\n        let strokeHistory = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getStrokes\"])(); //Existing array of Strokes\r\n        if(!strokeHistory || strokeHistory.length<1) { return; } //Stroke histoy needs to exist\r\n        //Tell our client to rollback to base texture, then draw all strokes except the last one\r\n        //Get settings\r\n        let settings = await Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getLayerSettings\"])();\r\n        if(!settings) { return; } //Need layersettings to continue\r\n        let layer = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"getDrawLayer\"])();\r\n        //Settings should contain a reference to the base texture, we want the buffer from that\r\n        if(settings.hasImageFile) {\r\n            var {data, width, height} = await pixels('/betterdraw/uploaded/' + settings.imageFilename);\r\n            //Then we tell the pixelmap to load from the buffer\r\n            //warning: if base texture size and pixelmap size dont match, we might have a problem\r\n            //could use readfrombuffer_scaled\r\n            let buffer = Uint8ClampedArray.from(data);\r\n            layer.pixelmap.ReadFromBuffer(buffer, width, height, false); //dont apply pixels yet\r\n        }\r\n        //if we cant get ahold of the base texture (we should), then see if the settings has a backgroundcolor, and create a buffer from that\r\n        else {\r\n            //Fill the entire texture with the background color\r\n            layer.pixelmap.DrawRect(0,0, layer.pixelmap.width, layer.pixelmap.height, Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"hexToColor\"])(Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"webToHex\"])(settings.backgroundColor)), false); //Dont apply yet\r\n        }\r\n        \r\n        strokeHistory.splice(strokeHistory.length-1, 1); //Remove the latest stroke from the history\r\n        //Draw the strokes onto the pixelmap\r\n        layer.pixelmap.DrawStrokeParts(strokeHistory, false);\r\n        layer.pixelmap.ApplyPixels(); //and apply\r\n    }\r\n    static CmdSendRedo(){\r\n        if(!NetSyncer.isMaster){return;}\r\n        game.socket.emit('module.betterdraw', {event: \"redo\"});\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {boolean} visible \r\n     */\r\n    static async CmdSetVisible(visible){\r\n        if(!NetSyncer.isMaster){return;}\r\n        //Change on my end first\r\n        const l = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"getDrawLayer\"])(); l.SetVisible(visible);\r\n        //Save it in the layer settings\r\n        let settings = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getLayerSettings\"])();\r\n        if(settings!=null && (settings.isHidden == undefined || settings.isHidden == visible))\r\n        {\r\n            settings.isHidden = !visible;\r\n            console.log(\"Saving visibility setting...\");\r\n            await Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"setLayerSettings\"])(settings);\r\n        }\r\n        game.socket.emit('module.betterdraw', {event: \"setvis\", value: visible});\r\n    }\r\n    static RpcSetVisible(visible){\r\n        if(NetSyncer.isMaster){return;}\r\n        const l = Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"getDrawLayer\"])(); l.SetVisible(visible);\r\n    }\r\n\r\n    static CmdOnLayerCreated() {\r\n        if(!NetSyncer.isMaster){return;}\r\n        let sceneID = canvas.scene.id;\r\n        game.socket.emit('module.betterdraw', {event: \"layerCreated\", sceneID: sceneID});\r\n    }\r\n    static RpcOnLayerCreated(sceneID){\r\n        if(NetSyncer.isMaster){return;}\r\n        //Only redraw if i am on the same scene as the one that just had its layer created\r\n        console.log(\"Recieved onlayercreated\");\r\n        let mySceneID = (canvas? (canvas.scene? canvas.scene.id : undefined) : undefined);\r\n        if(mySceneID==undefined || mySceneID==sceneID) { Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"redrawScene\"])();}\r\n    }\r\n    static CmdOnLayerDestroyed() {\r\n        if(!NetSyncer.isMaster){return;}\r\n        let sceneID = canvas.scene.id;\r\n        game.socket.emit('module.betterdraw', {event: \"layerDestroyed\", sceneID: sceneID});\r\n    }\r\n    static RpcOnLayerDestroyed(sceneID){\r\n        if(NetSyncer.isMaster) { return; }\r\n        //Only redraw if i am on the same scene as the one that just had its layer destroyed\r\n        console.log(\"Recieved onlayerdestroyed\");\r\n        let mySceneID = (canvas? (canvas.scene? canvas.scene.id : undefined) : undefined);\r\n        if(mySceneID==undefined || mySceneID==sceneID) { Object(_helpers__WEBPACK_IMPORTED_MODULE_4__[\"redrawScene\"])();}\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/netSyncer.js?");

/***/ }),

/***/ "./js/serializiation/saveload.js":
/*!***************************************!*\
  !*** ./js/serializiation/saveload.js ***!
  \***************************************/
/*! exports provided: SaveLayer, QuicksaveLayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SaveLayer\", function() { return SaveLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QuicksaveLayer\", function() { return QuicksaveLayer; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../layer/layerSettings */ \"./js/layer/layerSettings.js\");\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * @param {LayerSettings} settings \r\n * @param {any} buffer \r\n * @param {boolean} saveSettings \r\n * @param {boolean} deleteStrokes \r\n */\r\nasync function SaveLayer(settings, buffer, saveSettings=true, deleteStrokes=true) {\r\n    //We will save this layer as an image file\r\n    //We will name the image file after the unique id of the scene, to avoid naming conflicts\r\n    const id = canvas.scene.data._id;\r\n    const filename = id + \".png\"\r\n    \r\n    //The scene flags need to know that we have an image saved, and the name of the image\r\n    settings.hasImageFile = true;\r\n    settings.imageFilename = filename;\r\n    console.log(\"Settings that are being saved alongside texture: \");\r\n    console.log(settings);\r\n    if(saveSettings){ await Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setLayerSettings\"])(settings);}\r\n\r\n    //Clear any strokes saved to scene flags, as they wont be needed anymore once we have saved the image\r\n    //Note: this means we cannot undo the strokes once the image has been saved!\r\n    if(deleteStrokes){ await Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setStrokes\"])(null); }\r\n\r\n    //Then save the image (png for now)\r\n    const dataPath = \"betterdraw/uploaded\";\r\n    console.log(\"Saving image file...\");\r\n    await savePNG(buffer, filename, dataPath);\r\n    return filename;\r\n}\r\nasync function QuicksaveLayer() {\r\n    //Scene flags should tell us where to quicksave to\r\n    let settings = await Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"getLayerSettings\"])();\r\n    const drawLayer = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"getDrawLayer\"])();\r\n    let buffer = drawLayer.pixelmap.texture.EncodeToPNG();\r\n    SaveLayer(settings, buffer);\r\n}\r\nasync function savePNG(buffer, fileName, path){\r\n    const file = new File([buffer], fileName, {type: \"image/png\"});\r\n    await saveInData(file, path);\r\n}\r\nasync function saveInData(file, localPath) { //localPath can be like: 'betterdraw/uploaded'\r\n    var source = \"data\";\r\n    let response;\r\n    if (file.isExternalUrl) { response = {path: file.url}}\r\n    else { response = await FilePicker.upload(source, localPath, file, {}); }\r\n    console.log(response);\r\n}\n\n//# sourceURL=webpack:///./js/serializiation/saveload.js?");

/***/ }),

/***/ "./js/settings.js":
/*!************************!*\
  !*** ./js/settings.js ***!
  \************************/
/*! exports provided: getSetting, getSceneFlag, setSceneFlag, setSetting, getUserSetting, setUserSetting, defaultSettings, brushSizeIsDiameter, getFoundrySceneSettings, setStrokes, getStrokes, getLayerSettings, getLayerSettingsSync, setLayerSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSetting\", function() { return getSetting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSceneFlag\", function() { return getSceneFlag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSceneFlag\", function() { return setSceneFlag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSetting\", function() { return setSetting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUserSetting\", function() { return getUserSetting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setUserSetting\", function() { return setUserSetting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultSettings\", function() { return defaultSettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"brushSizeIsDiameter\", function() { return brushSizeIsDiameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFoundrySceneSettings\", function() { return getFoundrySceneSettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setStrokes\", function() { return setStrokes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStrokes\", function() { return getStrokes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayerSettings\", function() { return getLayerSettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayerSettingsSync\", function() { return getLayerSettingsSync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setLayerSettings\", function() { return setLayerSettings; });\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layer/layerSettings */ \"./js/layer/layerSettings.js\");\n\r\n\r\nfunction getSetting(name) {\r\n    let setting = getSceneFlag(name);\r\n    if (setting === undefined) setting = getUserSetting(name);\r\n    if (setting === undefined) setting = defaultSettings()[name];\r\n    return setting;\r\n}\r\nfunction getSceneFlag(name) { return canvas.scene.getFlag(\"betterdraw\", name); }\r\nasync function setSceneFlag(name, value) {\r\n  const v = await canvas.scene.setFlag(\"betterdraw\", name, value);\r\n  return v;\r\n}\r\n\r\nasync function setSetting(name, value) {\r\n    const v = await setSceneFlag(name, value); return v;\r\n}\r\nfunction getUserSetting(name) {\r\n    let setting = game.user.getFlag(\"betterdraw\", name);\r\n    if (setting === undefined) { setting = defaultSettings()[name]; }\r\n    return setting;\r\n}\r\nasync function setUserSetting(name, value) {\r\n    const v = await game.user.setFlag(\"betterdraw\", name, value);\r\n    return v;\r\n}\r\nfunction defaultSettings(){\r\n    const defaults = {\r\n        visible: false,\r\n        blurQuality: 2,\r\n        blurRadius: 5,\r\n        brushSize: 50,\r\n        brushOpacity: 1,\r\n    };\r\n    return defaults;\r\n}\r\nfunction brushSizeIsDiameter() { return true; }\r\n\r\nfunction getFoundrySceneSettings() {\r\n    let dims = canvas.dimensions;\r\n    console.log(canvas);\r\n    return { width: dims.sceneWidth, height: dims.sceneHeight,  rect: dims.sceneRect, paddingX: dims.paddingX, paddingY: dims.paddingY};\r\n}\r\nasync function setStrokes(data) {\r\n  await setSetting(\"strokes\", data);\r\n}\r\n/**\r\n * @returns {{type:string, color:Color32, cellBased:boolean, brushSize: number, x:number, y:number, width:number, height:number, xyCoords:{x:number, y:number}[]}[]}\r\n */\r\nfunction getStrokes() {\r\n  return getSetting(\"strokes\");\r\n}\r\n/**\r\n * @returns {LayerSettings}\r\n */\r\nasync function getLayerSettings() {\r\n  let s = await getSceneFlag(\"drawlayerinfo\"); return s;\r\n}\r\nfunction getLayerSettingsSync() {\r\n  let s = getSceneFlag(\"drawlayerinfo\"); return s;\r\n}\r\n  /**\r\n * @param {LayerSettings} settings\r\n */\r\nasync function setLayerSettings(settings) {\r\n  await setSceneFlag(\"drawlayerinfo\", settings);\r\n}\n\n//# sourceURL=webpack:///./js/settings.js?");

/***/ }),

/***/ "./js/syncing/paintSyncer.js":
/*!***********************************!*\
  !*** ./js/syncing/paintSyncer.js ***!
  \***********************************/
/*! exports provided: PaintSyncer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PaintSyncer\", function() { return PaintSyncer; });\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color32 */ \"./js/color32.js\");\n/* harmony import */ var _netSyncer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../netSyncer */ \"./js/netSyncer.js\");\n/* harmony import */ var _stroke__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stroke */ \"./js/syncing/stroke.js\");\n\r\n\r\n\r\n\r\nclass PaintSyncer {\r\n\r\n    \r\n    constructor() {\r\n        /**\r\n        * @type {Stroke[]}\r\n        */\r\n        this.strokes = [];\r\n    }\r\n    /**\r\n     * @return {Stroke}\r\n     */\r\n    get activeStroke() {return this.strokes[this.strokes.length-1];}\r\n    /**\r\n     * Creates a new stroke using provided parameters, making it the active one.\r\n     * @param {string} type\r\n     * @param {Color32} color \r\n     * @param {number} brushSize \r\n     * @param {boolean} cellBased\r\n     */\r\n    LogStrokeStart(type, color, brushSize, cellBased=false) {\r\n        this.strokes.forEach(function(s){s.isActive=false;});\r\n        var stroke = new _stroke__WEBPACK_IMPORTED_MODULE_2__[\"Stroke\"](type, brushSize, color, cellBased);\r\n        stroke.isActive = true;\r\n        this.strokes.push(stroke);\r\n    }\r\n    /**\r\n     * Log a point in the stroke using integer pixel coordinates.\r\n     * @param {number} x \r\n     * @param {number} y \r\n     */\r\n    LogStrokeStep(x, y) {\r\n        if(this.strokes.length<1) { console.error(\"No active stroke to add steps to\"); return; }\r\n        this.activeStroke.AddCoords({x:x, y:y});\r\n    }\r\n    /**\r\n     * Mark the active stroke as having ended.\r\n     */\r\n    LogStrokeEnd(){\r\n        if(this.strokes.length<1){return;}\r\n        this.activeStroke.isActive = false;\r\n        _netSyncer__WEBPACK_IMPORTED_MODULE_1__[\"NetSyncer\"].onStrokeEnd();\r\n    }\r\n    /**\r\n     * Creates a new RectStroke and makes it the active one.\r\n     * @param {number} fromX \r\n     * @param {number} fromY \r\n     * @param {number} width \r\n     * @param {number} height\r\n     * @param {number} brushSize \r\n     * @param {Color32} color \r\n     */\r\n    LogRect(fromX, fromY, width, height, brushSize, color){\r\n        let cellBased = false;\r\n        this.strokes.forEach(function(s) { s.isActive=false; });\r\n        var stroke = new _stroke__WEBPACK_IMPORTED_MODULE_2__[\"RectStroke\"](\"rect\", brushSize, color, cellBased, fromX, fromY, width, height);\r\n        stroke.isActive = false; //Stroke is already done\r\n        this.strokes.push(stroke);\r\n\r\n    }\r\n    /**\r\n     * Retrieves parts of a stroke that are ready for rendering or syncing across the network\r\n     * @return {{type:string, color:Color32, cellBased:boolean}[]}\r\n     */\r\n    GetReadyStrokeParts() {\r\n        var parts = [];\r\n        //Try to find strokes or parts of strokes that are waiting to be synced across the network\r\n        //Start from the oldest ones\r\n        for(let i = 0; i < this.strokes.length; ++i)\r\n        {\r\n            let stroke = this.strokes[i];\r\n            if(stroke.type==\"circle\") {\r\n                //We need type, xycoords, color, brushsize, and cellbased boolean\r\n                //Once we have fetched all the xycoords with stroke.GetSteps, it will set itself as expired\r\n                parts.push({type: stroke.type, xyCoords: stroke.GetSteps(), color: stroke.color, brushSize: stroke.brushSize, cellBased: stroke.cellBased});\r\n            }\r\n            else if(stroke.type==\"grid\") {\r\n                //We need type, xycoords, color, brushsize\r\n                //Once we have fetched all the xycoords with stroke.GetSteps, it will set itself as expired\r\n                parts.push({type: stroke.type, brushSize: stroke.brushSize, xyCoords: stroke.GetSteps(), color: stroke.color });\r\n            }\r\n            else if(stroke.type == \"rect\") {\r\n                //We need type, x, y, width, height, color, and cellbased boolean\r\n                parts.push({type: stroke.type, x: stroke.x, y: stroke.y, width: stroke.width, height: stroke.height, color: stroke.color, cellBased: stroke.cellBased});\r\n                //Since rect strokes dont have a GetSteps function, we need to set the expired value manually\r\n                //We can set it here already, since we already fetched all the info we needed\r\n                stroke.expired = true;\r\n            }\r\n            else if(stroke.type==undefined){console.error(\"Brush does not have a designated type!\");}\r\n            else{console.error(\"Did not recognize a brush of type \" + stroke.type); console.log(stroke);}\r\n\r\n        }\r\n        //Delete expired && inactive strokes, and log them to history (enabled Undo for them)\r\n        let removed = [];\r\n        for(let i = 0; i < this.strokes.length; i++)\r\n        {\r\n            //Check that stroke isnt null?\r\n            if(this.strokes[i].expired && !this.strokes[i].isActive){\r\n                removed = removed.concat(this.strokes.splice(i, 1)); i = i-1;\r\n            }\r\n        }\r\n        if(removed.length>0) { _netSyncer__WEBPACK_IMPORTED_MODULE_1__[\"NetSyncer\"].LogPastStrokes(removed); }\r\n        return parts;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/syncing/paintSyncer.js?");

/***/ }),

/***/ "./js/syncing/stroke.js":
/*!******************************!*\
  !*** ./js/syncing/stroke.js ***!
  \******************************/
/*! exports provided: Stroke, RectStroke */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stroke\", function() { return Stroke; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RectStroke\", function() { return RectStroke; });\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color32 */ \"./js/color32.js\");\n\r\n\r\nclass Stroke {\r\n\r\n    /**\r\n     * @param {string} type\r\n     * @param {number} brushSize \r\n     * @param {Color32} color \r\n     * @param {boolean} cellBased \r\n     */\r\n    constructor(type, brushSize, color, cellBased){\r\n        this.type = type;\r\n        this.brushSize = brushSize;\r\n        this.color = color;\r\n        this.cellBased = cellBased;\r\n        this.isActive = true;\r\n        /**@type {{x:number, y:number}[]} */\r\n        this.xyCoords = [];\r\n        this.timestamp = 0;\r\n        this.parseIndex = 0;\r\n        this.expired = false;\r\n    }\r\n    /**\r\n     * Add an integer pixel coordinate to the stroke\r\n     * @param {{x:number,y:number}} pos \r\n     */\r\n    AddCoords(pos) { //object with integer x & y parameters\r\n        this.xyCoords.push(pos);\r\n    }\r\n    /**\r\n     * Fetches an array of integer pixel coordinates stored in the stroke. Can optionally delete these coordinates from the original array before returning them.\r\n     * @param {boolean} deleteAfterwards \r\n     * @return {{x:number, y:number}[]}\r\n     */\r\n    GetSteps() {\r\n        const toParse = this.xyCoords.length - this.parseIndex;\r\n        const steps = this.xyCoords.slice(this.parseIndex, this.parseIndex+toParse);\r\n        this.parseIndex = this.parseIndex + toParse;\r\n        this.expired = this.parseIndex >= this.xyCoords.length;\r\n        return steps;\r\n    }\r\n    get empty(){ return this.xyCoords.length<1 || this.expired; }\r\n}\r\nclass RectStroke extends Stroke {\r\n    /**\r\n     * \r\n     * @param {string} type \r\n     * @param {number} brushSize \r\n     * @param {Color32} color \r\n     * @param {boolean} cellBased \r\n     * @param {number} fromX \r\n     * @param {number} fromY \r\n     * @param {number} width \r\n     * @param {number} height \r\n     */\r\n    constructor(type, brushSize, color, cellBased, fromX, fromY, width, height) {\r\n        super(type, brushSize, color, cellBased);\r\n        this.x = fromX;\r\n        this.y = fromY;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.expired = false;\r\n    }\r\n    get empty() { return this.expired || this.width<1 || this.height<1;}\r\n}\n\n//# sourceURL=webpack:///./js/syncing/stroke.js?");

/***/ }),

/***/ "./js/tools/brushTool.js":
/*!*******************************!*\
  !*** ./js/tools/brushTool.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BrushTool; });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _drawTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawTool */ \"./js/tools/drawTool.js\");\n/* harmony import */ var _toolsHandler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toolsHandler */ \"./js/tools/toolsHandler.js\");\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color32 */ \"./js/color32.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../layer/layerSettings */ \"./js/layer/layerSettings.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BrushTool extends _drawTool__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\r\n    \r\n    constructor(name, type){ //string\r\n        super(name);\r\n        this.type = type;\r\n        this.lastPos = {x:-9999,y:-9999};\r\n        this.brushColor = new _color32__WEBPACK_IMPORTED_MODULE_4__[\"default\"](255,0,0,255);\r\n        this.brushSize = 1;\r\n    }\r\n\r\n    onPointerDown(p, pixelPos,e) {\r\n        let color = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushColor');\r\n        if(color==undefined) { color = \"#ff0000\" };\r\n        color = Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"webToHex\"])(color);\r\n        color = _color32__WEBPACK_IMPORTED_MODULE_4__[\"default\"].fromHex(color);\r\n        this.brushColor = color;\r\n        this.brushSize = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushSize');\r\n\r\n        if(!this.op) { this.beginStroke(); }\r\n        this.op = true;\r\n        \r\n    }\r\n    onPointerMove(p, pixelPos, e) {\r\n        const size = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushSize');\r\n        //Move the brush cursor object\r\n        const cursorObj = this.getCursorObj();\r\n        this.positionCursor(cursorObj, p.x, p.y, size, size);\r\n\r\n        //If we have begun our stroke\r\n        if (this.op) {\r\n            if(pixelPos.x==this.lastPos.x && pixelPos.y==this.lastPos.y){ this.lastPos = {x:pixelPos.x, y:pixelPos.y}; return;} //Simple checker to make sure that cursor has moved\r\n            this.lastPos = {x:pixelPos.x, y:pixelPos.y};\r\n            //Add these coordinates to the stroke\r\n            this.syncer.LogStrokeStep(pixelPos.x, pixelPos.y);\r\n        }\r\n    }\r\n    onPointerUp(p, pixelPos,e) {\r\n        this.interruptStroke();\r\n        this.op = false;\r\n    }\r\n    getCursorObj(){\r\n        return _toolsHandler__WEBPACK_IMPORTED_MODULE_3__[\"default\"].singleton.getToolCursor(\"ellipse\");\r\n    }\r\n\r\n    beginStroke() {\r\n        this.op = true;\r\n        const isCellMode = false; //find from somewhere\r\n        const brushSize = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushSize');\r\n        if(!this.brushColor){console.log(\"BrushColor is undefined!\");}\r\n        //Start a new stroke. We will add coordinates to this stroke with LogStrokeStep later\r\n        this.syncer.LogStrokeStart(this.type, this.brushColor, brushSize);\r\n    }\r\n    interruptStroke(){\r\n        if(this.op){ this.syncer.LogStrokeEnd(); } //logHistory();\r\n        this.op = false;\r\n    }\r\n    positionCursor(cursor, x, y, width, height){\r\n        cursor.transform.scale.x = 1;\r\n        cursor.transform.scale.y = 1;\r\n        cursor.width = ((width * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.x) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].pixelsPerGrid;\r\n        cursor.height = ((height * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.y) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].pixelsPerGrid;\r\n        cursor.x = x;\r\n        cursor.y = y;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/tools/brushTool.js?");

/***/ }),

/***/ "./js/tools/drawTool.js":
/*!******************************!*\
  !*** ./js/tools/drawTool.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DrawTool; });\n/* harmony import */ var _toolsHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toolsHandler */ \"./js/tools/toolsHandler.js\");\n\r\n\r\n/**\r\n * Base class for tools related to drawing. Meant to be extended.\r\n */\r\nclass DrawTool {\r\n\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    onPointerDown(p, pixelPos, e){\r\n        \r\n    }\r\n    onPointerMove(p, pixelPos, e){\r\n\r\n    }\r\n    onPointerUp(p, pixelPos, e){\r\n        \r\n    }\r\n\r\n    get syncer() { return _toolsHandler__WEBPACK_IMPORTED_MODULE_0__[\"default\"].singleton.syncer;}\r\n}\n\n//# sourceURL=webpack:///./js/tools/drawTool.js?");

/***/ }),

/***/ "./js/tools/eyedropperTool.js":
/*!************************************!*\
  !*** ./js/tools/eyedropperTool.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EyedropperTool; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n/* harmony import */ var _ui_BrushControls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/BrushControls */ \"./js/ui/BrushControls.js\");\n\r\n\r\n\r\n\r\nclass EyedropperTool {\r\n\r\n\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    onPointerDown(p, pixelPos, e){\r\n        //Sample\r\n        let pm = canvas.drawLayer.pixelmap;\r\n        let pi = pm.GetPixel(pixelPos.x, pixelPos.y);\r\n        let hex = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"colorToHex\"])(pi);\r\n        let web = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"hexToWeb\"])(hex);\r\n        Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setUserSetting\"])('brushColor', web);\r\n        _ui_BrushControls__WEBPACK_IMPORTED_MODULE_2__[\"default\"].singleton.refreshColor(web);\r\n    }\r\n    onPointerMove(p, pixelPos, e){\r\n\r\n    }\r\n    onPointerUp(p, pixelPos, e){\r\n        \r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/tools/eyedropperTool.js?");

/***/ }),

/***/ "./js/tools/gridBrushTool.js":
/*!***********************************!*\
  !*** ./js/tools/gridBrushTool.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GridBrushTool; });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _brushTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./brushTool */ \"./js/tools/brushTool.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../layer/layerSettings */ \"./js/layer/layerSettings.js\");\n/* harmony import */ var _toolsHandler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./toolsHandler */ \"./js/tools/toolsHandler.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass GridBrushTool extends _brushTool__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\r\n    \r\n    constructor(name, type){ //string\r\n        super(name, type);\r\n        \r\n    }\r\n    resetLastPos() { this.lastPos = {x:-9999, y:-9999};}\r\n\r\n    beginStroke(){\r\n        this.op = true;\r\n        const brushSize = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushSize');\r\n        if(!this.brushColor){console.log(\"BrushColor is undefined!\");}\r\n\r\n        this.syncer.LogStrokeStart(this.type, this.brushColor, brushSize, true);\r\n    }\r\n    onPointerMove(p, pixelPos, e) {\r\n        const size = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushSize');\r\n        //Todo: cursor object\r\n        const cursorObj = _toolsHandler__WEBPACK_IMPORTED_MODULE_4__[\"default\"].singleton.getToolCursor(\"grid\");\r\n\r\n        const wp = Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"pixelPosToWorldPos\"])(pixelPos);\r\n        this.positionCursor(cursorObj, wp.x, wp.y, size, size);\r\n\r\n        //If we have begun our stroke\r\n        if (this.op) {\r\n            const gridSize = _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].pixelsPerGrid;\r\n            if(Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"isNullNumber\"])(gridSize)) {console.error(\"LayerSettings.pixelsPerGrid is invalid!\" + gridSize); }\r\n            const gridX = Math.floor(pixelPos.x / gridSize);\r\n            const gridY = Math.floor(pixelPos.y / gridSize);\r\n\r\n            //Check that the cursor has moved to another grid before we log another step\r\n            if(gridX==this.lastPos.x && gridY==this.lastPos.y) { return; }\r\n            this.lastPos = {x:gridX, y:gridY};\r\n\r\n            //Log a step in the stroke\r\n            this.syncer.LogStrokeStep(gridX, gridY);\r\n        }\r\n    }\r\n\r\n    positionCursorClamped(cursor, x, y, width, height, gridX, gridY){\r\n        cursor.transform.scale.x = 1;\r\n        cursor.transform.scale.y = 1;\r\n        cursor.width = ((width * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.x) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].pixelsPerGrid;\r\n        cursor.height = ((height * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.y) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].pixelsPerGrid;\r\n\r\n        let xx = ((gridX * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.x) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].pixelsPerGrid;\r\n        let yy = ((gridX * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.x) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].pixelsPerGrid;\r\n        cursor.x = xx;\r\n        cursor.y = yy;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/tools/gridBrushTool.js?");

/***/ }),

/***/ "./js/tools/rectTool.js":
/*!******************************!*\
  !*** ./js/tools/rectTool.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RectTool; });\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _drawTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawTool */ \"./js/tools/drawTool.js\");\n/* harmony import */ var _toolsHandler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toolsHandler */ \"./js/tools/toolsHandler.js\");\n/* harmony import */ var _color32__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../color32 */ \"./js/color32.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../layer/layerSettings */ \"./js/layer/layerSettings.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass RectTool extends _drawTool__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\r\n    \r\n    constructor(name){ //string\r\n        super(name);\r\n        this.lastPos = {x:-9999,y:-9999};\r\n        this.brushColor = new _color32__WEBPACK_IMPORTED_MODULE_4__[\"default\"](255,0,0,255);\r\n        this.brushSize = 1;\r\n        this.dragStart = {x:0, y:0};\r\n        this.dragCurrent = {x:0, y:0};\r\n    }\r\n\r\n    onPointerDown(p, pixelPos, e) {\r\n        let color = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushColor')\r\n        if(color==undefined) { color = \"#ff0000\" };\r\n        color = Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"webToHex\"])(color);\r\n        color = _color32__WEBPACK_IMPORTED_MODULE_4__[\"default\"].fromHex(color);\r\n        this.brushColor = color;\r\n        this.brushSize = Object(_settings__WEBPACK_IMPORTED_MODULE_0__[\"getUserSetting\"])('brushSize');\r\n\r\n        if(!this.op) { this.beginStroke(); }\r\n        this.op = true;\r\n        this.dragStart = {x:pixelPos.x, y:pixelPos.y};\r\n    }\r\n    onPointerMove(p, pixelPos, e) {\r\n        //Todo: check if mouse is still down. If not, interrupt\r\n\r\n        const cursorObj = this.getCursorObj();\r\n        // If drag operation has started\r\n        if (this.op) {\r\n            if(pixelPos.x==this.lastPos.x && pixelPos.y==this.lastPos.y){ this.lastPos = {x:pixelPos.x, y:pixelPos.y}; return;} //Simple checker to make sure that cursor has moved\r\n            this.lastPos = {x:pixelPos.x, y:pixelPos.y};\r\n            this.dragCurrent = this.lastPos;\r\n            let rect = this.getRect();\r\n            const wp = Object(_helpers__WEBPACK_IMPORTED_MODULE_1__[\"pixelPosToWorldPos\"])({x:rect.x, y:rect.y});\r\n            this.positionCursor(cursorObj, wp.x, wp.y, rect.width, rect.height);\r\n        }\r\n       \r\n    }\r\n    onPointerUp(p,e) {\r\n        this.interruptStroke();\r\n        this.op = false;\r\n    }\r\n    getCursorObj(){ return _toolsHandler__WEBPACK_IMPORTED_MODULE_3__[\"default\"].singleton.getToolCursor(\"rect\"); }\r\n    beginStroke(){\r\n        this.op = true;\r\n        const isCellMode = false; //find from somewhere\r\n        const brushSize = 1;//getUserSetting('brushSize');\r\n        if(!this.brushColor){console.log(\"BrushColor is undefined!\");}\r\n        //Draw rect shape here with the cursor obj, but dont start an actual stroke yet\r\n    }\r\n    interruptStroke(){\r\n        if(this.op) {\r\n            //Create the stroke and send it to syncer\r\n            let rect = this.getRect();\r\n            this.syncer.LogRect(rect.x, rect.y, rect.width, rect.height, 1, this.brushColor);\r\n        }\r\n        this.op = false;\r\n        this.positionCursor(this.getCursorObj(), 0,0,0,0);\r\n    }\r\n    positionCursor(cursor, x, y, width, height){\r\n        cursor.transform.scale.x = 1;\r\n        cursor.transform.scale.y = 1;\r\n        cursor.width = ((width * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.x) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].pixelsPerGrid;\r\n        cursor.height = ((height * _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].sceneWidthPerGrid) / cursor.parent.transform.scale.y) / _layer_layerSettings__WEBPACK_IMPORTED_MODULE_5__[\"LayerSettings\"].pixelsPerGrid;\r\n        cursor.x = x;\r\n        cursor.y = y;\r\n    }\r\n    getRect(){\r\n        let fromX = this.dragStart.x < this.dragCurrent.x? this.dragStart.x : this.dragCurrent.x;\r\n        let fromY = this.dragStart.y < this.dragCurrent.y? this.dragStart.y : this.dragCurrent.y;\r\n        let width = Math.abs(this.dragCurrent.x - this.dragStart.x) + 1;\r\n        let height = Math.abs(this.dragCurrent.y - this.dragStart.y) + 1;\r\n        return {x:fromX, y:fromY, width: width, height: height};\r\n    }\r\n}\n\n//# sourceURL=webpack:///./js/tools/rectTool.js?");

/***/ }),

/***/ "./js/tools/toolCursor.js":
/*!********************************!*\
  !*** ./js/tools/toolCursor.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ToolCursor; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _layer_layerSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../layer/layerSettings */ \"./js/layer/layerSettings.js\");\n\r\n\r\n\r\nclass ToolCursor extends PIXI.Graphics {\r\n    constructor(brushType){\r\n        \r\n        super();\r\n        this.name = brushType;\r\n        const previewAlpha =  0.4;\r\n        const defaultColor = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"webToHex\"])(_layer_layerSettings__WEBPACK_IMPORTED_MODULE_1__[\"LayerSettings\"].DefaultBackgroundColor());\r\n\r\n        \r\n        if(brushType==\"ellipse\"){\r\n            this.shape = \"ellipse\";\r\n            this._ellipse(defaultColor, 0,0, 100,100);\r\n            this.zIndex = 10;\r\n            this.visible = true;\r\n            this.alpha = previewAlpha;\r\n        }\r\n        else if(brushType==\"grid\") {\r\n          this._rect(defaultColor, 0,0, 100,100);\r\n          this.zIndex = 10;\r\n          this.visible = true;\r\n          this.alpha = previewAlpha;\r\n        }\r\n        else if(brushType==\"rect\"){\r\n          this._rect(defaultColor, 0,0, 100,100);\r\n          this.zIndex = 10;\r\n          this.visible = true;\r\n          this.alpha = previewAlpha;\r\n        }\r\n    }\r\n    _ellipse (fill, x,y, width,height) {\r\n        this.beginFill(fill);\r\n        this.drawEllipse(0,0,width,height);\r\n        this.endFill();\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    _rect (fill, x,y, width,height) {\r\n      this.beginFill(fill);\r\n      this.drawRect(0,0,width,height);\r\n      this.endFill();\r\n      this.x = x;\r\n      this.y = y;\r\n  }\r\n\r\n    brush(data) {\r\n        // Get new graphic & begin filling\r\n        const alpha = typeof data.alpha === \"undefined\" ? 1 : data.alpha;\r\n        const visible = typeof data.visible === \"undefined\" ? true : data.visible;\r\n        const brush = new PIXI.Graphics();\r\n        brush.beginFill(data.fill);\r\n        // Draw the shape depending on type of brush\r\n        switch (data.shape) {\r\n          case this.BRUSH_TYPES.ELLIPSE:\r\n            brush.drawEllipse(0, 0, data.width, data.height);\r\n            break;\r\n          case this.BRUSH_TYPES.BOX:\r\n            brush.drawRect(0, 0, data.width, data.height);\r\n            break;\r\n          case this.BRUSH_TYPES.ROUNDED_RECT:\r\n            brush.drawRoundedRect(0, 0, data.width, data.height, 10);\r\n            break;\r\n          case this.BRUSH_TYPES.POLYGON:\r\n            brush.drawPolygon(data.vertices);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        // End fill and set the basic props\r\n        brush.endFill();\r\n        brush.alpha = alpha;\r\n        brush.visible = visible;\r\n        brush.x = data.x;\r\n        brush.y = data.y;\r\n        brush.zIndex = data.zIndex;\r\n        return brush;\r\n    }\r\n\r\n    setActive(active){\r\n        this.visible = active;\r\n    }\r\n    destroy() {\r\n      if(this===null||this===undefined||this.r===undefined){return;}\r\n      super.destroy(true);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./js/tools/toolCursor.js?");

/***/ }),

/***/ "./js/tools/toolsHandler.js":
/*!**********************************!*\
  !*** ./js/tools/toolsHandler.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ToolsHandler; });\n/* harmony import */ var _toolCursor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toolCursor */ \"./js/tools/toolCursor.js\");\n/* harmony import */ var _brushTool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./brushTool */ \"./js/tools/brushTool.js\");\n/* harmony import */ var _drawTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drawTool */ \"./js/tools/drawTool.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n/* harmony import */ var _rectTool__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rectTool */ \"./js/tools/rectTool.js\");\n/* harmony import */ var _gridBrushTool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gridBrushTool */ \"./js/tools/gridBrushTool.js\");\n/* harmony import */ var _eyedropperTool__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./eyedropperTool */ \"./js/tools/eyedropperTool.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _syncing_paintSyncer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../syncing/paintSyncer */ \"./js/syncing/paintSyncer.js\");\n/* harmony import */ var _netSyncer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../netSyncer */ \"./js/netSyncer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ToolsHandler {\r\n\r\n  /**\r\n   * @returns {ToolsHandler}\r\n   */\r\n  static get singleton()\r\n  {\r\n    let th = canvas.betterDraw_ToolsHandler;\r\n    if(th==null) { console.error(\"ToolsHandler singleton is null!\"); }\r\n    return th;\r\n  }\r\n  constructor(){\r\n    //Where do we store the singleton?\r\n    canvas.betterDraw_ToolsHandler = this;\r\n    this.createAllTools();\r\n    \r\n    this.syncer = new _syncing_paintSyncer__WEBPACK_IMPORTED_MODULE_8__[\"PaintSyncer\"]();\r\n    let ticker = PIXI.Ticker.shared;\r\n    var fr = this.partial(this.renderStack, this.syncer, canvas);\r\n    ticker.add(fr);\r\n  }\r\n  partial(func /*, 0..n args */) {\r\n    var args = Array.prototype.slice.call(arguments).splice(1);\r\n    return function() {\r\n      var allArguments = args.concat(Array.prototype.slice.call(arguments));\r\n      return func.apply(this, allArguments);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Rendering update loop\r\n   * @param {PaintSyncer} syncer \r\n   * @param {any} canvas \r\n   */\r\n  renderStack(syncer, canvas) {\r\n      /*We want to draw strokes here, so we need their data\r\n      But a stroke might be too large or too complex to draw all at once, so we will fetch parts of it (as large as we can manage) at a atime\r\n      */\r\n      var parts = syncer.GetReadyStrokeParts();\r\n      if(parts===undefined||parts.length<1) { return; }\r\n      const pm = Object(_helpers__WEBPACK_IMPORTED_MODULE_7__[\"getDrawLayer\"])().pixelmap;\r\n      pm.DrawStrokeParts(parts);\r\n      _netSyncer__WEBPACK_IMPORTED_MODULE_9__[\"NetSyncer\"].CmdSendStrokeUpdates(parts);\r\n  }\r\n\r\n  /**\r\n   * Create all the different tools and set one as active.\r\n   */\r\n  createAllTools() {\r\n    this.tools = [];\r\n    this.tools.push(new _brushTool__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"brush\", \"circle\"));\r\n    this.tools.push(new _gridBrushTool__WEBPACK_IMPORTED_MODULE_5__[\"default\"](\"grid\", \"grid\"));\r\n    this.tools.push(new _rectTool__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\"rect\", \"rect\"));\r\n    this.tools.push(new _eyedropperTool__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"eyedropper\", \"eyedropper\"));\r\n    this.activeTool = \"brush\";\r\n    this.toolCursors = [];\r\n  }\r\n\r\n  \r\n  \r\n  /**\r\n   * Sanity check function that validates the health of the tool cursor objects\r\n   */\r\n  validateHealth(){\r\n    //Check that our tool cursror exist\r\n    if(this.toolCursors==null||this.toolCursors==undefined||this.toolCursors.length<1){\r\n      //Our tool cursors are missing for some reason. Time to reconstruct them\r\n      console.error(\"Tool Cursor Objs seem to have been destroyed! Repairing...\");\r\n      let layer = Object(_helpers__WEBPACK_IMPORTED_MODULE_7__[\"getDrawLayer\"])();\r\n      this.createToolCursors(layer);\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Returns the active tool\r\n   * @returns {DrawTool}\r\n   */\r\n  get curTool() { if(this.activeTool==\"NONE\"){return null;} return this.getTool(this.activeTool); }\r\n\r\n  /**\r\n   * Fetches a DrawTool by matching its name to toolName\r\n   * @param {string} toolName\r\n   * @return {DrawTool}\r\n   */\r\n  getTool(toolName){\r\n    for(let i = 0; i < this.tools.length; ++i)\r\n    {\r\n      if(this.tools[i].name == toolName) { return this.tools[i]; }\r\n    }\r\n    console.error(\"Could not find a tool with the name \" + toolName);\r\n    return null;\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * Sets the active drawing tool.\r\n   * @param {string} toolName \r\n   */\r\n  setActiveTool(toolName) {\r\n    this.clearActiveTool();\r\n    if(toolName==\"sceneConfig\") { return; }\r\n    this.activeTool = toolName;\r\n    this.setToolCursorTint();\r\n\r\n    //Only show the certain UI when certain tools are active\r\n    let showPalettePickerUI = toolName == \"brush\" || toolName == \"grid\" || toolName == \"rect\";\r\n    let showColorPickerUI = showPalettePickerUI;\r\n    let showBrushSizeUI = toolName == \"brush\" || toolName == \"grid\";\r\n\r\n    if(showBrushSizeUI) { $('#brushsize_container').show(); }\r\n    else { $('#brushsize_container').hide(); }\r\n    if(showColorPickerUI) { $('#brush-color').show(); }\r\n    else { $('#brush-color').hide(); }\r\n    if(showPalettePickerUI) { $('#color-palette-expand-btn').show(); $('#color-palette-grid').show(); }\r\n    else { $('#color-palette-expand-btn').hide(); $('#color-palette-grid').hide();}\r\n\r\n    //Brush drawing tool\r\n    if (toolName === 'brush') { this.getToolCursor(\"ellipse\").setActive(true); }\r\n    //Grid drawing tool\r\n    if (toolName === 'grid') {\r\n      //WARNING: Only works for square grids at the moment.\r\n      //TODO: Display a warning message that this tool doesn't support hex grids.\r\n      this.getToolCursor(\"grid\").setActive(true);\r\n    }\r\n    //Rect drawing tool\r\n    if(toolName==='rect') { this.getToolCursor(\"rect\").setActive(true);  }\r\n  }\r\n\r\n  /**\r\n  * Deactivates tool cursor objects, and sets activeTool to NONE\r\n  */\r\n  clearActiveTool() {\r\n    //Deactivate all tool cursors\r\n    for(let i = 0; i < this.toolCursors.length; ++i)\r\n    { this.toolCursors[i].setActive(false); }\r\n    this.activeTool = \"NONE\";\r\n  }\r\n\r\n  //#region Tool Cursors\r\n  /**\r\n   * Creates new tool cursor objects.\r\n   */\r\n   createToolCursors(layerobj) {\r\n    //Destroy any objs of they are already existing\r\n    this.destroyToolCursors();\r\n\r\n    let ellipse = new _toolCursor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"ellipse\");\r\n    ellipse.setActive(false);\r\n    layerobj.addChild(ellipse);\r\n    this.toolCursors.push(ellipse);\r\n\r\n    let grid = new _toolCursor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"grid\");\r\n    grid.setActive(false);\r\n    layerobj.addChild(grid);\r\n    this.toolCursors.push(grid);\r\n\r\n    let rect = new _toolCursor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"rect\");\r\n    rect.setActive(false);\r\n    layerobj.addChild(rect);\r\n    this.toolCursors.push(rect);\r\n\r\n    this.setToolCursorTint();\r\n  }\r\n\r\n  /**\r\n   * Destroys the tool cursor objects.\r\n   */\r\n  destroyToolCursors(){\r\n    for(let i = 0; i < this.toolCursors.length; ++i)\r\n    {\r\n      let t = this.toolCursors[i];\r\n      if(t){t.destroy();}\r\n    }\r\n    this.toolCursors = [];\r\n  }\r\n  /**\r\n   * Get the tool cursor object of the specified tool\r\n   * @param {string} toolName\r\n   * @return {ToolCursor}\r\n   */\r\n   getToolCursor(toolName) {\r\n    this.validateHealth();\r\n    for(let i = 0; i < this.toolCursors.length; ++i)\r\n    {\r\n      if(this.toolCursors[i].name == toolName){return this.toolCursors[i];}\r\n    }\r\n    console.error(\"Could not find a tool cursor object with the name \" + toolName+\". Tool cursors available are: \");\r\n    console.error(this.toolCursors);\r\n    return null;\r\n  }\r\n  /**\r\n   * Set the tint of the tool cursor objects to its default value.\r\n   */\r\n  setToolCursorTint() {\r\n    const vt = Object(_settings__WEBPACK_IMPORTED_MODULE_3__[\"getSetting\"])('vThreshold');\r\n    const bo = 1;\r\n    let tint = 0xFF0000;\r\n    if (bo < vt) tint = 0x00FF00;\r\n    for(let i = 0; i < this.toolCursors.length; ++i)\r\n    { this.toolCursors[i].tint = tint; }\r\n  }\r\n  //#endregion\r\n\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./js/tools/toolsHandler.js?");

/***/ }),

/***/ "./js/ui/BrushControls.js":
/*!********************************!*\
  !*** ./js/ui/BrushControls.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BrushControls; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./js/helpers.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings */ \"./js/settings.js\");\n\r\n\r\n\r\nclass BrushControls extends FormApplication {\r\n\r\n  constructor(){\r\n    super();\r\n    BrushControls.singleton = this;\r\n  }\r\n\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: ['form'],\r\n      closeOnSubmit: false,\r\n      submitOnChange: true,\r\n      submitOnClose: true,\r\n      popOut: false,\r\n      editable: game.user.isGM,\r\n      template: 'modules/betterdraw/templates/brush-controls.html',\r\n      id: 'filter-config',\r\n      title: \"BetterDraw\"\r\n    });\r\n  }\r\n\r\n  async _updateObject(event, formData) {\r\n\r\n    Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setUserSetting\"])('brushColor', formData.brushColor);\r\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[\"getDrawLayer\"])().setCursorTint();\r\n  }\r\n\r\n  /**\r\n   * Obtain module metadata and merge it with game settings which track current module visibility\r\n   * @return {Object}   The data provided to the template when rendering the form\r\n   */\r\n  getData() {\r\n    // Return data to the template\r\n    let color = Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"getUserSetting\"])('brushColor');\r\n    let size = Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"getUserSetting\"])('brushSize');\r\n    if(!color){color = \"#ff0000\"; Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setUserSetting\"])('brushColor', color); }\r\n    if(!size){size = 1; Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setUserSetting\"])('brushSize', size);}\r\n    return {\r\n      brushSize: size,\r\n      brushOpacity: 1,//hexToPercent(canvas.drawLayer.getUserSetting('brushOpacity')),\r\n      brushColor: color,\r\n    };\r\n  }\r\n\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n\r\n    this.createSubElements();\r\n\r\n    let se = $(\"#select_brushsize\");\r\n    se.on(\"change\", () =>{\r\n      let val = se[0].value;\r\n      let i = parseInt(val);\r\n      console.log(\"Set to \" + i);\r\n      Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setUserSetting\"])('brushSize', i);\r\n    });\r\n  }\r\n\r\n  createSubElements() {\r\n    \r\n    //Setup brush size dropdown options\r\n    const sizes = [1,2,3,4,5,6,7,8,9,10,12,14,16,18,20,24,28,32];\r\n    let dropdown = $(\"#select_brushsize\"); dropdown[0].innerHTML=\"\";\r\n    for(let i = 0; i < sizes.length; ++i) { $(\"<option>\"+sizes[i]+\"</a>\").appendTo(dropdown); }\r\n    //Choose the initial value of the dropdown\r\n    let savedBrushSize = 0; savedBrushSize = Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"getUserSetting\"])(\"brushSize\");\r\n    if(savedBrushSize != undefined && savedBrushSize > 0){\r\n      dropdown[0].value = savedBrushSize;\r\n      console.log(dropdown[0].value);\r\n    }\r\n    else{ dropdown.value = sizes[0]; }\r\n    \r\n\r\n    //Setup color palette\r\n    $(\"#color-palette-expand-btn\").on(\"click\", () => this.togglePaletteExpanded());\r\n    this.definePaletteColors();\r\n    this.setPaletteExpanded(false);\r\n  }\r\n\r\n  refreshColor(webColor){\r\n    let s = $(\"#brushColorPicker\")[0];\r\n    s.value = webColor;\r\n  }\r\n\r\n  //#region Color Palette\r\n  definePaletteColors(){\r\n    const presets = [\r\n      \"000000\", \"434343\", \"666666\", \"999999\", \"b7b7b7\", \"cccccc\", \"d9d9d9\", \"efefef\", \"f3f3f3\", \"ffffff\",\r\n      \"980000\", \"ff0000\", \"ff9900\", \"ffff00\", \"00ff00\", \"00ffff\", \"fa86e8\", \"0000ff\", \"9900ff\", \"ff00ff\",\r\n      \"e6b8af\", \"f4cccc\", \"fce5cd\", \"fff2cc\", \"d9ead3\", \"d0e0e3\", \"c9daf8\", \"cfe2f3\", \"d9d2e9\", \"ead1dc\",\r\n      \"dd7e6b\", \"ea9999\", \"f9cb9c\", \"ffe599\", \"b6d7a8\", \"a2c4c9\", \"a4c2f4\", \"9fc5e8\", \"b4a7d6\", \"d5a6bd\",\r\n      \"cc4125\", \"e06666\", \"f6b26b\", \"ffd966\", \"93c47d\", \"76a5af\", \"6d9eeb\", \"6fa8dc\", \"8e7cc3\", \"c27ba0\",\r\n      \"a61c00\", \"cc0000\", \"e69138\", \"f1c232\", \"6aa84f\", \"45818e\", \"3c78d8\", \"3d85c6\", \"674ea7\", \"a64d79\",\r\n      \"85200c\", \"990000\", \"b45f06\", \"bf9000\", \"38761d\", \"134f5c\", \"1155cc\", \"0b5394\", \"251c75\", \"741b47\",\r\n      \"5b0f00\", \"660000\", \"783f04\", \"7f6000\", \"274e13\", \"0c343d\", \"1c4587\", \"073763\", \"20124d\", \"4c1130\"];\r\n      presets.forEach(e => { this.addPaletteButton(\"#\" + e); });\r\n  }\r\n  addPaletteButton(webColor){\r\n    let grid = $(\"#color-palette-grid\");\r\n    let btn = $(\"<button class='color-palette-button' colorval='\"+webColor+\"' style='background-color: \"+webColor+\";'>\"+\"</button>\").appendTo(grid);\r\n    btn.on(\"click\", () => this.onPaletteButton(btn[0]));\r\n  }\r\n  /**\r\n   * \r\n   * @param {HTMLButtonElement} button \r\n   */\r\n  onPaletteButton(button){\r\n    const webColor = button.getAttribute(\"colorval\");\r\n    Object(_settings__WEBPACK_IMPORTED_MODULE_1__[\"setUserSetting\"])('brushColor', webColor);\r\n    this.refreshColor(webColor);\r\n  }\r\n  togglePaletteExpanded(){\r\n    this.setPaletteExpanded($(\"#color-palette-grid\").hasClass(\"hide\"));\r\n  }\r\n  setPaletteExpanded(expanded){\r\n    let grid = $(\"#color-palette-grid\");\r\n    if((expanded && grid.hasClass(\"hide\")) || (!expanded && !grid.hasClass(\"hide\"))){grid.toggleClass(\"hide\");}\r\n    let btn = $(\"#color-palette-expand-btn\")[0];\r\n    btn.innerHTML = expanded? \"⯇\" : \"⯈\";\r\n  }\r\n  //#endregion\r\n}\r\n\n\n//# sourceURL=webpack:///./js/ui/BrushControls.js?");

/***/ }),

/***/ "./js/ui/CreateLayerDialog.js":
/*!************************************!*\
  !*** ./js/ui/CreateLayerDialog.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CreateLayerDialog; });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./js/helpers.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings.js */ \"./js/settings.js\");\n/* harmony import */ var _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tools/toolsHandler.js */ \"./js/tools/toolsHandler.js\");\n/* harmony import */ var _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../layer/layerSettings.js */ \"./js/layer/layerSettings.js\");\n/* harmony import */ var _loadAction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../loadAction.js */ \"./js/loadAction.js\");\n/* harmony import */ var _netSyncer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../netSyncer.js */ \"./js/netSyncer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CreateLayerDialog extends FormApplication {\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: ['form'],\r\n      closeOnSubmit: false,\r\n      submitOnChange: false,\r\n      submitOnClose: false,\r\n      popOut: true,\r\n      editable: game.user.isGM,\r\n      width: 500,\r\n      template: 'modules/betterdraw/templates/create-layer.html',\r\n      id: 'betterdraw-newlayer-dialog',\r\n      title: game.i18n.localize('Create New Layer'),\r\n    });\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n\r\n  /**\r\n   * Obtain module metadata and merge it with game settings which track current module visibility\r\n   * @return {Object}   The data provided to the template when rendering the form\r\n   */\r\n  getData() {\r\n  // Return data to the template\r\n    return {\r\n      gridSize: 1,\r\n      sceneWidth: 50,\r\n      sceneHeight: 50,\r\n      backgroundColor: Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"affirmWebRGB\"])(_layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].DefaultBackgroundColor()),\r\n    };\r\n  }\r\n\r\n  /* -------------------------------------------- */\r\n  /*  Event Listeners and Handlers                */\r\n  /* -------------------------------------------- */\r\n\r\n  /**\r\n   * This method is called upon form submission after form data is validated\r\n   * @param event {Event}       The initial triggering submission event\r\n   * @param formData {Object}   The object of validated form data with which to update the object\r\n   * @private\r\n   */\r\n  async _updateObject(event, formData) {\r\n    \r\n\r\n    // If save button was clicked, close app\r\n    if (event.submitter && event.submitter.name === 'submit') {\r\n\r\n        \r\n        \r\n        //Setup a layer\r\n        let curScene = game.scenes.get(canvas.scene.data._id);\r\n        const oldGridSize = curScene.data.grid;\r\n        const newGridSize = formData.gridSize;\r\n        const texFilePath = formData.img; //string\r\n        const sceneWidth = formData.sceneWidth;\r\n        const sceneHeight = formData.sceneHeight;\r\n        const options = {desiredGridSize: formData.gridSize, texFilePath: formData.img, sceneWidth : formData.sceneWidth, sceneHeight: formData.sceneHeight, backgroundColor: formData.backgroundColor};\r\n        /* if(oldGridSize!=formData.gridSize)\r\n        {\r\n          console.log(\"old grid size: \" + curScene.data.grid);\r\n          this.preRescale();\r\n          curScene.update({grid: formData.gridSize});\r\n        } */\r\n        \r\n        if(!CreateLayerDialog.areOptionsOK(options)){\r\n          this.onOptionsFaulty(options); return;\r\n        }\r\n\r\n        await this.onOptionsVerified(options);\r\n      \r\n    }\r\n\r\n    // Update sight layer\r\n    //canvas.sight.refresh();\r\n  }\r\n\r\n  preRescale(){\r\n    _tools_toolsHandler_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].singleton.destroyToolCursors();\r\n  }\r\n\r\n  async onOptionsVerified(options){\r\n    //Close UI\r\n    Object.values(ui.windows).forEach((val) => {\r\n      if (val.id === 'betterdraw-newlayer-dialog') val.close();});\r\n    //Parse together the options as a LayerSettings\r\n    var s = await _layer_layerSettings_js__WEBPACK_IMPORTED_MODULE_3__[\"LayerSettings\"].ParseSettings(options);\r\n    //Use the options to create a new layer\r\n    var task = new _loadAction_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n    await task.Perform(s);\r\n    //Send a net message here, telling clients that a new layer has been created?\r\n    _netSyncer_js__WEBPACK_IMPORTED_MODULE_5__[\"NetSyncer\"].CmdOnLayerCreated();\r\n    await Object(_helpers_js__WEBPACK_IMPORTED_MODULE_0__[\"redrawScene\"])();\r\n    //LayerSettings.SaveLayer();\r\n  }\r\n  onOptionsFaulty(options){\r\n    //Close UI\r\n    Object.values(ui.windows).forEach((val) => {\r\n      if (val.id === 'betterdraw-newlayer-dialog') val.close();});\r\n  }\r\n  static areOptionsOK(options){\r\n    if(options.desiredGridSize === undefined || options.desiredGridSize < 1){return false;}\r\n    if(options.sceneWidth === undefined || options.sceneHeight === undefined || options.sceneWidth<50 || options.sceneHeight<50){return;}\r\n    return true;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./js/ui/CreateLayerDialog.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/decode/decode-idat.js":
/*!************************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/decode/decode-idat.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-26 07:30\n * @author vivaxy\n */\nconst pako = __webpack_require__(/*! pako */ \"./node_modules/pako/index.js\");\nconst color_types_1 = __webpack_require__(/*! ../helpers/color-types */ \"./node_modules/@vivaxy/png/lib/helpers/color-types.js\");\nconst filters_1 = __webpack_require__(/*! ../helpers/filters */ \"./node_modules/@vivaxy/png/lib/helpers/filters.js\");\nconst rescale_sample_1 = __webpack_require__(/*! ../helpers/rescale-sample */ \"./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js\");\nconst channels_1 = __webpack_require__(/*! ../helpers/channels */ \"./node_modules/@vivaxy/png/lib/helpers/channels.js\");\nconst interlace_1 = __webpack_require__(/*! ../helpers/interlace */ \"./node_modules/@vivaxy/png/lib/helpers/interlace.js\");\nfunction decodeIDAT(deflatedData, interlace, colorType, width, height, depth, palette, transparent) {\n    let pixels = [];\n    // inflate\n    const inflatedData = pako.inflate(deflatedData);\n    const images = interlace_1.buildImages(interlace, width, height);\n    const channelPerPixel = color_types_1.COLOR_TYPES_TO_CHANNEL_PER_PIXEL[colorType];\n    const bitPerPixel = channelPerPixel * depth;\n    const bytePerPixel = bitPerPixel >> 3 || 1;\n    let dataIndex = 0;\n    let prevUnfilteredLine = new Uint8Array();\n    for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {\n        const { passWidth, passHeight, passIndex } = images[imageIndex];\n        for (let heightIndex = 0; heightIndex < passHeight; heightIndex++) {\n            // scanline\n            // const scanlineWidth = Math.ceil(metadata.width * channel * metadata.depth / 8) + FILTER_LENGTH;\n            const scanlineWidth = ((passWidth * bitPerPixel + 7) >> 3) + filters_1.FILTER_LENGTH;\n            // unfilter\n            const filterType = inflatedData[dataIndex];\n            if (!(filterType in filters_1.FILTER_TYPES)) {\n                throw new Error('Unsupported filter type: ' + filterType);\n            }\n            const unfilter = filters_1.unfilters[filterType];\n            const unfilteredLine = unfilter(inflatedData.slice(dataIndex + 1, dataIndex + scanlineWidth), bytePerPixel, prevUnfilteredLine);\n            prevUnfilteredLine = unfilteredLine;\n            // to channels\n            let channelIndex = 0;\n            const channels = channels_1.typedArrayToChannels(unfilteredLine, depth);\n            function getPixelFromChannels() {\n                if (colorType === color_types_1.COLOR_TYPES.GRAYSCALE) {\n                    const color = rescale_sample_1.default(channels[channelIndex++], depth, 8);\n                    return [color, color, color, 0xff];\n                }\n                if (colorType === color_types_1.COLOR_TYPES.TRUE_COLOR) {\n                    return [\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                        0xff,\n                    ];\n                }\n                if (colorType === color_types_1.COLOR_TYPES.PALETTE) {\n                    const paletteIndex = channels[channelIndex++];\n                    if (!palette) {\n                        throw new Error('Mising chunk: PLTE');\n                    }\n                    return palette[paletteIndex];\n                }\n                if (colorType === color_types_1.COLOR_TYPES.GRAYSCALE_WITH_ALPHA) {\n                    const color = rescale_sample_1.default(channels[channelIndex++], depth, 8);\n                    return [\n                        color,\n                        color,\n                        color,\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                    ];\n                }\n                if (colorType === color_types_1.COLOR_TYPES.TRUE_COLOR_WITH_ALPHA) {\n                    return [\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                        rescale_sample_1.default(channels[channelIndex++], depth, 8),\n                    ];\n                }\n                throw new Error('Unsupported color type: ' + colorType);\n            }\n            for (let widthIndex = 0; widthIndex < passWidth; widthIndex++) {\n                // to pixel\n                const pixel = getPixelFromChannels();\n                // process transparent color when available\n                if (transparent &&\n                    pixel[0] === transparent[0] &&\n                    pixel[1] === transparent[1] &&\n                    pixel[2] === transparent[2]) {\n                    pixel[3] = 0;\n                }\n                const pixelIndex = interlace_1.getPixelIndex(interlace, width, passIndex, widthIndex, heightIndex);\n                for (let i = 0; i < pixel.length; i++) {\n                    pixels[pixelIndex + i] = pixel[i];\n                }\n            }\n            dataIndex += scanlineWidth;\n        }\n    }\n    return pixels;\n}\nexports.default = decodeIDAT;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/decode/decode-idat.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/decode/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/decode/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-10-30 03:00\n * @author vivaxy\n */\nconst pako = __webpack_require__(/*! pako */ \"./node_modules/pako/index.js\");\nconst crc32_1 = __webpack_require__(/*! ../helpers/crc32 */ \"./node_modules/@vivaxy/png/lib/helpers/crc32.js\");\nconst decode_idat_1 = __webpack_require__(/*! ./decode-idat */ \"./node_modules/@vivaxy/png/lib/decode/decode-idat.js\");\nconst signature_1 = __webpack_require__(/*! ../helpers/signature */ \"./node_modules/@vivaxy/png/lib/helpers/signature.js\");\nconst gamma_1 = __webpack_require__(/*! ../helpers/gamma */ \"./node_modules/@vivaxy/png/lib/helpers/gamma.js\");\nconst color_types_1 = __webpack_require__(/*! ../helpers/color-types */ \"./node_modules/@vivaxy/png/lib/helpers/color-types.js\");\nconst rescale_sample_1 = __webpack_require__(/*! ../helpers/rescale-sample */ \"./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js\");\nconst utf8_1 = __webpack_require__(/*! ../helpers/utf8 */ \"./node_modules/@vivaxy/png/lib/helpers/utf8.js\");\nconst typed_array_1 = __webpack_require__(/*! ../helpers/typed-array */ \"./node_modules/@vivaxy/png/lib/helpers/typed-array.js\");\nconst chromaticities_1 = __webpack_require__(/*! ../helpers/chromaticities */ \"./node_modules/@vivaxy/png/lib/helpers/chromaticities.js\");\nfunction decode(arrayBuffer) {\n    const typedArray = new Uint8Array(arrayBuffer);\n    let idatUint8Array = new Uint8Array();\n    const metadata = {\n        width: 0,\n        height: 0,\n        depth: 0,\n        colorType: 0,\n        compression: 0,\n        interlace: 0,\n        filter: 0,\n        data: [],\n    };\n    // Helpers\n    let index = 0;\n    function readUInt32BE() {\n        return ((typedArray[index++] << 24) |\n            (typedArray[index++] << 16) |\n            (typedArray[index++] << 8) |\n            typedArray[index++]);\n    }\n    function readUInt16BE() {\n        return (typedArray[index++] << 8) | typedArray[index++];\n    }\n    function readUInt8() {\n        return typedArray[index++];\n    }\n    function readBytesBeforeNull() {\n        const results = [];\n        let byte = 0;\n        while ((byte = typedArray[index++]) !== 0) {\n            results.push(byte);\n        }\n        return new Uint8Array(results);\n    }\n    function readStringBeforeNull(maxLength) {\n        const maxIndex = index + maxLength;\n        let result = '';\n        while (index < maxIndex) {\n            const byte = readUInt8();\n            if (byte === 0) {\n                break;\n            }\n            result += String.fromCharCode(byte);\n        }\n        return result;\n    }\n    function readStringBeforeEnd(endIndex) {\n        let result = '';\n        while (index < endIndex) {\n            const byte = readUInt8();\n            result += String.fromCharCode(byte);\n        }\n        return result;\n    }\n    function readCompressedData(endIndex) {\n        const compressedData = typedArray.slice(index, endIndex);\n        index = endIndex;\n        return pako.inflate(compressedData);\n    }\n    function readChunkType() {\n        let name = '';\n        for (const end = index + 4; index < end; index++) {\n            name += String.fromCharCode(typedArray[index]);\n        }\n        return name;\n    }\n    // Signature\n    for (; index < signature_1.default.length; index++) {\n        if (typedArray[index] !== signature_1.default[index]) {\n            throw new Error(`Invalid file signature, at position ${index}: ${typedArray[index]} !== ${signature_1.default[index]}`);\n        }\n    }\n    // Chunks\n    const chunkHandlers = {\n        IHDR: parseIHDR,\n        PLTE: parsePLTE,\n        IDAT: parseIDAT,\n        IEND: parseIEND,\n        tRNS: parseTRNS,\n        cHRM: parseCHRM,\n        gAMA: parseGAMA,\n        iCCP: parseICCP,\n        sBIT: parseSBIT,\n        sRGB: parseSRGB,\n        tEXt: parseTEXT,\n        zTXt: parseZTXT,\n        iTXt: parseITXT,\n        bKGD: parseBKGD,\n        hIST: parseHIST,\n        pHYs: parsePHYS,\n        sPLT: parseSPLT,\n        tIME: parseTIME,\n    };\n    function parseIHDR() {\n        metadata.width = readUInt32BE();\n        metadata.height = readUInt32BE();\n        metadata.depth = readUInt8();\n        const colorType = readUInt8(); // bits: 1 palette, 2 color, 4 alpha\n        if (!(colorType in color_types_1.COLOR_TYPES)) {\n            throw new Error('Unsupported color type: ' + colorType);\n        }\n        metadata.colorType = colorType;\n        metadata.compression = readUInt8();\n        metadata.filter = readUInt8();\n        metadata.interlace = readUInt8();\n    }\n    function parsePLTE(length) {\n        const palette = [];\n        for (let i = 0; i < length; i += 3) {\n            palette.push([\n                typedArray[index++],\n                typedArray[index++],\n                typedArray[index++],\n                0xff,\n            ]);\n        }\n        metadata.palette = palette;\n    }\n    function parseIDAT(length) {\n        // save data, decode later\n        idatUint8Array = typed_array_1.concatUInt8Array(idatUint8Array, typedArray.slice(index, index + length));\n        index += length;\n    }\n    function parseIEND(length) {\n        index += length;\n    }\n    function parseTRNS(length) {\n        if (metadata.colorType === color_types_1.COLOR_TYPES.GRAYSCALE) {\n            const color = rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8);\n            metadata.transparent = [color, color, color, 0xff];\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.TRUE_COLOR) {\n            metadata.transparent = [\n                rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8),\n                rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8),\n                rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8),\n                0xff,\n            ];\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.PALETTE) {\n            if (!metadata.palette) {\n                throw new Error('Missing chunk: PLTE');\n            }\n            for (let i = 0; i < length; i++) {\n                metadata.palette[i][3] = typedArray[index++];\n            }\n        }\n        else {\n            // throw new Error('Prohibited tRNS for colorType ' + metadata.colorType);\n        }\n    }\n    function parseCHRM() {\n        metadata.chromaticities = {\n            white: {\n                x: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n                y: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n            },\n            red: {\n                x: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n                y: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n            },\n            green: {\n                x: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n                y: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n            },\n            blue: {\n                x: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n                y: readUInt32BE() / chromaticities_1.CHROMATICITIES_DIVISION,\n            },\n        };\n    }\n    function parseGAMA() {\n        metadata.gamma = readUInt32BE() / gamma_1.GAMMA_DIVISION;\n    }\n    function parseICCP(length) {\n        const endIndex = index + length;\n        const profileName = readStringBeforeNull(80);\n        const compressionMethod = readUInt8();\n        if (compressionMethod !== 0) {\n            // throw new Error(\n            //   'Unsupported iCCP compression method: ' + compressionMethod,\n            // );\n        }\n        const profile = readCompressedData(endIndex);\n        metadata.icc = {\n            name: profileName,\n            profile: Array.from(profile),\n        };\n    }\n    function parseSBIT() {\n        if (metadata.colorType === color_types_1.COLOR_TYPES.GRAYSCALE) {\n            const sBit = readUInt8();\n            metadata.significantBits = [sBit, sBit, sBit, metadata.depth];\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.TRUE_COLOR ||\n            metadata.colorType === color_types_1.COLOR_TYPES.PALETTE) {\n            metadata.significantBits = [\n                readUInt8(),\n                readUInt8(),\n                readUInt8(),\n                metadata.depth,\n            ];\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.GRAYSCALE_WITH_ALPHA) {\n            const sBit = readUInt8();\n            metadata.significantBits = [sBit, sBit, sBit, readUInt8()];\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.TRUE_COLOR_WITH_ALPHA) {\n            metadata.significantBits = [\n                readUInt8(),\n                readUInt8(),\n                readUInt8(),\n                readUInt8(),\n            ];\n        }\n    }\n    function parseSRGB() {\n        metadata.sRGB = readUInt8();\n    }\n    function parseTEXT(length) {\n        const endIndex = index + length;\n        const keyword = readStringBeforeNull(80);\n        const value = readStringBeforeEnd(endIndex);\n        if (!metadata.text) {\n            metadata.text = {};\n        }\n        metadata.text[keyword] = value;\n    }\n    function parseZTXT(length) {\n        const endIndex = index + length;\n        const keyword = readStringBeforeNull(80);\n        const compressionMethod = readUInt8();\n        if (compressionMethod !== 0) {\n            // throw new Error(\n            //   'Unsupported zTXt compression method: ' + compressionMethod,\n            // );\n        }\n        const data = readCompressedData(endIndex);\n        let value = '';\n        for (let i = 0; i < data.length; i++) {\n            value += String.fromCharCode(data[i]);\n        }\n        if (!metadata.compressedText) {\n            metadata.compressedText = {};\n        }\n        metadata.compressedText[keyword] = value;\n    }\n    function parseITXT(length) {\n        const endIndex = index + length;\n        const keyword = readStringBeforeNull(80);\n        const compressionFlag = readUInt8();\n        const compressionMethod = readUInt8();\n        const languageTag = readStringBeforeNull(Infinity);\n        const translatedKeyword = utf8_1.decode(readBytesBeforeNull());\n        let text = '';\n        if (compressionFlag === 0) {\n            text = utf8_1.decode(typedArray.slice(index, endIndex));\n            index = endIndex;\n        }\n        else {\n            if (compressionMethod !== 0) {\n                // throw new Error(\n                //   'Unsupported iTXt compression method: ' + compressionMethod,\n                // );\n            }\n            const data = readCompressedData(endIndex);\n            text = utf8_1.decode(data);\n        }\n        if (!metadata.internationalText) {\n            metadata.internationalText = {};\n        }\n        metadata.internationalText[keyword] = {\n            languageTag,\n            translatedKeyword,\n            text,\n        };\n    }\n    function parseBKGD() {\n        if ((metadata.colorType & 3) === color_types_1.COLOR_TYPES.GRAYSCALE) {\n            const color = rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8);\n            metadata.background = [color, color, color, 0xff];\n        }\n        else if ((metadata.colorType & 3) === color_types_1.COLOR_TYPES.TRUE_COLOR) {\n            metadata.background = [\n                rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8),\n                rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8),\n                rescale_sample_1.default((typedArray[index++] << 8) | typedArray[index++], metadata.depth, 8),\n                0xff,\n            ];\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.PALETTE) {\n            if (!metadata.palette) {\n                throw new Error('Missing chunk: PLTE');\n            }\n            metadata.background = metadata.palette[typedArray[index++]];\n        }\n    }\n    function parseHIST(length) {\n        const endIndex = index + length;\n        const histogram = [];\n        while (index < endIndex) {\n            histogram.push(readUInt16BE());\n        }\n        metadata.histogram = histogram;\n    }\n    function parsePHYS() {\n        const pixelPerUnitX = readUInt32BE();\n        const pixelPerUnitY = readUInt32BE();\n        const unit = readUInt8();\n        metadata.physicalDimensions = {\n            pixelPerUnitX,\n            pixelPerUnitY,\n            unit,\n        };\n    }\n    function parseSPLT(length) {\n        const endIndex = index + length;\n        const name = readStringBeforeNull(80);\n        const depth = readUInt8();\n        const palette = [];\n        if (depth === 8) {\n            while (index < endIndex) {\n                palette.push([\n                    readUInt8(),\n                    readUInt8(),\n                    readUInt8(),\n                    readUInt8(),\n                    readUInt16BE(),\n                ]);\n            }\n        }\n        else if (depth === 16) {\n            while (index < endIndex) {\n                palette.push([\n                    readUInt16BE(),\n                    readUInt16BE(),\n                    readUInt16BE(),\n                    readUInt16BE(),\n                    readUInt16BE(),\n                ]);\n            }\n        }\n        else {\n            // throw new Error('Unsupported sPLT depth: ' + depth);\n        }\n        metadata.suggestedPalette = {\n            name,\n            depth,\n            palette: palette,\n        };\n    }\n    function parseTIME() {\n        const year = readUInt16BE();\n        const month = readUInt8();\n        const day = readUInt8();\n        const hour = readUInt8();\n        const minute = readUInt8();\n        const second = readUInt8();\n        metadata.lastModificationTime = Date.UTC(year, month - 1, day, hour, minute, second);\n    }\n    function parseChunkBegin() {\n        const startIndex = index;\n        const length = readUInt32BE();\n        const type = readChunkType();\n        if (chunkHandlers[type]) {\n            chunkHandlers[type](length);\n        }\n        else {\n            const ancillary = Boolean(type.charCodeAt(0) & 0x20); // or critical\n            if (!ancillary) {\n                // throw new Error('Unsupported critical chunk type: ' + type);\n            }\n            // Skip chunk\n            index += length;\n        }\n        parseChunkEnd(startIndex, length);\n    }\n    function parseChunkEnd(startIndex, length) {\n        const fileCrc32 = readUInt32BE();\n        const calculatedCrc32 = crc32_1.default(typedArray.slice(startIndex + 4, startIndex + 8 + length));\n        if (fileCrc32 !== calculatedCrc32) {\n            throw new Error('Crc32 error: calculated ' +\n                calculatedCrc32 +\n                ', expected ' +\n                fileCrc32);\n        }\n        if (index < typedArray.length) {\n            parseChunkBegin();\n        }\n    }\n    parseChunkBegin();\n    // Decode all IDAT\n    metadata.data = decode_idat_1.default(idatUint8Array, metadata.interlace, metadata.colorType, metadata.width, metadata.height, metadata.depth, metadata.palette, metadata.transparent);\n    return metadata;\n}\nexports.default = decode;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/decode/index.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/encode/encode-idat.js":
/*!************************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/encode/encode-idat.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-30 01:47\n * @author vivaxy\n */\nconst pako = __webpack_require__(/*! pako */ \"./node_modules/pako/index.js\");\nconst rescale_sample_1 = __webpack_require__(/*! ../helpers/rescale-sample */ \"./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js\");\nconst typed_array_1 = __webpack_require__(/*! ../helpers/typed-array */ \"./node_modules/@vivaxy/png/lib/helpers/typed-array.js\");\nconst channels_1 = __webpack_require__(/*! ../helpers/channels */ \"./node_modules/@vivaxy/png/lib/helpers/channels.js\");\nconst interlace_1 = __webpack_require__(/*! ../helpers/interlace */ \"./node_modules/@vivaxy/png/lib/helpers/interlace.js\");\nconst filters_1 = __webpack_require__(/*! ../helpers/filters */ \"./node_modules/@vivaxy/png/lib/helpers/filters.js\");\nconst color_types_1 = __webpack_require__(/*! ../helpers/color-types */ \"./node_modules/@vivaxy/png/lib/helpers/color-types.js\");\nfunction encodeIDAT(data, width, height, colorType, depth, interlace, palette) {\n    let typedArray = new Uint8Array();\n    const channelPerPixel = color_types_1.COLOR_TYPES_TO_CHANNEL_PER_PIXEL[colorType];\n    const bitPerPixel = channelPerPixel * depth;\n    const bytePerPixel = bitPerPixel >> 3 || 1;\n    const images = interlace_1.buildImages(interlace, width, height);\n    for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {\n        let prevUnfilteredLine = new Uint8Array();\n        const { passWidth, passHeight, passIndex } = images[imageIndex];\n        const scanlineWidth = ((passWidth * channelPerPixel * depth + 7) >> 3) + filters_1.FILTER_LENGTH;\n        for (let heightIndex = 0; heightIndex < passHeight; heightIndex++) {\n            // each line\n            const channels = [];\n            for (let widthIndex = 0; widthIndex < passWidth; widthIndex++) {\n                // each pixel\n                const pixelIndex = interlace_1.getPixelIndex(interlace, width, passIndex, widthIndex, heightIndex);\n                const pixel = data.slice(pixelIndex, pixelIndex + 4);\n                // channels\n                if (colorType === color_types_1.COLOR_TYPES.GRAYSCALE) {\n                    channels.push(rescale_sample_1.default(pixel[0], 8, depth));\n                }\n                else if (colorType === color_types_1.COLOR_TYPES.TRUE_COLOR) {\n                    channels.push(rescale_sample_1.default(pixel[0], 8, depth), rescale_sample_1.default(pixel[1], 8, depth), rescale_sample_1.default(pixel[2], 8, depth));\n                }\n                else if (colorType === color_types_1.COLOR_TYPES.PALETTE) {\n                    if (!palette) {\n                        throw new Error('Palette is required');\n                    }\n                    let paletteIndex = -1;\n                    for (let i = 0; i < palette.length; i++) {\n                        const paletteColor = palette[i];\n                        if (paletteColor[0] === pixel[0] &&\n                            paletteColor[1] === pixel[1] &&\n                            paletteColor[2] == pixel[2] &&\n                            paletteColor[3] === pixel[3]) {\n                            paletteIndex = i;\n                        }\n                    }\n                    if (paletteIndex === -1) {\n                        throw new Error('Invalid palette. Color (' +\n                            pixel.join(', ') +\n                            ') is not in palette');\n                    }\n                    channels.push(paletteIndex);\n                }\n                else if (colorType === color_types_1.COLOR_TYPES.GRAYSCALE_WITH_ALPHA) {\n                    channels.push(rescale_sample_1.default(pixel[0], 8, depth), rescale_sample_1.default(pixel[3], 8, depth));\n                }\n                else if (colorType === color_types_1.COLOR_TYPES.TRUE_COLOR_WITH_ALPHA) {\n                    channels.push(rescale_sample_1.default(pixel[0], 8, depth), rescale_sample_1.default(pixel[1], 8, depth), rescale_sample_1.default(pixel[2], 8, depth), rescale_sample_1.default(pixel[3], 8, depth));\n                }\n            }\n            const unfilteredLine = channels_1.channelsToTypedArray(channels, depth, scanlineWidth - filters_1.FILTER_LENGTH);\n            // filter line\n            let minFilterSum = Infinity;\n            let filteredLine = new Uint8Array();\n            let filterType = 0;\n            const filterTypes = [\n                filters_1.FILTER_TYPES.NONE,\n                filters_1.FILTER_TYPES.SUB,\n                filters_1.FILTER_TYPES.UP,\n                filters_1.FILTER_TYPES.AVERAGE,\n                filters_1.FILTER_TYPES.PAETH,\n            ];\n            for (let filterIndex = 0; filterIndex < filterTypes.length; filterIndex++) {\n                const currentFilterType = filterTypes[filterIndex];\n                const { sum, filtered } = filters_1.filters[currentFilterType](unfilteredLine, bytePerPixel, prevUnfilteredLine);\n                if (sum < minFilterSum) {\n                    minFilterSum = sum;\n                    filteredLine = filtered;\n                    filterType = currentFilterType;\n                }\n            }\n            prevUnfilteredLine = unfilteredLine;\n            typedArray = typed_array_1.concatUInt8Array(typedArray, typed_array_1.concatUInt8Array(new Uint8Array([filterType]), filteredLine));\n        } // end of each line\n    }\n    return pako.deflate(typedArray);\n}\nexports.default = encodeIDAT;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/encode/encode-idat.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/encode/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/encode/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-10-30 03:01\n * @author vivaxy\n */\nconst pako = __webpack_require__(/*! pako */ \"./node_modules/pako/index.js\");\nconst crc32_1 = __webpack_require__(/*! ../helpers/crc32 */ \"./node_modules/@vivaxy/png/lib/helpers/crc32.js\");\nconst encode_idat_1 = __webpack_require__(/*! ./encode-idat */ \"./node_modules/@vivaxy/png/lib/encode/encode-idat.js\");\nconst signature_1 = __webpack_require__(/*! ../helpers/signature */ \"./node_modules/@vivaxy/png/lib/helpers/signature.js\");\nconst gamma_1 = __webpack_require__(/*! ../helpers/gamma */ \"./node_modules/@vivaxy/png/lib/helpers/gamma.js\");\nconst color_types_1 = __webpack_require__(/*! ../helpers/color-types */ \"./node_modules/@vivaxy/png/lib/helpers/color-types.js\");\nconst rescale_sample_1 = __webpack_require__(/*! ../helpers/rescale-sample */ \"./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js\");\nconst utf8_1 = __webpack_require__(/*! ../helpers/utf8 */ \"./node_modules/@vivaxy/png/lib/helpers/utf8.js\");\nconst typed_array_1 = __webpack_require__(/*! ../helpers/typed-array */ \"./node_modules/@vivaxy/png/lib/helpers/typed-array.js\");\nconst chromaticities_1 = __webpack_require__(/*! ../helpers/chromaticities */ \"./node_modules/@vivaxy/png/lib/helpers/chromaticities.js\");\nconst NULL_SEPARATOR = 0;\nconst COMPRESSION_METHOD = 0;\nfunction encode(metadata) {\n    // Signature\n    let typedArray = new Uint8Array(signature_1.default);\n    // Helpers\n    function packUInt32BE(value) {\n        return new Uint8Array([\n            (value >> 24) & 0xff,\n            (value >> 16) & 0xff,\n            (value >> 8) & 0xff,\n            value & 0xff,\n        ]);\n    }\n    function packUInt16BE(value) {\n        return new Uint8Array([(value >> 8) & 0xff, value & 0xff]);\n    }\n    function packUInt8(value) {\n        return new Uint8Array([value & 0xff]);\n    }\n    function packString(name) {\n        const data = new Uint8Array(name.length);\n        for (let i = 0; i < name.length; i++) {\n            data[i] = name.charCodeAt(i);\n        }\n        return data;\n    }\n    // Chunks\n    const chunkPackers = {\n        IHDR: packIHDR,\n        tIME: packTIME,\n        sRGB: packSRGB,\n        pHYs: packPHYS,\n        sPLT: packSPLT,\n        iCCP: packICCP,\n        sBIT: packSBIT,\n        gAMA: packGAMA,\n        cHRM: packCHRM,\n        PLTE: packPLTE,\n        tRNS: packTRNS,\n        hIST: packHIST,\n        bKGD: packBKGD,\n        IDAT: packIDAT,\n        IEND: packIEND,\n    };\n    function packIHDR() {\n        let data = new Uint8Array();\n        data = typed_array_1.concatUInt8Array(data, packUInt32BE(metadata.width));\n        data = typed_array_1.concatUInt8Array(data, packUInt32BE(metadata.height));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.depth));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.colorType));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.compression));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.filter));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.interlace));\n        return data;\n    }\n    function packPLTE() {\n        const data = [];\n        if (metadata.palette) {\n            for (let i = 0; i < metadata.palette.length; i++) {\n                const palette = metadata.palette[i];\n                data.push(palette[0], palette[1], palette[2]);\n            }\n        }\n        return new Uint8Array(data);\n    }\n    function packIDAT() {\n        return encode_idat_1.default(metadata.data, metadata.width, metadata.height, metadata.colorType, metadata.depth, metadata.interlace, metadata.palette);\n    }\n    function packIEND() {\n        return new Uint8Array();\n    }\n    function packTRNS() {\n        const data = [];\n        if (metadata.colorType === color_types_1.COLOR_TYPES.GRAYSCALE) {\n            if (metadata.transparent) {\n                const color = rescale_sample_1.default(metadata.transparent[0], 8, metadata.depth);\n                data.push((color >> 8) & 0xff, color & 0xff);\n            }\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.TRUE_COLOR) {\n            if (metadata.transparent) {\n                for (let i = 0; i < 3; i++) {\n                    const color = rescale_sample_1.default(metadata.transparent[i], 8, metadata.depth);\n                    data.push((color >> 8) & 0xff, color & 0xff);\n                }\n            }\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.PALETTE) {\n            if (!metadata.palette) {\n                throw new Error('Palette is required');\n            }\n            const { palette } = metadata;\n            let transparent = false;\n            for (let i = 0; i < palette.length; i++) {\n                data.push(palette[i][3]);\n                if (palette[i][3] !== 0xff) {\n                    transparent = true;\n                }\n            }\n            if (!transparent) {\n                return new Uint8Array();\n            }\n        }\n        return new Uint8Array(data);\n    }\n    function packCHRM() {\n        if (!metadata.chromaticities) {\n            return new Uint8Array();\n        }\n        const { chromaticities } = metadata;\n        let data = new Uint8Array();\n        [\n            'white',\n            'red',\n            'green',\n            'blue',\n        ].forEach(function (color) {\n            ['x', 'y'].forEach(function (axis) {\n                data = typed_array_1.concatUInt8Array(data, packUInt32BE(chromaticities[color][axis] * chromaticities_1.CHROMATICITIES_DIVISION));\n            });\n        });\n        return data;\n    }\n    function packGAMA() {\n        if (metadata.gamma !== undefined) {\n            return packUInt32BE(metadata.gamma * gamma_1.GAMMA_DIVISION);\n        }\n        return new Uint8Array();\n    }\n    function packICCP() {\n        if (!metadata.icc) {\n            return new Uint8Array();\n        }\n        let data = packString(metadata.icc.name);\n        data = typed_array_1.concatUInt8Array(data, packUInt8(NULL_SEPARATOR));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(COMPRESSION_METHOD));\n        data = typed_array_1.concatUInt8Array(data, pako.deflate(metadata.icc.profile));\n        return data;\n    }\n    function packSBIT() {\n        if (!metadata.significantBits) {\n            return new Uint8Array();\n        }\n        if (metadata.colorType === color_types_1.COLOR_TYPES.GRAYSCALE) {\n            return packUInt8(metadata.significantBits[0]);\n        }\n        if (metadata.colorType === color_types_1.COLOR_TYPES.TRUE_COLOR ||\n            metadata.colorType === color_types_1.COLOR_TYPES.PALETTE) {\n            const data = new Uint8Array(3);\n            for (let i = 0; i < 3; i++) {\n                data[i] = metadata.significantBits[i];\n            }\n            return data;\n        }\n        if (metadata.colorType === color_types_1.COLOR_TYPES.GRAYSCALE_WITH_ALPHA) {\n            return typed_array_1.concatUInt8Array(packUInt8(metadata.significantBits[0]), packUInt8(metadata.significantBits[3]));\n        }\n        if (metadata.colorType === color_types_1.COLOR_TYPES.TRUE_COLOR_WITH_ALPHA) {\n            const data = new Uint8Array(4);\n            for (let i = 0; i < 4; i++) {\n                data[i] = metadata.significantBits[i];\n            }\n            return data;\n        }\n        return new Uint8Array();\n    }\n    function packSRGB() {\n        if (metadata.sRGB !== undefined) {\n            return packUInt8(metadata.sRGB);\n        }\n        return new Uint8Array();\n    }\n    function packBKGD() {\n        if (!metadata.background) {\n            return new Uint8Array();\n        }\n        if ((metadata.colorType & 3) === color_types_1.COLOR_TYPES.GRAYSCALE) {\n            const color = rescale_sample_1.default(metadata.background[0], 8, metadata.depth);\n            return packUInt16BE(color);\n        }\n        if ((metadata.colorType & 3) === color_types_1.COLOR_TYPES.TRUE_COLOR) {\n            const data = new Uint8Array(6);\n            for (let i = 0; i < 3; i++) {\n                const color = rescale_sample_1.default(metadata.background[i], 8, metadata.depth);\n                data[i * 2] = (color >> 8) & 0xff;\n                data[i * 2 + 1] = color & 0xff;\n            }\n            return data;\n        }\n        else if (metadata.colorType === color_types_1.COLOR_TYPES.PALETTE) {\n            if (!metadata.palette) {\n                throw new Error('Missing chunk: PLTE');\n            }\n            let index = -1;\n            for (let paletteIndex = 0; paletteIndex < metadata.palette.length; paletteIndex++) {\n                for (let i = 0; i < 4; i++) {\n                    if (metadata.palette[paletteIndex][i] === metadata.background[i]) {\n                        index = paletteIndex;\n                        break;\n                    }\n                }\n            }\n            if (index === -1) {\n                throw new Error('Background not in palette');\n            }\n            return packUInt8(index);\n        }\n        return new Uint8Array();\n    }\n    function packHIST() {\n        const data = [];\n        if (metadata.histogram) {\n            metadata.histogram.forEach(function (value) {\n                data.push((value >> 8) & 0xff, value & 0xff);\n            });\n        }\n        return new Uint8Array();\n    }\n    function packPHYS() {\n        let data = new Uint8Array();\n        if (metadata.physicalDimensions) {\n            data = typed_array_1.concatUInt8Array(data, packUInt32BE(metadata.physicalDimensions.pixelPerUnitX));\n            data = typed_array_1.concatUInt8Array(data, packUInt32BE(metadata.physicalDimensions.pixelPerUnitY));\n            data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.physicalDimensions.unit));\n        }\n        return data;\n    }\n    function packSPLT() {\n        if (!metadata.suggestedPalette) {\n            return new Uint8Array();\n        }\n        let data = typed_array_1.concatUInt8Array(packString(metadata.suggestedPalette.name), packUInt8(NULL_SEPARATOR));\n        data = typed_array_1.concatUInt8Array(data, packUInt8(metadata.suggestedPalette.depth));\n        for (let i = 0; i < metadata.suggestedPalette.palette.length; i++) {\n            const palette = metadata.suggestedPalette.palette[i];\n            if (metadata.suggestedPalette.depth === 8) {\n                const paletteData = new Uint8Array([\n                    palette[0],\n                    palette[1],\n                    palette[2],\n                    palette[3],\n                    (palette[4] >> 8) & 0xff,\n                    palette[4] & 0xff,\n                ]);\n                data = typed_array_1.concatUInt8Array(data, paletteData);\n            }\n            else if (metadata.suggestedPalette.depth === 16) {\n                const paletteData = new Uint8Array(10);\n                for (let i = 0; i < 5; i++) {\n                    paletteData[i * 2] = (palette[i] >> 8) & 0xff;\n                    paletteData[i * 2 + 1] = palette[i] & 0xff;\n                }\n                data = typed_array_1.concatUInt8Array(data, paletteData);\n            }\n            else {\n                // throw new Error('Unsupported sPLT depth: ' + depth);\n            }\n        }\n        return data;\n    }\n    function packTIME() {\n        if (!metadata.lastModificationTime) {\n            return new Uint8Array();\n        }\n        const data = new Uint8Array(7);\n        const date = new Date(metadata.lastModificationTime);\n        const year = date.getUTCFullYear();\n        data[0] = (year >> 8) & 0xff;\n        data[1] = year & 0xff;\n        data[2] = date.getUTCMonth() + 1;\n        data[3] = date.getUTCDate();\n        data[4] = date.getUTCHours();\n        data[5] = date.getUTCMinutes();\n        data[6] = date.getUTCSeconds();\n        return data;\n    }\n    function addChunk(chunkName, data) {\n        const nameData = packString(chunkName);\n        const lengthData = packUInt32BE(data.length);\n        const typeAndData = typed_array_1.concatUInt8Array(nameData, data);\n        const calculatedCrc32 = crc32_1.default(typeAndData);\n        const endData = packUInt32BE(calculatedCrc32);\n        const chunkData = typed_array_1.concatUInt8Array(typed_array_1.concatUInt8Array(lengthData, typeAndData), endData);\n        typedArray = typed_array_1.concatUInt8Array(typedArray, chunkData);\n    }\n    // tEXt\n    if (metadata.text) {\n        Object.keys(metadata.text).forEach(function (keyword) {\n            let data = typed_array_1.concatUInt8Array(packString(keyword), packUInt8(NULL_SEPARATOR));\n            data = typed_array_1.concatUInt8Array(data, packString(metadata.text[keyword]));\n            addChunk('tEXt', data);\n        });\n    }\n    // zTXt\n    if (metadata.compressedText) {\n        Object.keys(metadata.compressedText).forEach(function (keyword) {\n            let data = typed_array_1.concatUInt8Array(packString(keyword), packUInt8(NULL_SEPARATOR));\n            data = typed_array_1.concatUInt8Array(data, packUInt8(COMPRESSION_METHOD));\n            data = typed_array_1.concatUInt8Array(data, pako.deflate(packString(metadata.compressedText[keyword])));\n            addChunk('zTXt', data);\n        });\n    }\n    // iTXt\n    if (metadata.internationalText) {\n        Object.keys(metadata.internationalText).forEach(function (keyword) {\n            const { languageTag, translatedKeyword, text, } = metadata.internationalText[keyword];\n            const textData = utf8_1.encode(text);\n            const compressedTextData = pako.deflate(textData);\n            const compressionFlag = compressedTextData.length < textData.length ? 1 : 0;\n            let data = typed_array_1.concatUInt8Array(packString(keyword), packUInt8(NULL_SEPARATOR));\n            data = typed_array_1.concatUInt8Array(data, packUInt8(compressionFlag));\n            data = typed_array_1.concatUInt8Array(data, packUInt8(COMPRESSION_METHOD));\n            data = typed_array_1.concatUInt8Array(data, packString(languageTag));\n            data = typed_array_1.concatUInt8Array(data, packUInt8(NULL_SEPARATOR));\n            data = typed_array_1.concatUInt8Array(data, utf8_1.encode(translatedKeyword));\n            data = typed_array_1.concatUInt8Array(data, packUInt8(NULL_SEPARATOR));\n            data = typed_array_1.concatUInt8Array(data, compressionFlag ? compressedTextData : textData);\n            addChunk('iTXt', data);\n        });\n    }\n    // Other Chunks\n    Object.keys(chunkPackers).forEach(function (chunkName) {\n        const data = chunkPackers[chunkName]();\n        if (data.length > 0 || chunkName === 'IEND') {\n            addChunk(chunkName, data);\n        }\n    });\n    return typedArray;\n}\nexports.default = encode;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/encode/index.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/channels.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/channels.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-30 02:36\n * @author vivaxy\n */\nfunction typedArrayToChannels(typedArray, depth) {\n    const channels = [];\n    let typedArrayIndex = 0;\n    while (typedArrayIndex < typedArray.length) {\n        if (depth === 1) {\n            const uint8 = typedArray[typedArrayIndex++];\n            channels.push((uint8 >> 7) & 1, (uint8 >> 6) & 1, (uint8 >> 5) & 1, (uint8 >> 4) & 1, (uint8 >> 3) & 1, (uint8 >> 2) & 1, (uint8 >> 1) & 1, uint8 & 1);\n        }\n        else if (depth === 2) {\n            const uint8 = typedArray[typedArrayIndex++];\n            channels.push((uint8 >> 6) & 3, (uint8 >> 4) & 3, (uint8 >> 2) & 3, uint8 & 3);\n        }\n        else if (depth === 4) {\n            const uint8 = typedArray[typedArrayIndex++];\n            channels.push((uint8 >> 4) & 15, uint8 & 15);\n        }\n        else if (depth === 8) {\n            const uint8 = typedArray[typedArrayIndex++];\n            channels.push(uint8);\n        }\n        else if (depth === 16) {\n            channels.push((typedArray[typedArrayIndex++] << 8) | typedArray[typedArrayIndex++]);\n        }\n        else {\n            throw new Error('Unsupported depth: ' + depth);\n        }\n    }\n    return channels;\n}\nexports.typedArrayToChannels = typedArrayToChannels;\nfunction channelsToTypedArray(channels, depth, dataLength) {\n    const typedArray = new Uint8Array(dataLength);\n    let typedArrayIndex = 0;\n    let channelIndex = 0;\n    while (channelIndex < channels.length) {\n        if (depth === 1) {\n            typedArray[typedArrayIndex++] =\n                ((channels[channelIndex++] & 1) << 7) |\n                    ((channels[channelIndex++] & 1) << 6) |\n                    ((channels[channelIndex++] & 1) << 5) |\n                    ((channels[channelIndex++] & 1) << 4) |\n                    ((channels[channelIndex++] & 1) << 3) |\n                    ((channels[channelIndex++] & 1) << 2) |\n                    ((channels[channelIndex++] & 1) << 1) |\n                    (channels[channelIndex++] & 1);\n        }\n        else if (depth === 2) {\n            typedArray[typedArrayIndex++] =\n                ((channels[channelIndex++] & 3) << 6) |\n                    ((channels[channelIndex++] & 3) << 4) |\n                    ((channels[channelIndex++] & 3) << 2) |\n                    (channels[channelIndex++] & 3);\n        }\n        else if (depth === 4) {\n            typedArray[typedArrayIndex++] =\n                ((channels[channelIndex++] & 15) << 4) |\n                    (channels[channelIndex++] & 15);\n        }\n        else if (depth === 8) {\n            typedArray[typedArrayIndex++] = channels[channelIndex++];\n        }\n        else if (depth === 16) {\n            const channel = channels[channelIndex++];\n            typedArray[typedArrayIndex++] = (channel >> 8) & 0xff;\n            typedArray[typedArrayIndex++] = channel & 0xff;\n        }\n        else {\n            throw new Error('Unsupported depth: ' + depth);\n        }\n    }\n    return typedArray;\n}\nexports.channelsToTypedArray = channelsToTypedArray;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/channels.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/chromaticities.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/chromaticities.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-29 10:17\n * @author vivaxy\n */\nexports.CHROMATICITIES_DIVISION = 1e5;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/chromaticities.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/color-types.js":
/*!*************************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/color-types.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-27 01:25\n * @author vivaxy\n */\nvar COLOR_TYPES;\n(function (COLOR_TYPES) {\n    COLOR_TYPES[COLOR_TYPES[\"GRAYSCALE\"] = 0] = \"GRAYSCALE\";\n    COLOR_TYPES[COLOR_TYPES[\"TRUE_COLOR\"] = 2] = \"TRUE_COLOR\";\n    COLOR_TYPES[COLOR_TYPES[\"PALETTE\"] = 3] = \"PALETTE\";\n    COLOR_TYPES[COLOR_TYPES[\"GRAYSCALE_WITH_ALPHA\"] = 4] = \"GRAYSCALE_WITH_ALPHA\";\n    COLOR_TYPES[COLOR_TYPES[\"TRUE_COLOR_WITH_ALPHA\"] = 6] = \"TRUE_COLOR_WITH_ALPHA\";\n})(COLOR_TYPES = exports.COLOR_TYPES || (exports.COLOR_TYPES = {}));\nexports.COLOR_TYPES_TO_CHANNEL_PER_PIXEL = {\n    [COLOR_TYPES.GRAYSCALE]: 1,\n    [COLOR_TYPES.TRUE_COLOR]: 3,\n    [COLOR_TYPES.PALETTE]: 1,\n    [COLOR_TYPES.GRAYSCALE_WITH_ALPHA]: 2,\n    [COLOR_TYPES.TRUE_COLOR_WITH_ALPHA]: 4,\n};\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/color-types.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/crc32.js":
/*!*******************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/crc32.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-10-30 05:14\n * @author vivaxy\n */\nconst crcTable = [];\nfor (let i = 0; i < 256; i++) {\n    let currentCrc = i;\n    for (let j = 0; j < 8; j++) {\n        if (currentCrc & 1) {\n            currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\n        }\n        else {\n            currentCrc = currentCrc >>> 1;\n        }\n    }\n    crcTable[i] = currentCrc;\n}\nfunction crc32(buf) {\n    let crc = -1;\n    for (let i = 0; i < buf.length; i++) {\n        crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n}\nexports.default = crc32;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/crc32.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/filters.js":
/*!*********************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/filters.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-27 01:29\n * @author vivaxy\n */\nexports.FILTER_LENGTH = 1;\nvar FILTER_TYPES;\n(function (FILTER_TYPES) {\n    FILTER_TYPES[FILTER_TYPES[\"NONE\"] = 0] = \"NONE\";\n    FILTER_TYPES[FILTER_TYPES[\"SUB\"] = 1] = \"SUB\";\n    FILTER_TYPES[FILTER_TYPES[\"UP\"] = 2] = \"UP\";\n    FILTER_TYPES[FILTER_TYPES[\"AVERAGE\"] = 3] = \"AVERAGE\";\n    FILTER_TYPES[FILTER_TYPES[\"PAETH\"] = 4] = \"PAETH\";\n})(FILTER_TYPES = exports.FILTER_TYPES || (exports.FILTER_TYPES = {}));\nexports.unfilters = {\n    [FILTER_TYPES.NONE](data) {\n        return data;\n    },\n    [FILTER_TYPES.SUB](data, bytePerPixel) {\n        const unfiltered = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const left = unfiltered[i - bytePerPixel] || 0;\n            unfiltered[i] = data[i] + left;\n        }\n        return unfiltered;\n    },\n    [FILTER_TYPES.UP](data, bytePerPixel, prevUnfilteredLine) {\n        const unfilteredLine = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const up = prevUnfilteredLine[i] || 0;\n            unfilteredLine[i] = up + data[i];\n        }\n        return unfilteredLine;\n    },\n    [FILTER_TYPES.AVERAGE](data, bytePerPixel, prevUnfilteredLine) {\n        const unfilteredLine = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const left = unfilteredLine[i - bytePerPixel] || 0;\n            const above = prevUnfilteredLine[i] || 0;\n            const avg = (left + above) >> 1;\n            unfilteredLine[i] = data[i] + avg;\n        }\n        return unfilteredLine;\n    },\n    [FILTER_TYPES.PAETH](data, bytePerPixel, prevUnfilteredLine) {\n        const unfilteredLine = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const left = unfilteredLine[i - bytePerPixel] || 0;\n            const above = prevUnfilteredLine[i];\n            const upperLeft = prevUnfilteredLine[i - bytePerPixel] || 0;\n            const p = paeth(left, above, upperLeft);\n            unfilteredLine[i] = data[i] + p;\n        }\n        return unfilteredLine;\n    },\n};\nexports.filters = {\n    [FILTER_TYPES.NONE](data) {\n        let sum = 0;\n        for (let i = 0; i < data.length; i++) {\n            sum += data[i];\n        }\n        return {\n            sum,\n            filtered: data,\n        };\n    },\n    [FILTER_TYPES.SUB](data, bytePerPixel) {\n        let sum = 0;\n        const filtered = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const left = data[i - bytePerPixel] || 0;\n            filtered[i] = data[i] - left;\n            sum += filtered[i];\n        }\n        return {\n            sum,\n            filtered,\n        };\n    },\n    [FILTER_TYPES.UP](data, bytePerPixel, prevUnfilteredLine) {\n        let sum = 0;\n        const filtered = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const up = prevUnfilteredLine[i] || 0;\n            filtered[i] = data[i] - up;\n            sum += filtered[i];\n        }\n        return {\n            sum,\n            filtered,\n        };\n    },\n    [FILTER_TYPES.AVERAGE](data, bytePerPixel, prevUnfilteredLine) {\n        let sum = 0;\n        const filtered = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const left = data[i - bytePerPixel] || 0;\n            const above = prevUnfilteredLine[i] || 0;\n            const avg = (left + above) >> 1;\n            filtered[i] = data[i] - avg;\n            sum += filtered[i];\n        }\n        return {\n            sum,\n            filtered,\n        };\n    },\n    [FILTER_TYPES.PAETH](data, bytePerPixel, prevUnfilteredLine) {\n        let sum = 0;\n        const filtered = new Uint8Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            const left = data[i - bytePerPixel] || 0;\n            const above = prevUnfilteredLine[i] || 0;\n            const upperLeft = prevUnfilteredLine[i - bytePerPixel] || 0;\n            const p = paeth(left, above, upperLeft);\n            filtered[i] = data[i] - p;\n            sum += filtered[i];\n        }\n        return {\n            sum,\n            filtered,\n        };\n    },\n};\nfunction paeth(left, above, upperLeft) {\n    const p = left + above - upperLeft;\n    const pa = Math.abs(p - left);\n    const pb = Math.abs(p - above);\n    const pc = Math.abs(p - upperLeft);\n    if (pa <= pb && pa <= pc) {\n        return left;\n    }\n    else if (pb <= pc) {\n        return above;\n    }\n    else {\n        return upperLeft;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/filters.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/gamma.js":
/*!*******************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/gamma.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-29 09:44\n * @author vivaxy\n */\nexports.GAMMA_DIVISION = 1e5;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/gamma.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/interlace.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/interlace.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-31 02:27\n * @author vivaxy\n */\nconst ADAM7_PASSES = [\n    {\n        x: [0],\n        y: [0],\n    },\n    {\n        x: [4],\n        y: [0],\n    },\n    {\n        x: [0, 4],\n        y: [4],\n    },\n    {\n        x: [2, 6],\n        y: [0, 4],\n    },\n    {\n        x: [0, 2, 4, 6],\n        y: [2, 6],\n    },\n    {\n        x: [1, 3, 5, 7],\n        y: [0, 2, 4, 6],\n    },\n    {\n        x: [0, 1, 2, 3, 4, 5, 6, 7],\n        y: [1, 3, 5, 7],\n    },\n];\nfunction buildImages(interlace, width, height) {\n    if (!interlace) {\n        return [\n            {\n                passWidth: width,\n                passHeight: height,\n                passIndex: 0,\n            },\n        ];\n    }\n    const images = [];\n    ADAM7_PASSES.forEach(function ({ x, y }, passIndex) {\n        const remainingX = width % 8;\n        const remainingY = height % 8;\n        const repeatX = (width - remainingX) >> 3;\n        const repeatY = (height - remainingY) >> 3;\n        let passWidth = repeatX * x.length;\n        for (let i = 0; i < x.length; i++) {\n            if (x[i] < remainingX) {\n                passWidth++;\n            }\n            else {\n                break;\n            }\n        }\n        let passHeight = repeatY * y.length;\n        for (let i = 0; i < y.length; i++) {\n            if (y[i] < remainingY) {\n                passHeight++;\n            }\n            else {\n                break;\n            }\n        }\n        if (passWidth && passHeight) {\n            images.push({\n                passWidth: passWidth,\n                passHeight: passHeight,\n                passIndex: passIndex,\n            });\n        }\n    });\n    return images;\n}\nexports.buildImages = buildImages;\nfunction getPixelIndex(interlace, width, passIndex, widthIndex, heightIndex) {\n    if (!interlace) {\n        return (width * heightIndex + widthIndex) << 2;\n    }\n    const pass = ADAM7_PASSES[passIndex];\n    const remainingX = widthIndex % pass.x.length;\n    const remainingY = heightIndex % pass.y.length;\n    const repeatX = (widthIndex - remainingX) / pass.x.length;\n    const repeatY = (heightIndex - remainingY) / pass.y.length;\n    const offsetX = pass.x[remainingX];\n    const offsetY = pass.y[remainingY];\n    return (width * ((repeatY << 3) + offsetY) + (repeatX << 3) + offsetX) << 2;\n}\nexports.getPixelIndex = getPixelIndex;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/interlace.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-28 02:32\n * @author vivaxy\n */\nfunction rescaleSample(value, depthIn, depthOut) {\n    if (depthIn === depthOut) {\n        return value;\n    }\n    const maxSampleIn = 2 ** depthIn - 1;\n    const maxSampleOut = 2 ** depthOut - 1;\n    return Math.round((value * maxSampleOut) / maxSampleIn);\n}\nexports.default = rescaleSample;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/rescale-sample.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/signature.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/signature.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-27 01:24\n * @author vivaxy\n */\nexports.default = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/signature.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/typed-array.js":
/*!*************************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/typed-array.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-27 01:31\n * @author vivaxy\n */\nfunction concatUInt8Array(a, b) {\n    const concated = new Uint8Array(a.length + b.length);\n    concated.set(a);\n    concated.set(b, a.length);\n    return concated;\n}\nexports.concatUInt8Array = concatUInt8Array;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/typed-array.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/helpers/utf8.js":
/*!******************************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/helpers/utf8.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @since 2019-12-29 09:04\n * @author vivaxy\n * @see https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\n */\nfunction encode(string) {\n    let i = 0;\n    let bytes = new Uint8Array(string.length * 4);\n    for (let ci = 0; ci != string.length; ci++) {\n        let c = string.charCodeAt(ci);\n        if (c < 128) {\n            bytes[i++] = c;\n            continue;\n        }\n        if (c < 2048) {\n            bytes[i++] = (c >> 6) | 192;\n        }\n        else {\n            if (c > 0xd7ff && c < 0xdc00) {\n                if (++ci >= string.length) {\n                    throw new Error('UTF-8 encode: incomplete surrogate pair');\n                }\n                const c2 = string.charCodeAt(ci);\n                if (c2 < 0xdc00 || c2 > 0xdfff) {\n                    throw new Error('UTF-8 encode: second surrogate character 0x' +\n                        c2.toString(16) +\n                        ' at index ' +\n                        ci +\n                        ' out of range');\n                }\n                c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n                bytes[i++] = (c >> 18) | 240;\n                bytes[i++] = ((c >> 12) & 63) | 128;\n            }\n            else {\n                bytes[i++] = (c >> 12) | 224;\n            }\n            bytes[i++] = ((c >> 6) & 63) | 128;\n        }\n        bytes[i++] = (c & 63) | 128;\n    }\n    return bytes.subarray(0, i);\n}\nexports.encode = encode;\nfunction decode(bytes) {\n    let i = 0;\n    let s = '';\n    while (i < bytes.length) {\n        let c = bytes[i++];\n        if (c > 127) {\n            if (c > 191 && c < 224) {\n                if (i >= bytes.length) {\n                    throw new Error('UTF-8 decode: incomplete 2-byte sequence');\n                }\n                c = ((c & 31) << 6) | (bytes[i++] & 63);\n            }\n            else if (c > 223 && c < 240) {\n                if (i + 1 >= bytes.length) {\n                    throw new Error('UTF-8 decode: incomplete 3-byte sequence');\n                }\n                c = ((c & 15) << 12) | ((bytes[i++] & 63) << 6) | (bytes[i++] & 63);\n            }\n            else if (c > 239 && c < 248) {\n                if (i + 2 >= bytes.length) {\n                    throw new Error('UTF-8 decode: incomplete 4-byte sequence');\n                }\n                c =\n                    ((c & 7) << 18) |\n                        ((bytes[i++] & 63) << 12) |\n                        ((bytes[i++] & 63) << 6) |\n                        (bytes[i++] & 63);\n            }\n            else {\n                throw new Error('UTF-8 decode: unknown multibyte start 0x' +\n                    c.toString(16) +\n                    ' at index ' +\n                    (i - 1));\n            }\n        }\n        if (c <= 0xffff) {\n            s += String.fromCharCode(c);\n        }\n        else if (c <= 0x10ffff) {\n            c -= 0x10000;\n            s += String.fromCharCode((c >> 10) | 0xd800);\n            s += String.fromCharCode((c & 0x3ff) | 0xdc00);\n        }\n        else {\n            throw new Error('UTF-8 decode: code point 0x' +\n                c.toString(16) +\n                ' exceeds UTF-16 reach');\n        }\n    }\n    return s;\n}\nexports.decode = decode;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/helpers/utf8.js?");

/***/ }),

/***/ "./node_modules/@vivaxy/png/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@vivaxy/png/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst decode_1 = __webpack_require__(/*! ./decode */ \"./node_modules/@vivaxy/png/lib/decode/index.js\");\nexports.decode = decode_1.default;\nconst encode_1 = __webpack_require__(/*! ./encode */ \"./node_modules/@vivaxy/png/lib/encode/index.js\");\nexports.encode = encode_1.default;\n\n\n//# sourceURL=webpack:///./node_modules/@vivaxy/png/lib/index.js?");

/***/ }),

/***/ "./node_modules/arr-flatten/index.js":
/*!*******************************************!*\
  !*** ./node_modules/arr-flatten/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * arr-flatten <https://github.com/jonschlinkert/arr-flatten>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nmodule.exports = function (arr) {\n  return flat(arr, []);\n};\n\nfunction flat(arr, res) {\n  var i = 0, cur;\n  var len = arr.length;\n  for (; i < len; i++) {\n    cur = arr[i];\n    Array.isArray(cur) ? flat(cur, res) : res.push(cur);\n  }\n  return res;\n}\n\n\n//# sourceURL=webpack:///./node_modules/arr-flatten/index.js?");

/***/ }),

/***/ "./node_modules/arraybuffer-to-string/browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/arraybuffer-to-string/browser.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/**\r\n * @module arraybuffer-to-string/browser\r\n */\r\n\r\n\r\n\r\nmodule.exports = function ArrayBufferToString (buffer, encoding) {\r\n\tif (encoding == null) encoding = 'utf8'\r\n\r\n\tvar uint8 = new Uint8Array(buffer)\r\n\r\n\tif (encoding === 'hex') {\r\n\t\tvar out = ''\r\n\t\tfor (var i = 0, l = uint8.byteLength; i < l; ++i) {\r\n\t\t\tout += toHex(uint8[i])\r\n\t\t}\r\n\t\treturn out\r\n\t}\r\n\r\n\tif (encoding === 'base64') {\r\n\t\tstr = String.fromCharCode.apply(null, uint8)\r\n\t\treturn btoa(str)\r\n\t}\r\n\r\n\tif (encoding === 'binary' ||\r\n\t\tencoding === 'latin1' ||\r\n\t\t!global.TextDecoder) {\r\n\t\tstr = String.fromCharCode.apply(null, uint8)\r\n\t\treturn str\r\n\t}\r\n\r\n\r\n\t//TextDecoder way\r\n\tif (encoding === 'utf16le') encoding = 'utf-16le'\r\n\r\n\tvar decoder = new TextDecoder(encoding)\r\n\tvar str = decoder.decode(uint8)\r\n\treturn str\r\n}\r\n\r\n\r\nfunction toHex (n) {\r\n  if (n < 16) return '0' + n.toString(16)\r\n  return n.toString(16)\r\n}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/arraybuffer-to-string/browser.js?");

/***/ }),

/***/ "./node_modules/atob-lite/atob-browser.js":
/*!************************************************!*\
  !*** ./node_modules/atob-lite/atob-browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function _atob(str) {\n  return atob(str)\n}\n\n\n//# sourceURL=webpack:///./node_modules/atob-lite/atob-browser.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/clamp/index.js":
/*!*************************************!*\
  !*** ./node_modules/clamp/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = clamp\n\nfunction clamp(value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value)\n}\n\n\n//# sourceURL=webpack:///./node_modules/clamp/index.js?");

/***/ }),

/***/ "./node_modules/clip-pixels/index.js":
/*!*******************************************!*\
  !*** ./node_modules/clip-pixels/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nmodule.exports = function clip (pixels, shape, rect) {\r\n\tvar stride = shape[2] || 4\r\n\tvar row = shape[0],\r\n\t\tcol = shape[1] || Math.floor(pixels.length / stride / row)\r\n\tvar x = rect[0],\r\n\t\ty = rect[1] || 0,\r\n\t\tw = rect[2] || row - x,\r\n\t\th = rect[3] || col - y\r\n\r\n\tvar result = Array(w * stride * h)\r\n\r\n\tvar off = y * row * stride + x * stride\r\n\tfor (var j = 0; j < h; j++) {\r\n\t\tfor (var i = 0; i < w; i++) {\r\n\t\t\tfor (var k = 0; k < stride; k++) {\r\n\t\t\t\tresult[j * w * stride + i * stride + k] = pixels[off + j * row * stride + i * stride + k]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/clip-pixels/index.js?");

/***/ }),

/***/ "./node_modules/compute-dims/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/compute-dims/lib/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar isPositiveInteger = __webpack_require__( /*! validate.io-positive-integer */ \"./node_modules/validate.io-positive-integer/lib/index.js\" ),\n\tisArray = __webpack_require__( /*! validate.io-array */ \"./node_modules/validate.io-array/lib/index.js\" ),\n\tndarrayLike = __webpack_require__( /*! validate.io-ndarray-like */ \"./node_modules/validate.io-ndarray-like/lib/index.js\" ),\n\tcreateCopy = __webpack_require__( /*! utils-copy */ \"./node_modules/utils-copy/lib/index.js\" );\n\n\n// DIMS //\n\n/**\n* FUNCTION: dims( x, d, max )\n*\tComputes array dimensions.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} d - dimensions array\n* @param {Number} max - max number of dimensions\n* @returns {Array} dimensions array\n*/\nfunction dims( arr, d, max ) {\n\tif ( max && d.length === max ) {\n\t\treturn;\n\t}\n\tif ( !isArray( arr[0] ) ) {\n\t\treturn;\n\t}\n\td.push( arr[0].length );\n\tdims( arr[ 0 ], d, max );\n} // end FUNCTION dims()\n\n/**\n* FUNCTION: check( arr, d )\n*\tChecks that all array elements have the same dimensions.\n*\n* @private\n* @param {Array} arr - input array\n* @param {Array} d - dimensions array\n* @returns {Boolean} boolean indicating if all array elements have the same dimensions\n*/\nfunction check( arr, d ) {\n\tvar len = arr.length,\n\t\tdim = d.shift(),\n\t\tnDims = d.length,\n\t\tval,\n\t\tflg;\n\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tval = arr[ i ];\n\t\tif ( !isArray( val ) || val.length !== dim ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( nDims ) {\n\t\t\tflg = check( val, d.slice() );\n\t\t\tif ( !flg ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION check()\n\n/**\n* FUNCTION: compute( x[, max] )\n*\tComputes dimensions.\n*\n* @param {Array} x - input object\n* @param {Number} [max] - limits the number of dimensions returned\n* @returns {Array|null} array of dimensions or null\n*/\nfunction compute( x, max ) {\n\n\tvar d, flg;\n\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isPositiveInteger( max ) ) {\n\t\t\tthrow new TypeError( 'dims()::invalid input argument. `max` option must be a positive integer.' );\n\t\t}\n\t}\n\n\tif ( ndarrayLike( x ) === true ) {\n\t \td = createCopy( x.shape );\n\t\tif ( max && max <= d.length ) {\n\t\t\td.length = max;\n\t\t}\n\t\treturn d;\n\t}\n\n\tif ( isArray( x ) ) {\n\t\t// [0] Initialize the dimensions array:\n\t\td = [ x.length ];\n\n\t\t// [1] Recursively determine array dimensions:\n\t\tdims( x, d, max );\n\n\t\t// [2] Check that all array element dimensions are consistent...\n\t\tif ( d.length > 1 ) {\n\t\t\tflg = check( x, d.slice( 1 ) );\n\t\t\tif ( !flg ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn d;\n\t}\n\n\tthrow new TypeError( 'dims()::invalid input argument. Must provide an array, matrix or ndarray.' );\n} // end FUNCTION compute()\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n\n\n//# sourceURL=webpack:///./node_modules/compute-dims/lib/index.js?");

/***/ }),

/***/ "./node_modules/const-max-uint32/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/const-max-uint32/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// EXPORTS //\n\nmodule.exports = 4294967295; // 2**32 - 1\n\n\n//# sourceURL=webpack:///./node_modules/const-max-uint32/lib/index.js?");

/***/ }),

/***/ "./node_modules/const-pinf-float64/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/const-pinf-float64/lib/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// EXPORTS //\n\nmodule.exports = Number.POSITIVE_INFINITY;\n\n\n//# sourceURL=webpack:///./node_modules/const-pinf-float64/lib/index.js?");

/***/ }),

/***/ "./node_modules/dtype/index.js":
/*!*************************************!*\
  !*** ./node_modules/dtype/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/dtype/index.js?");

/***/ }),

/***/ "./node_modules/file-type/index.js":
/*!*****************************************!*\
  !*** ./node_modules/file-type/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nconst toBytes = s => [...s].map(c => c.charCodeAt(0));\nconst xpiZipFilename = toBytes('META-INF/mozilla.rsa');\nconst oxmlContentTypes = toBytes('[Content_Types].xml');\nconst oxmlRels = toBytes('_rels/.rels');\n\nfunction readUInt64LE(buf, offset = 0) {\n\tlet n = buf[offset];\n\tlet mul = 1;\n\tlet i = 0;\n\twhile (++i < 8) {\n\t\tmul *= 0x100;\n\t\tn += buf[offset + i] * mul;\n\t}\n\n\treturn n;\n}\n\nconst fileType = input => {\n\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t}\n\n\tconst buf = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\tif (!(buf && buf.length > 1)) {\n\t\treturn null;\n\t}\n\n\tconst check = (header, options) => {\n\t\toptions = Object.assign({\n\t\t\toffset: 0\n\t\t}, options);\n\n\t\tfor (let i = 0; i < header.length; i++) {\n\t\t\t// If a bitmask is set\n\t\t\tif (options.mask) {\n\t\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\t\tif (header[i] !== (options.mask[i] & buf[i + options.offset])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (header[i] !== buf[i + options.offset]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst checkString = (header, options) => check(toBytes(header), options);\n\n\tif (check([0xFF, 0xD8, 0xFF])) {\n\t\treturn {\n\t\t\text: 'jpg',\n\t\t\tmime: 'image/jpeg'\n\t\t};\n\t}\n\n\tif (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'png',\n\t\t\tmime: 'image/png'\n\t\t};\n\t}\n\n\tif (check([0x47, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'gif',\n\t\t\tmime: 'image/gif'\n\t\t};\n\t}\n\n\tif (check([0x57, 0x45, 0x42, 0x50], {offset: 8})) {\n\t\treturn {\n\t\t\text: 'webp',\n\t\t\tmime: 'image/webp'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'flif',\n\t\t\tmime: 'image/flif'\n\t\t};\n\t}\n\n\t// Needs to be before `tif` check\n\tif (\n\t\t(check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) &&\n\t\tcheck([0x43, 0x52], {offset: 8})\n\t) {\n\t\treturn {\n\t\t\text: 'cr2',\n\t\t\tmime: 'image/x-canon-cr2'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x49, 0x49, 0x2A, 0x0]) ||\n\t\tcheck([0x4D, 0x4D, 0x0, 0x2A])\n\t) {\n\t\treturn {\n\t\t\text: 'tif',\n\t\t\tmime: 'image/tiff'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4D])) {\n\t\treturn {\n\t\t\text: 'bmp',\n\t\t\tmime: 'image/bmp'\n\t\t};\n\t}\n\n\tif (check([0x49, 0x49, 0xBC])) {\n\t\treturn {\n\t\t\text: 'jxr',\n\t\t\tmime: 'image/vnd.ms-photo'\n\t\t};\n\t}\n\n\tif (check([0x38, 0x42, 0x50, 0x53])) {\n\t\treturn {\n\t\t\text: 'psd',\n\t\t\tmime: 'image/vnd.adobe.photoshop'\n\t\t};\n\t}\n\n\t// Zip-based file formats\n\t// Need to be before the `zip` check\n\tif (check([0x50, 0x4B, 0x3, 0x4])) {\n\t\tif (\n\t\t\tcheck([0x6D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x65, 0x70, 0x75, 0x62, 0x2B, 0x7A, 0x69, 0x70], {offset: 30})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: 'application/epub+zip'\n\t\t\t};\n\t\t}\n\n\t\t// Assumes signed `.xpi` from addons.mozilla.org\n\t\tif (check(xpiZipFilename, {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'xpi',\n\t\t\t\tmime: 'application/x-xpinstall'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.text', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.text'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.spreadsheet', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.presentation', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation'\n\t\t\t};\n\t\t}\n\n\t\t// The docx, xlsx and pptx file types extend the Office Open XML file format:\n\t\t// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n\t\t// We look for:\n\t\t// - one entry named '[Content_Types].xml' or '_rels/.rels',\n\t\t// - one entry indicating specific type of file.\n\t\t// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\t\tconst findNextZipHeaderIndex = (arr, startAt = 0) => arr.findIndex((el, i, arr) => i >= startAt && arr[i] === 0x50 && arr[i + 1] === 0x4B && arr[i + 2] === 0x3 && arr[i + 3] === 0x4);\n\n\t\tlet zipHeaderIndex = 0; // The first zip header was already found at index 0\n\t\tlet oxmlFound = false;\n\t\tlet type = null;\n\n\t\tdo {\n\t\t\tconst offset = zipHeaderIndex + 30;\n\n\t\t\tif (!oxmlFound) {\n\t\t\t\toxmlFound = (check(oxmlContentTypes, {offset}) || check(oxmlRels, {offset}));\n\t\t\t}\n\n\t\t\tif (!type) {\n\t\t\t\tif (checkString('word/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'docx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n\t\t\t\t\t};\n\t\t\t\t} else if (checkString('ppt/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'pptx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n\t\t\t\t\t};\n\t\t\t\t} else if (checkString('xl/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oxmlFound && type) {\n\t\t\t\treturn type;\n\t\t\t}\n\n\t\t\tzipHeaderIndex = findNextZipHeaderIndex(buf, offset);\n\t\t} while (zipHeaderIndex >= 0);\n\n\t\t// No more zip parts available in the buffer, but maybe we are almost certain about the type?\n\t\tif (type) {\n\t\t\treturn type;\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0x50, 0x4B]) &&\n\t\t(buf[2] === 0x3 || buf[2] === 0x5 || buf[2] === 0x7) &&\n\t\t(buf[3] === 0x4 || buf[3] === 0x6 || buf[3] === 0x8)\n\t) {\n\t\treturn {\n\t\t\text: 'zip',\n\t\t\tmime: 'application/zip'\n\t\t};\n\t}\n\n\tif (check([0x75, 0x73, 0x74, 0x61, 0x72], {offset: 257})) {\n\t\treturn {\n\t\t\text: 'tar',\n\t\t\tmime: 'application/x-tar'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) &&\n\t\t(buf[6] === 0x0 || buf[6] === 0x1)\n\t) {\n\t\treturn {\n\t\t\text: 'rar',\n\t\t\tmime: 'application/x-rar-compressed'\n\t\t};\n\t}\n\n\tif (check([0x1F, 0x8B, 0x8])) {\n\t\treturn {\n\t\t\text: 'gz',\n\t\t\tmime: 'application/gzip'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x5A, 0x68])) {\n\t\treturn {\n\t\t\text: 'bz2',\n\t\t\tmime: 'application/x-bzip2'\n\t\t};\n\t}\n\n\tif (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\treturn {\n\t\t\text: '7z',\n\t\t\tmime: 'application/x-7z-compressed'\n\t\t};\n\t}\n\n\tif (check([0x78, 0x01])) {\n\t\treturn {\n\t\t\text: 'dmg',\n\t\t\tmime: 'application/x-apple-diskimage'\n\t\t};\n\t}\n\n\tif (check([0x33, 0x67, 0x70, 0x35]) || // 3gp5\n\t\t(\n\t\t\tcheck([0x0, 0x0, 0x0]) && check([0x66, 0x74, 0x79, 0x70], {offset: 4}) &&\n\t\t\t\t(\n\t\t\t\t\tcheck([0x6D, 0x70, 0x34, 0x31], {offset: 8}) || // MP41\n\t\t\t\t\tcheck([0x6D, 0x70, 0x34, 0x32], {offset: 8}) || // MP42\n\t\t\t\t\tcheck([0x69, 0x73, 0x6F, 0x6D], {offset: 8}) || // ISOM\n\t\t\t\t\tcheck([0x69, 0x73, 0x6F, 0x32], {offset: 8}) || // ISO2\n\t\t\t\t\tcheck([0x6D, 0x6D, 0x70, 0x34], {offset: 8}) || // MMP4\n\t\t\t\t\tcheck([0x4D, 0x34, 0x56], {offset: 8}) || // M4V\n\t\t\t\t\tcheck([0x64, 0x61, 0x73, 0x68], {offset: 8}) // DASH\n\t\t\t\t)\n\t\t)) {\n\t\treturn {\n\t\t\text: 'mp4',\n\t\t\tmime: 'video/mp4'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x54, 0x68, 0x64])) {\n\t\treturn {\n\t\t\text: 'mid',\n\t\t\tmime: 'audio/midi'\n\t\t};\n\t}\n\n\t// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\tif (check([0x1A, 0x45, 0xDF, 0xA3])) {\n\t\tconst sliced = buf.subarray(4, 4 + 4096);\n\t\tconst idPos = sliced.findIndex((el, i, arr) => arr[i] === 0x42 && arr[i + 1] === 0x82);\n\n\t\tif (idPos !== -1) {\n\t\t\tconst docTypePos = idPos + 3;\n\t\t\tconst findDocType = type => [...type].every((c, i) => sliced[docTypePos + i] === c.charCodeAt(0));\n\n\t\t\tif (findDocType('matroska')) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mkv',\n\t\t\t\t\tmime: 'video/x-matroska'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (findDocType('webm')) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webm',\n\t\t\t\t\tmime: 'video/webm'\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tif (check([0x0, 0x0, 0x0, 0x14, 0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20]) ||\n\t\tcheck([0x66, 0x72, 0x65, 0x65], {offset: 4}) || // Type: `free`\n\t\tcheck([0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20], {offset: 4}) ||\n\t\tcheck([0x6D, 0x64, 0x61, 0x74], {offset: 4}) || // MJPEG\n\t\tcheck([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) || // Type: `moov`\n\t\tcheck([0x77, 0x69, 0x64, 0x65], {offset: 4})) {\n\t\treturn {\n\t\t\text: 'mov',\n\t\t\tmime: 'video/quicktime'\n\t\t};\n\t}\n\n\t// RIFF file format which might be AVI, WAV, QCP, etc\n\tif (check([0x52, 0x49, 0x46, 0x46])) {\n\t\tif (check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'avi',\n\t\t\t\tmime: 'video/vnd.avi'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'wav',\n\t\t\t\tmime: 'audio/vnd.wave'\n\t\t\t};\n\t\t}\n\n\t\t// QLCM, QCP file\n\t\tif (check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'qcp',\n\t\t\t\tmime: 'audio/qcelp'\n\t\t\t};\n\t\t}\n\t}\n\n\t// ASF_Header_Object first 80 bytes\n\tif (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t// Search for header should be in first 1KB of file.\n\n\t\tlet offset = 30;\n\t\tdo {\n\t\t\tconst objectSize = readUInt64LE(buf, offset + 16);\n\t\t\tif (check([0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65], {offset})) {\n\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\tif (check([0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {offset: offset + 24})) {\n\t\t\t\t\t// Found audio:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'wma',\n\t\t\t\t\t\tmime: 'audio/x-ms-wma'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (check([0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {offset: offset + 24})) {\n\t\t\t\t\t// Found video:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'wmv',\n\t\t\t\t\t\tmime: 'video/x-ms-asf'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\toffset += objectSize;\n\t\t} while (offset + 24 <= buf.length);\n\n\t\t// Default to ASF generic extension\n\t\treturn {\n\t\t\text: 'asf',\n\t\t\tmime: 'application/vnd.ms-asf'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x0, 0x0, 0x1, 0xBA]) ||\n\t\tcheck([0x0, 0x0, 0x1, 0xB3])\n\t) {\n\t\treturn {\n\t\t\text: 'mpg',\n\t\t\tmime: 'video/mpeg'\n\t\t};\n\t}\n\n\tif (check([0x66, 0x74, 0x79, 0x70, 0x33, 0x67], {offset: 4})) {\n\t\treturn {\n\t\t\text: '3gp',\n\t\t\tmime: 'video/3gpp'\n\t\t};\n\t}\n\n\t// Check for MPEG header at different starting offsets\n\tfor (let start = 0; start < 2 && start < (buf.length - 16); start++) {\n\t\tif (\n\t\t\tcheck([0x49, 0x44, 0x33], {offset: start}) || // ID3 header\n\t\t\tcheck([0xFF, 0xE2], {offset: start, mask: [0xFF, 0xE2]}) // MPEG 1 or 2 Layer 3 header\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp3',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xE4], {offset: start, mask: [0xFF, 0xE4]}) // MPEG 1 or 2 Layer 2 header\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xF8], {offset: start, mask: [0xFF, 0xFC]}) // MPEG 2 layer 0 using ADTS\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xF0], {offset: start, mask: [0xFF, 0xFC]}) // MPEG 4 layer 0 using ADTS\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp4',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0x66, 0x74, 0x79, 0x70, 0x4D, 0x34, 0x41], {offset: 4})\n\t) {\n\t\treturn { // MPEG-4 layer 3 (audio)\n\t\t\text: 'm4a',\n\t\t\tmime: 'audio/mp4' // RFC 4337\n\t\t};\n\t}\n\n\t// Needs to be before `ogg` check\n\tif (check([0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64], {offset: 28})) {\n\t\treturn {\n\t\t\text: 'opus',\n\t\t\tmime: 'audio/opus'\n\t\t};\n\t}\n\n\t// If 'OggS' in first  bytes, then OGG container\n\tif (check([0x4F, 0x67, 0x67, 0x53])) {\n\t\t// This is a OGG container\n\n\t\t// If ' theora' in header.\n\t\tif (check([0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogv',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01video' in header.\n\t\tif (check([0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogm',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\tif (check([0x7F, 0x46, 0x4C, 0x41, 0x43], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'oga',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\tif (check([0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'spx',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01vorbis' in header\n\t\tif (check([0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogg',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\treturn {\n\t\t\text: 'ogx',\n\t\t\tmime: 'application/ogg'\n\t\t};\n\t}\n\n\tif (check([0x66, 0x4C, 0x61, 0x43])) {\n\t\treturn {\n\t\t\text: 'flac',\n\t\t\tmime: 'audio/x-flac'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x41, 0x43, 0x20])) { // 'MAC '\n\t\treturn {\n\t\t\text: 'ape',\n\t\t\tmime: 'audio/ape'\n\t\t};\n\t}\n\n\tif (check([0x77, 0x76, 0x70, 0x6B])) { // 'wvpk'\n\t\treturn {\n\t\t\text: 'wv',\n\t\t\tmime: 'audio/wavpack'\n\t\t};\n\t}\n\n\tif (check([0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A])) {\n\t\treturn {\n\t\t\text: 'amr',\n\t\t\tmime: 'audio/amr'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x50, 0x44, 0x46])) {\n\t\treturn {\n\t\t\text: 'pdf',\n\t\t\tmime: 'application/pdf'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x5A])) {\n\t\treturn {\n\t\t\text: 'exe',\n\t\t\tmime: 'application/x-msdownload'\n\t\t};\n\t}\n\n\tif (\n\t\t(buf[0] === 0x43 || buf[0] === 0x46) &&\n\t\tcheck([0x57, 0x53], {offset: 1})\n\t) {\n\t\treturn {\n\t\t\text: 'swf',\n\t\t\tmime: 'application/x-shockwave-flash'\n\t\t};\n\t}\n\n\tif (check([0x7B, 0x5C, 0x72, 0x74, 0x66])) {\n\t\treturn {\n\t\t\text: 'rtf',\n\t\t\tmime: 'application/rtf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x61, 0x73, 0x6D])) {\n\t\treturn {\n\t\t\text: 'wasm',\n\t\t\tmime: 'application/wasm'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x77, 0x4F, 0x46, 0x46]) &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff',\n\t\t\tmime: 'font/woff'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x77, 0x4F, 0x46, 0x32]) &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff2',\n\t\t\tmime: 'font/woff2'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4C, 0x50], {offset: 34}) &&\n\t\t(\n\t\t\tcheck([0x00, 0x00, 0x01], {offset: 8}) ||\n\t\t\tcheck([0x01, 0x00, 0x02], {offset: 8}) ||\n\t\t\tcheck([0x02, 0x00, 0x02], {offset: 8})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'eot',\n\t\t\tmime: 'application/vnd.ms-fontobject'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'ttf',\n\t\t\tmime: 'font/ttf'\n\t\t};\n\t}\n\n\tif (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\treturn {\n\t\t\text: 'otf',\n\t\t\tmime: 'font/otf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x01, 0x00])) {\n\t\treturn {\n\t\t\text: 'ico',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x02, 0x00])) {\n\t\treturn {\n\t\t\text: 'cur',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x56, 0x01])) {\n\t\treturn {\n\t\t\text: 'flv',\n\t\t\tmime: 'video/x-flv'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x21])) {\n\t\treturn {\n\t\t\text: 'ps',\n\t\t\tmime: 'application/postscript'\n\t\t};\n\t}\n\n\tif (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\treturn {\n\t\t\text: 'xz',\n\t\t\tmime: 'application/x-xz'\n\t\t};\n\t}\n\n\tif (check([0x53, 0x51, 0x4C, 0x69])) {\n\t\treturn {\n\t\t\text: 'sqlite',\n\t\t\tmime: 'application/x-sqlite3'\n\t\t};\n\t}\n\n\tif (check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\treturn {\n\t\t\text: 'nes',\n\t\t\tmime: 'application/x-nintendo-nes-rom'\n\t\t};\n\t}\n\n\tif (check([0x43, 0x72, 0x32, 0x34])) {\n\t\treturn {\n\t\t\text: 'crx',\n\t\t\tmime: 'application/x-google-chrome-extension'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4D, 0x53, 0x43, 0x46]) ||\n\t\tcheck([0x49, 0x53, 0x63, 0x28])\n\t) {\n\t\treturn {\n\t\t\text: 'cab',\n\t\t\tmime: 'application/vnd.ms-cab-compressed'\n\t\t};\n\t}\n\n\t// Needs to be before `ar` check\n\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6E, 0x2D, 0x62, 0x69, 0x6E, 0x61, 0x72, 0x79])) {\n\t\treturn {\n\t\t\text: 'deb',\n\t\t\tmime: 'application/x-deb'\n\t\t};\n\t}\n\n\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E])) {\n\t\treturn {\n\t\t\text: 'ar',\n\t\t\tmime: 'application/x-unix-archive'\n\t\t};\n\t}\n\n\tif (check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\treturn {\n\t\t\text: 'rpm',\n\t\t\tmime: 'application/x-rpm'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x1F, 0xA0]) ||\n\t\tcheck([0x1F, 0x9D])\n\t) {\n\t\treturn {\n\t\t\text: 'Z',\n\t\t\tmime: 'application/x-compress'\n\t\t};\n\t}\n\n\tif (check([0x4C, 0x5A, 0x49, 0x50])) {\n\t\treturn {\n\t\t\text: 'lz',\n\t\t\tmime: 'application/x-lzip'\n\t\t};\n\t}\n\n\tif (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\treturn {\n\t\t\text: 'msi',\n\t\t\tmime: 'application/x-msi'\n\t\t};\n\t}\n\n\tif (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\treturn {\n\t\t\text: 'mxf',\n\t\t\tmime: 'application/mxf'\n\t\t};\n\t}\n\n\tif (check([0x47], {offset: 4}) && (check([0x47], {offset: 192}) || check([0x47], {offset: 196}))) {\n\t\treturn {\n\t\t\text: 'mts',\n\t\t\tmime: 'video/mp2t'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52])) {\n\t\treturn {\n\t\t\text: 'blend',\n\t\t\tmime: 'application/x-blender'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x50, 0x47, 0xFB])) {\n\t\treturn {\n\t\t\text: 'bpg',\n\t\t\tmime: 'image/bpg'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t// JPEG-2000 family\n\n\t\tif (check([0x6A, 0x70, 0x32, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jp2',\n\t\t\t\tmime: 'image/jp2'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6A, 0x70, 0x78, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jpx',\n\t\t\t\tmime: 'image/jpx'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6A, 0x70, 0x6D, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jpm',\n\t\t\t\tmime: 'image/jpm'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6D, 0x6A, 0x70, 0x32], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'mj2',\n\t\t\t\tmime: 'image/mj2'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (check([0x46, 0x4F, 0x52, 0x4D])) {\n\t\treturn {\n\t\t\text: 'aif',\n\t\t\tmime: 'audio/aiff'\n\t\t};\n\t}\n\n\tif (checkString('<?xml ')) {\n\t\treturn {\n\t\t\text: 'xml',\n\t\t\tmime: 'application/xml'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\treturn {\n\t\t\text: 'mobi',\n\t\t\tmime: 'application/x-mobipocket-ebook'\n\t\t};\n\t}\n\n\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\tif (check([0x66, 0x74, 0x79, 0x70], {offset: 4})) {\n\t\tif (check([0x6D, 0x69, 0x66, 0x31], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heif'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6D, 0x73, 0x66, 0x31], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heif-sequence'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x68, 0x65, 0x69, 0x63], {offset: 8}) || check([0x68, 0x65, 0x69, 0x78], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heic'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x68, 0x65, 0x76, 0x63], {offset: 8}) || check([0x68, 0x65, 0x76, 0x78], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heic-sequence'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'ktx',\n\t\t\tmime: 'image/ktx'\n\t\t};\n\t}\n\n\tif (check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\treturn {\n\t\t\text: 'dcm',\n\t\t\tmime: 'application/dicom'\n\t\t};\n\t}\n\n\t// Musepack, SV7\n\tif (check([0x4D, 0x50, 0x2B])) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\t// Musepack, SV8\n\tif (check([0x4D, 0x50, 0x43, 0x4B])) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x45, 0x47, 0x49, 0x4E, 0x3A])) {\n\t\treturn {\n\t\t\text: 'ics',\n\t\t\tmime: 'text/calendar'\n\t\t};\n\t}\n\n\tif (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'glb',\n\t\t\tmime: 'model/gltf-binary'\n\t\t};\n\t}\n\n\tif (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\treturn {\n\t\t\text: 'pcap',\n\t\t\tmime: 'application/vnd.tcpdump.pcap'\n\t\t};\n\t}\n\n\treturn null;\n};\n\nmodule.exports = fileType;\n// TODO: Remove this for the next major release\nmodule.exports.default = fileType;\n\nObject.defineProperty(fileType, 'minimumBytes', {value: 4100});\n\nmodule.exports.stream = readableStream => new Promise((resolve, reject) => {\n\t// Using `eval` to work around issues when bundling with Webpack\n\tconst stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n\treadableStream.once('readable', () => {\n\t\tconst pass = new stream.PassThrough();\n\t\tconst chunk = readableStream.read(module.exports.minimumBytes) || readableStream.read();\n\t\ttry {\n\t\t\tpass.fileType = fileType(chunk);\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\n\t\treadableStream.unshift(chunk);\n\n\t\tif (stream.pipeline) {\n\t\t\tresolve(stream.pipeline(readableStream, pass, () => {}));\n\t\t} else {\n\t\t\tresolve(readableStream.pipe(pass));\n\t\t}\n\t});\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/file-type/index.js?");

/***/ }),

/***/ "./node_modules/flatten-vertex-data/index.js":
/*!***************************************************!*\
  !*** ./node_modules/flatten-vertex-data/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*eslint new-cap:0*/\nvar dtype = __webpack_require__(/*! dtype */ \"./node_modules/dtype/index.js\")\n\nmodule.exports = flattenVertexData\n\nfunction flattenVertexData (data, output, offset) {\n  if (!data) throw new TypeError('must specify data as first parameter')\n  offset = +(offset || 0) | 0\n\n  if (Array.isArray(data) && (data[0] && typeof data[0][0] === 'number')) {\n    var dim = data[0].length\n    var length = data.length * dim\n    var i, j, k, l\n\n    // no output specified, create a new typed array\n    if (!output || typeof output === 'string') {\n      output = new (dtype(output || 'float32'))(length + offset)\n    }\n\n    var dstLength = output.length - offset\n    if (length !== dstLength) {\n      throw new Error('source length ' + length + ' (' + dim + 'x' + data.length + ')' +\n        ' does not match destination length ' + dstLength)\n    }\n\n    for (i = 0, k = offset; i < data.length; i++) {\n      for (j = 0; j < dim; j++) {\n        output[k++] = data[i][j] === null ? NaN : data[i][j]\n      }\n    }\n  } else {\n    if (!output || typeof output === 'string') {\n      // no output, create a new one\n      var Ctor = dtype(output || 'float32')\n\n      // handle arrays separately due to possible nulls\n      if (Array.isArray(data) || output === 'array') {\n        output = new Ctor(data.length + offset)\n        for (i = 0, k = offset, l = output.length; k < l; k++, i++) {\n          output[k] = data[i] === null ? NaN : data[i]\n        }\n      } else {\n        if (offset === 0) {\n          output = new Ctor(data)\n        } else {\n          output = new Ctor(data.length + offset)\n\n          output.set(data, offset)\n        }\n      }\n    } else {\n      // store output in existing array\n      output.set(data, offset)\n    }\n  }\n\n  return output\n}\n\n\n//# sourceURL=webpack:///./node_modules/flatten-vertex-data/index.js?");

/***/ }),

/***/ "./node_modules/flip-pixels/index.js":
/*!*******************************************!*\
  !*** ./node_modules/flip-pixels/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nmodule.exports = function flip (pixels, w, h, c) {\r\n\t// handle Arrays\r\n\tif (Array.isArray(pixels)) {\r\n\t\tvar result = flip(new Float64Array(pixels), w, h, c)\r\n\t\tfor (var i = 0; i < pixels.length; i++) {\r\n\t\t\tpixels[i] = result[i]\r\n\t\t}\r\n\t\treturn pixels\r\n\t}\r\n\r\n\tif (!w || !h) throw Error('Bad dimensions')\r\n\tif (!c) c = pixels.length / (w * h)\r\n\r\n\tvar h2 = h >> 1\r\n\tvar row = w * c\r\n\tvar Ctor = pixels.constructor\r\n\r\n\r\n\t// make a temp buffer to hold one row\r\n\tvar temp = new Ctor(w * c)\r\n\tfor (var y = 0; y < h2; ++y) {\r\n\t\tvar topOffset = y * row\r\n\t\tvar bottomOffset = (h - y - 1) * row\r\n\r\n\t\t// make copy of a row on the top half\r\n\t\ttemp.set(pixels.subarray(topOffset, topOffset + row))\r\n\r\n\t\t// copy a row from the bottom half to the top\r\n\t\tpixels.copyWithin(topOffset, bottomOffset, bottomOffset + row)\r\n\r\n\t\t// copy the copy of the top half row to the bottom half\r\n\t\tpixels.set(temp, bottomOffset)\r\n\t}\r\n\r\n\treturn pixels\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/flip-pixels/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/image-encode/browser.js":
/*!**********************************************!*\
  !*** ./node_modules/image-encode/browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar isObj = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\")\r\nvar pxls = __webpack_require__(/*! pxls */ \"./node_modules/pxls/index.js\")\r\nvar toab = __webpack_require__(/*! to-array-buffer */ \"./node_modules/to-array-buffer/index.js\")\r\n\r\nmodule.exports = encode\r\n\r\n\r\nvar canvas, context\r\n\r\nfunction encode (data, type, o) {\r\n  if (isObj(type)) o = type, type = null\r\n  if (typeof o === 'string') o = {type: o}\r\n  else if (!o) o = {}\r\n  else if (Array.isArray(o)) o = { width: o[0], height: o[1] }\r\n  if (Array.isArray(type)) o.width = type[0], o.height = type[1], type = o.type\r\n\r\n  if (o.shape) o.width = o.shape[0], o.height = o.shape[1]\r\n  if (!o.width) o.width = data.shape ? data.shape[0] : data.width\r\n  if (!o.height) o.height = data.shape ? data.shape[1] : data.height\r\n\r\n  if (!o.width || !o.height) throw new Error('Options must define `width` and `height`')\r\n\r\n  if (!type) type = o.type || o.format || o.mime || o.mimeType\r\n\r\n  if (!type || !types[type]) throw new Error('Options must define valid encoder type')\r\n\r\n  if (!context) {\r\n  \tcanvas = document.createElement('canvas')\r\n  \tcontext = canvas.getContext('2d')\r\n  }\r\n\r\n  canvas.width = o.width\r\n  canvas.height = o.height\r\n  var idata = context.createImageData(o.width, o.height)\r\n  idata.data.set(pxls(data))\r\n  context.putImageData(idata, 0, 0)\r\n\r\n  var dataURL = canvas.toDataURL(types[type], o.quality || 1)\r\n\r\n  return toab(dataURL)\r\n}\r\n\r\nvar types = {\r\n\t'png': 'image/png',\r\n\t'image/png': 'image/png',\r\n\t'gif': 'image/gif',\r\n\t'image/gif': 'image/gif',\r\n\t'image/jpeg': 'image/jpeg',\r\n\t'image/jpg': 'image/jpeg',\r\n\t'jpg': 'image/jpeg',\r\n\t'jpeg': 'image/jpeg',\r\n\t'bmp': 'image/bmp',\r\n\t'image/bmp': 'image/bmp',\r\n\t'image/bitmap': 'image/bmp',\r\n\t'tiff': 'image/tiff',\r\n\t'tif': 'image/tiff',\r\n\t'exif': 'image/tiff',\r\n\t'image/tif': 'image/tiff',\r\n\t'image/tiff': 'image/tiff'\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/image-encode/browser.js?");

/***/ }),

/***/ "./node_modules/image-pixels/index.js":
/*!********************************************!*\
  !*** ./node_modules/image-pixels/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\r\n\r\nvar isObj = __webpack_require__(/*! is-plain-obj */ \"./node_modules/is-plain-obj/index.js\")\r\nvar isBase64 = __webpack_require__(/*! is-base64 */ \"./node_modules/is-base64/is-base64.js\")\r\nvar rect = __webpack_require__(/*! parse-rect */ \"./node_modules/parse-rect/index.js\")\r\nvar extend = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\")\r\nvar isBlob = __webpack_require__(/*! is-blob */ \"./node_modules/is-blob/index.js\")\r\nvar clipPixels = __webpack_require__(/*! clip-pixels */ \"./node_modules/clip-pixels/index.js\")\r\nvar isBrowser = __webpack_require__(/*! is-browser */ \"./node_modules/is-browser/client.js\")\r\nvar loadUrl = __webpack_require__(/*! ./lib/url */ \"./node_modules/image-pixels/lib/url-browser.js\")\r\nvar loadRaw = __webpack_require__(/*! ./lib/raw */ \"./node_modules/image-pixels/lib/raw-browser.js\")\r\nvar loadGl = __webpack_require__(/*! ./lib/gl */ \"./node_modules/image-pixels/lib/gl.js\")\r\nvar cache = __webpack_require__(/*! ./lib/cache */ \"./node_modules/image-pixels/lib/cache.js\")\r\nvar pxls = __webpack_require__(/*! pxls */ \"./node_modules/pxls/index.js\")\r\n\r\nmodule.exports = function (src, o, cb) {\r\n\t// tagged template\r\n\tif (Array.isArray(src) && src.raw) src = String.raw.apply(this, arguments)\r\n\r\n\t// detect callback arg\r\n\tif (typeof o === 'function') {\r\n\t\tcb = o\r\n\t\to = isObj(src) ? src : null\r\n\t}\r\n\r\n\treturn getPixels(src, o).then(function (data) {\r\n\t\t// cache self pixel data\r\n\t\tif (!cache.get(data)) {\r\n\t\t\tcache.set(data, data)\r\n\t\t}\r\n\r\n\t\tif (cb) cb(null, data)\r\n\t\treturn data\r\n\t}, function (err) {\r\n\t\tif (cb) cb(err)\r\n\t\tthrow err\r\n\t})\r\n}\r\n\r\nmodule.exports.cache = cache\r\n\r\nmodule.exports.all = function getPixelsAll (src, o, cb) {\r\n\tif (!src) return null\r\n\r\n\tif (typeof o === 'function') {\r\n\t\tcb = o\r\n\t\to = null\r\n\t}\r\n\r\n\t// list\r\n\tif (Array.isArray(src)) {\r\n\t\tvar list = src.map(function (source) {\r\n\t\t\treturn getPixels(source, o)\r\n\t\t})\r\n\r\n\t\t// return promise resolved with list\r\n\t\treturn Promise.all(list).then(function (list) {\r\n\t\t\tcb && cb(null, list)\r\n\t\t\treturn list\r\n\t\t}, function (err) {\r\n\t\t\tcb && cb(err)\r\n\t\t\treturn Promise.reject(err)\r\n\t\t})\r\n\t}\r\n\r\n\t// dict\r\n\tvar handlers = {}\r\n\tvar list = []\r\n\tfor (var name in src) {\r\n\t\thandlers[name] = list.push(getPixels(src[name], o)) - 1\r\n\t}\r\n\r\n\t// return promise resolved with dict\r\n\treturn Promise.all(list).then(function (list) {\r\n\t\tvar result = {}\r\n\t\tfor (var name in handlers) {\r\n\t\t\tresult[name] = list[handlers[name]]\r\n\t\t}\r\n\t\tcb && cb(null, result)\r\n\t\treturn result\r\n\t}, function (err) {\r\n\t\tcb && cb(err)\r\n\t\treturn Promise.reject(err)\r\n\t})\r\n}\r\n\r\n\r\nfunction getPixels(src, o) {\r\n\t// handle arguments\r\n\tif (typeof o === 'string') o = {type: o}\r\n\telse if (!o) o = {}\r\n\telse if (Array.isArray(o)) o = {shape: o}\r\n\telse o = extend({}, o)\r\n\r\n\tvar cached\r\n\r\n\t// cases when the source in options and options are in the source\r\n\tif (isObj(src)) o = extend(src, o)\r\n\tif (o.src || o.source) src = o.src || o.source\r\n\tif (isObj(src) && (src.src || src.source)) src = src.src || src.source\r\n\tif (!src) src = {}\r\n\r\n\t// turn cache on by default\r\n\tif (o.cache == null) o.cache = true\r\n\r\n\t// detect clipping\r\n\tvar width, height\r\n\tvar clip = o.clip && rect(o.clip) || {x: 0, y: 0}\r\n\tvar type = o.type || o.mime\r\n\r\n\tif (cached = checkCached(src, clip)) return cached\r\n\r\n\tvar cacheAs = []\r\n\tcaptureShape(o)\r\n\tcaptureShape(src)\r\n\r\n\t// File & Blob\r\n\tif (isBrowser && (isBlob(src) || (src instanceof File))) {\r\n\t\t// FIXME: try to use createImageBitmap for Blob\r\n\t\tsrc = URL.createObjectURL(src)\r\n\t\tcacheAs.push(src)\r\n\r\n\t\tif (cached = checkCached(src, clip)) return cached\r\n\r\n\t\t// TODO: detect raw data and decode here, possibly use array-buffer\r\n\t}\r\n\r\n\t// handle source type\r\n\tif (typeof src === 'string') {\r\n\t\tif (!src) return Promise.reject(new Error('Bad URL'))\r\n\r\n\t\tcacheAs.push(src)\r\n\r\n\t\t// convert base64 to datauri\r\n\t\tif (isBase64(src, {mime: false})) {\r\n\t\t\tsrc = pxls(src)\r\n\r\n\t\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t\t}\r\n\r\n\t\t// url, path, datauri\r\n\t\treturn loadUrl(src, clip).then(function (src) {\r\n\t\t\tif (cached = checkCached(src, clip)) {\r\n\t\t\t\treturn cached\r\n\t\t\t}\r\n\r\n\t\t\tcaptureShape(src)\r\n\t\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t\t})\r\n\t}\r\n\r\n\tif (src.tagName) {\r\n\t\t// SVG Image\r\n\t\tif (src.tagName.toLowerCase() === 'image') {\r\n\t\t\tvar url = src.getAttribute('xlink:href')\r\n\t\t\tsrc = new Image()\r\n\t\t\tsrc.src = url\r\n\t\t\tif (cached = checkCached(url, clip)) return cached\r\n\t\t}\r\n\r\n\t\t// fetch closest image/video\r\n\t\tif (src.tagName.toLowerCase() === 'picture') {\r\n\t\t\tsrc = src.querySelector('img')\r\n\t\t\tif (cached = checkCached(src, clip)) return cached\r\n\t\t}\r\n\r\n\t\t// <img>\r\n\t\tif (src.tagName.toLowerCase() === 'img') {\r\n\t\t\tif (cached = checkCached(src.src, clip)) return cached\r\n\r\n\t\t\tcacheAs.push(src.src)\r\n\r\n\t\t\tif (src.complete) {\r\n\t\t\t\tcaptureShape(src)\r\n\t\t\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t\t\t}\r\n\r\n\t\t\treturn new Promise(function (ok, nok) {\r\n\t\t\t\tsrc.addEventListener('load', function () {\r\n\t\t\t\t\tcaptureShape(src)\r\n\t\t\t\t\tok(src)\r\n\t\t\t\t})\r\n\t\t\t\tsrc.addEventListener('error', function(err) {\r\n\t\t\t\t\tnok(err)\r\n\t\t\t\t})\r\n\t\t\t}).then(function (src) {\r\n\t\t\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// <video>\r\n\t\tif (global.HTMLMediaElement && src instanceof HTMLMediaElement) {\r\n\t\t\tif (cached = checkCached(src.src, clip)) return cached\r\n\r\n\t\t\t// FIXME: possibly cache specific frame\r\n\t\t\tcacheAs.push(src.src)\r\n\r\n\t\t\tif (src.readyState) {\r\n\t\t\t\tcaptureShape({w: src.videoWidth, h: src.videoHeight})\r\n\t\t\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t\t\t}\r\n\r\n\t\t\treturn new Promise(function (ok, nok) {\r\n\t\t\t\tsrc.addEventListener('loadeddata', function () {\r\n\t\t\t\t\tcaptureShape({w: src.videoWidth, h: src.videoHeight})\r\n\t\t\t\t\tok(src)\r\n\t\t\t\t})\r\n\t\t\t\tsrc.addEventListener('error', function(err) {\r\n\t\t\t\t\tnok(new Error('Bad video src `' + src.src + '`'))\r\n\t\t\t\t})\r\n\t\t\t}).then(function (src) {\r\n\t\t\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// any other source, inc. unresolved promises\r\n\t// NOTE: we should not cache result by this type of data:\r\n\t// eg. user may want to change array contents\r\n\treturn Promise.resolve(src).then(function (src) {\r\n\t\tif (cached = checkCached(src, clip)) return cached\r\n\r\n\t\t// retrieve canvas from contexts\r\n\t\tvar ctx = (src.readPixels || src.getImageData) ? src : src._gl || src.gl || src.context || src.ctx || (src.getContext && (src.getContext('2d') || src.getContext('webgl')))\r\n\r\n\t\tif (ctx) {\r\n\t\t\tcaptureShape(ctx)\r\n\t\t\t// WebGL context directly\r\n\t\t\tif (ctx.readPixels) {\r\n\t\t\t\tvar result = loadGl(ctx, {type: type, shape: [width, height], clip: clip})\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\r\n\t\t\t// 2d and other contexts\r\n\t\t\tcaptureShape(ctx.canvas)\r\n\r\n\t\t\treturn loadRaw(ctx.canvas, {type: type, shape: [width, height], clip: clip})\r\n\t\t}\r\n\r\n\t\t// raw data container\r\n\t\tcaptureShape(src)\r\n\r\n\t\tsrc = pxls(src) || src\r\n\t\tcacheAs.push(src)\r\n\r\n\t\treturn loadRaw(src, {type: type, cache: o.cache && cacheAs, shape: [width, height], clip: clip})\r\n\t})\r\n\r\n\t// try to figure out width/height from container\r\n\tfunction captureShape(container) {\r\n\t\t// SVG had width as object\r\n\t\tif (!width || typeof width !== 'number') width = container && container.shape && container.shape[0] || container.width || container.w || container.drawingBufferWidth\r\n\t\tif (!height || typeof height !== 'number') height = container && container.shape && container.shape[1] || container.height || container.h || container.drawingBufferHeight\r\n\t}\r\n}\r\n\r\nfunction checkCached(src, clip) {\r\n\tvar result = cache.get(src)\r\n\r\n\t// get cached instance\r\n\tif (result) {\r\n\t\tif (clip.x || clip.y ||\r\n\t\t\t(clip.width && clip.width !== result.width) ||\r\n\t\t\t(clip.height && clip.height !== result.height)\r\n\t\t) {\r\n\t\t\tresult = {\r\n\t\t\t\tdata: new Uint8Array(clipPixels(result.data, [result.width, result.height], [clip.x, clip.y, clip.width, clip.height])),\r\n\t\t\t\twidth: clip.width,\r\n\t\t\t\theight: clip.height\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve(result)\r\n\t}\r\n}\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/image-pixels/index.js?");

/***/ }),

/***/ "./node_modules/image-pixels/lib/cache.js":
/*!************************************************!*\
  !*** ./node_modules/image-pixels/lib/cache.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar p = __webpack_require__(/*! primitive-pool */ \"./node_modules/primitive-pool/index.js\")\r\nvar WeakMap = __webpack_require__(/*! weak-map */ \"./node_modules/weak-map/weak-map.js\")\r\n\r\n// cache of data without clipping, depending on source\r\nvar cache = new WeakMap()\r\n\r\nmodule.exports = {\r\n\tget: function (key) {\r\n\t\treturn cache.get(p(key))\r\n\t},\r\n\tset: function (key, value) {\r\n\t\tif (!Array.isArray(key)) key = [key]\r\n\r\n\t\tkey.forEach(function (key) {\r\n\t\t\tif (!key) return\r\n\t\t\tif (!cache.get(p(key))) cache.set(p(key), value)\r\n\t\t})\r\n\r\n\t\treturn value\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/image-pixels/lib/cache.js?");

/***/ }),

/***/ "./node_modules/image-pixels/lib/gl.js":
/*!*********************************************!*\
  !*** ./node_modules/image-pixels/lib/gl.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// read canvas/webgl pixels\r\n\r\n\r\nvar isBrowser = __webpack_require__(/*! is-browser */ \"./node_modules/is-browser/client.js\")\r\nvar flipData = __webpack_require__(/*! flip-pixels */ \"./node_modules/flip-pixels/index.js\")\r\nvar clipData = __webpack_require__(/*! clip-pixels */ \"./node_modules/clip-pixels/index.js\")\r\n\r\nvar canvas, ctx\r\n\r\nmodule.exports = function read (gl, o) {\r\n  var width = o.shape[0], height = o.shape[1]\r\n  var clip = o.clip\r\n\r\n  // drawing webgl to 2d canvas is faster\r\n  if (isBrowser && gl.canvas) {\r\n    if (!ctx) {\r\n      canvas = document.createElement('canvas')\r\n      ctx = canvas.getContext('2d')\r\n    }\r\n\r\n    canvas.width = gl.drawingBufferWidth\r\n    canvas.height = gl.drawingBufferHeight\r\n    ctx.drawImage(gl.canvas, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\r\n\r\n    var result = ctx.getImageData(clip.x, clip.y, clip.width || width, clip.height || height)\r\n\r\n    return result\r\n  }\r\n\r\n  // flipping pixels is slower\r\n  var pixels = new Uint8Array(gl.drawingBufferWidth * gl.drawingBufferHeight * 4)\r\n  gl.readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.UNSIGNED_BYTE, pixels)\r\n\r\n  var result = { }\r\n  result.width = gl.drawingBufferWidth\r\n  result.height = gl.drawingBufferHeight\r\n  pixels = flipData(pixels, result.width, result.height)\r\n  result.data = pixels\r\n\r\n  if (clip.x || clip.y ||\r\n    (clip.width && clip.width !== result.width) ||\r\n    (clip.height && clip.height !== result.height)\r\n  ) {\r\n    pixels = new Uint8Array(clipData(pixels, [result.width, result.height], [clip.x, clip.y, clip.width, clip.height]))\r\n    result.data = pixels\r\n    result.width = clip.width\r\n    result.height = clip.height\r\n  }\r\n\r\n  return Promise.resolve(result)\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/image-pixels/lib/gl.js?");

/***/ }),

/***/ "./node_modules/image-pixels/lib/raw-browser.js":
/*!******************************************************!*\
  !*** ./node_modules/image-pixels/lib/raw-browser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// universal pixel data getter\r\n\r\n\r\n\r\nvar imgType = __webpack_require__(/*! image-type */ \"./node_modules/image-type/index.js\")\r\nvar tostr = __webpack_require__(/*! arraybuffer-to-string */ \"./node_modules/arraybuffer-to-string/browser.js\")\r\nvar cache = __webpack_require__(/*! ./cache */ \"./node_modules/image-pixels/lib/cache.js\")\r\n\r\nvar canvas, context\r\n\r\nmodule.exports = function readRaw(img, o) {\r\n\tvar width = o.shape[0], height = o.shape[1]\r\n\tvar clip = o.clip\r\n\tvar type = o.type\r\n\r\n\tif (!canvas) {\r\n\t\tcanvas = document.createElement('canvas')\r\n\t\tcontext = canvas.getContext('2d')\r\n\t}\r\n\tcanvas.width = width\r\n\tcanvas.height = height\r\n\r\n\tif (img instanceof Uint8Array || img instanceof Uint8ClampedArray) {\r\n\t\t// decode encoded data\r\n\r\n\t\tif (!type) {\r\n\t\t\ttype = imgType(img)\r\n\t\t\ttype = type && type.mime\r\n\t\t}\r\n\r\n\t\tif (type) {\r\n\t\t\tvar src = img\r\n\t\t\treturn new Promise(function (ok, nok) {\r\n\t\t\t\tvar img = new Image()\r\n\t\t\t\timg.crossOrigin = 'Anonymous'\r\n\t\t\t\timg.onload = function() {\r\n\t\t\t\t\tif (!o.shape[0]) o.shape[0] = img.width\r\n\t\t\t\t\tif (!o.shape[1]) o.shape[1] = img.height\r\n\t\t\t\t\tok(readRaw(img, o))\r\n\t\t\t\t}\r\n\t\t\t\timg.onerror = function(err) {\r\n\t\t\t\t\tnok(err)\r\n\t\t\t\t}\r\n\t\t\t\timg.src = ['data:' + type, 'base64,' + tostr(src, 'base64')].join(';')\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// raw data\r\n\t\tif (!width || !height) throw new Error('Raw data requires options.width and options.height')\r\n\t\tvar rawData = context.createImageData(width, height)\r\n\t\trawData.data.set(img)\r\n\t\tcontext.putImageData(rawData, 0, 0)\r\n\t}\r\n\t// default img-like object\r\n\telse {\r\n\t\tcontext.drawImage(img, 0, 0)\r\n\t}\r\n\r\n\tvar result\r\n\r\n\tif (o.cache) {\r\n\t\tresult = context.getImageData(0, 0, width, height)\r\n\t\tcache.set(o.cache, result)\r\n\t}\r\n\r\n\tresult = context.getImageData(clip.x, clip.y, clip.width || width, clip.height || height)\r\n\r\n\treturn Promise.resolve(result)\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/image-pixels/lib/raw-browser.js?");

/***/ }),

/***/ "./node_modules/image-pixels/lib/url-browser.js":
/*!******************************************************!*\
  !*** ./node_modules/image-pixels/lib/url-browser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nmodule.exports = function (src, clip) {\r\n  return new Promise(function (ok, nok) {\r\n    var img = new Image()\r\n    img.crossOrigin = 'Anonymous'\r\n    img.onload = function() {\r\n      ok(img)\r\n    }\r\n    img.onerror = function(err) {\r\n      nok(new Error('Bad image URL/path', err))\r\n    }\r\n    img.src = src\r\n  })\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/image-pixels/lib/url-browser.js?");

/***/ }),

/***/ "./node_modules/image-type/index.js":
/*!******************************************!*\
  !*** ./node_modules/image-type/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst fileType = __webpack_require__(/*! file-type */ \"./node_modules/file-type/index.js\");\n\nconst imageExts = new Set([\n\t'jpg',\n\t'png',\n\t'gif',\n\t'webp',\n\t'flif',\n\t'cr2',\n\t'tif',\n\t'bmp',\n\t'jxr',\n\t'psd',\n\t'ico',\n\t'bpg',\n\t'jp2',\n\t'jpm',\n\t'jpx',\n\t'heic',\n\t'cur',\n\t'dcm'\n]);\n\nconst imageType = input => {\n\tconst ret = fileType(input);\n\treturn imageExts.has(ret && ret.ext) ? ret : null;\n};\n\nmodule.exports = imageType;\nmodule.exports.default = imageType;\n\nObject.defineProperty(imageType, 'minimumBytes', {value: fileType.minimumBytes});\n\n\n//# sourceURL=webpack:///./node_modules/image-type/index.js?");

/***/ }),

/***/ "./node_modules/is-base64/is-base64.js":
/*!*********************************************!*\
  !*** ./node_modules/is-base64/is-base64.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function(root) {\n  'use strict';\n\n  function isBase64(v, opts) {\n    if (v instanceof Boolean || typeof v === 'boolean') {\n      return false\n    }\n    if (!(opts instanceof Object)) {\n      opts = {}\n    }\n    if (opts.hasOwnProperty('allowBlank') && !opts.allowBlank && v === '') {\n      return false\n    }\n\n    var regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?';\n\n    if (opts.mime) {\n      regex = '(data:\\\\w+\\\\/[a-zA-Z\\\\+\\\\-\\\\.]+;base64,)?' + regex\n    }\n\n    if (opts.paddingRequired === false) {\n      regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}(==)?|[A-Za-z0-9+\\\\/]{3}=?)?'\n    }\n\n    return (new RegExp('^' + regex + '$', 'gi')).test(v);\n  }\n\n  if (true) {\n    if ( true && module.exports) {\n      exports = module.exports = isBase64;\n    }\n    exports.isBase64 = isBase64;\n  } else {}\n})(this);\n\n\n//# sourceURL=webpack:///./node_modules/is-base64/is-base64.js?");

/***/ }),

/***/ "./node_modules/is-blob/index.js":
/*!***************************************!*\
  !*** ./node_modules/is-blob/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = value => {\n\tif (typeof Blob === 'undefined') {\n\t\treturn false;\n\t}\n\n\treturn value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-blob/index.js?");

/***/ }),

/***/ "./node_modules/is-browser/client.js":
/*!*******************************************!*\
  !*** ./node_modules/is-browser/client.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = true;\n\n//# sourceURL=webpack:///./node_modules/is-browser/client.js?");

/***/ }),

/***/ "./node_modules/is-float-array/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-float-array/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nmodule.exports = function isFloatArray (arr) {\r\n\tif (!arr || arr.length == null) return false\r\n\r\n\tif (Array.isArray(arr) || arr instanceof Float64Array || arr instanceof Float32Array) return true\r\n\r\n\treturn false\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/is-float-array/index.js?");

/***/ }),

/***/ "./node_modules/is-plain-obj/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-plain-obj/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\tvar prototype;\n\treturn toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-plain-obj/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack:///./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\"); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n//# sourceURL=webpack:///./node_modules/object-keys/implementation.js?");

/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar slice = Array.prototype.slice;\nvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\");\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ \"./node_modules/object-keys/implementation.js\");\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n//# sourceURL=webpack:///./node_modules/object-keys/index.js?");

/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n//# sourceURL=webpack:///./node_modules/object-keys/isArguments.js?");

/***/ }),

/***/ "./node_modules/pako/index.js":
/*!************************************!*\
  !*** ./node_modules/pako/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Top level file is just a mixin of submodules & constants\n\n\nvar assign    = __webpack_require__(/*! ./lib/utils/common */ \"./node_modules/pako/lib/utils/common.js\").assign;\n\nvar deflate   = __webpack_require__(/*! ./lib/deflate */ \"./node_modules/pako/lib/deflate.js\");\nvar inflate   = __webpack_require__(/*! ./lib/inflate */ \"./node_modules/pako/lib/inflate.js\");\nvar constants = __webpack_require__(/*! ./lib/zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n\n\n//# sourceURL=webpack:///./node_modules/pako/index.js?");

/***/ }),

/***/ "./node_modules/pako/lib/deflate.js":
/*!******************************************!*\
  !*** ./node_modules/pako/lib/deflate.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar zlib_deflate = __webpack_require__(/*! ./zlib/deflate */ \"./node_modules/pako/lib/zlib/deflate.js\");\nvar utils        = __webpack_require__(/*! ./utils/common */ \"./node_modules/pako/lib/utils/common.js\");\nvar strings      = __webpack_require__(/*! ./utils/strings */ \"./node_modules/pako/lib/utils/strings.js\");\nvar msg          = __webpack_require__(/*! ./zlib/messages */ \"./node_modules/pako/lib/zlib/messages.js\");\nvar ZStream      = __webpack_require__(/*! ./zlib/zstream */ \"./node_modules/pako/lib/zlib/zstream.js\");\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/deflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/inflate.js":
/*!******************************************!*\
  !*** ./node_modules/pako/lib/inflate.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar zlib_inflate = __webpack_require__(/*! ./zlib/inflate */ \"./node_modules/pako/lib/zlib/inflate.js\");\nvar utils        = __webpack_require__(/*! ./utils/common */ \"./node_modules/pako/lib/utils/common.js\");\nvar strings      = __webpack_require__(/*! ./utils/strings */ \"./node_modules/pako/lib/utils/strings.js\");\nvar c            = __webpack_require__(/*! ./zlib/constants */ \"./node_modules/pako/lib/zlib/constants.js\");\nvar msg          = __webpack_require__(/*! ./zlib/messages */ \"./node_modules/pako/lib/zlib/messages.js\");\nvar ZStream      = __webpack_require__(/*! ./zlib/zstream */ \"./node_modules/pako/lib/zlib/zstream.js\");\nvar GZheader     = __webpack_require__(/*! ./zlib/gzheader */ \"./node_modules/pako/lib/zlib/gzheader.js\");\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/inflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/utils/common.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/utils/common.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/utils/common.js?");

/***/ }),

/***/ "./node_modules/pako/lib/utils/strings.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/utils/strings.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// String encode/decode helpers\n\n\n\nvar utils = __webpack_require__(/*! ./common */ \"./node_modules/pako/lib/utils/common.js\");\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/utils/strings.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/adler32.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/adler32.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/adler32.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/constants.js":
/*!*************************************************!*\
  !*** ./node_modules/pako/lib/zlib/constants.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/constants.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/crc32.js":
/*!*********************************************!*\
  !*** ./node_modules/pako/lib/zlib/crc32.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/crc32.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/deflate.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/deflate.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = __webpack_require__(/*! ../utils/common */ \"./node_modules/pako/lib/utils/common.js\");\nvar trees   = __webpack_require__(/*! ./trees */ \"./node_modules/pako/lib/zlib/trees.js\");\nvar adler32 = __webpack_require__(/*! ./adler32 */ \"./node_modules/pako/lib/zlib/adler32.js\");\nvar crc32   = __webpack_require__(/*! ./crc32 */ \"./node_modules/pako/lib/zlib/crc32.js\");\nvar msg     = __webpack_require__(/*! ./messages */ \"./node_modules/pako/lib/zlib/messages.js\");\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/deflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/gzheader.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/zlib/gzheader.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/gzheader.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/inffast.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/inffast.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/inffast.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/inflate.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/inflate.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = __webpack_require__(/*! ../utils/common */ \"./node_modules/pako/lib/utils/common.js\");\nvar adler32       = __webpack_require__(/*! ./adler32 */ \"./node_modules/pako/lib/zlib/adler32.js\");\nvar crc32         = __webpack_require__(/*! ./crc32 */ \"./node_modules/pako/lib/zlib/crc32.js\");\nvar inflate_fast  = __webpack_require__(/*! ./inffast */ \"./node_modules/pako/lib/zlib/inffast.js\");\nvar inflate_table = __webpack_require__(/*! ./inftrees */ \"./node_modules/pako/lib/zlib/inftrees.js\");\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/inflate.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/inftrees.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/zlib/inftrees.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = __webpack_require__(/*! ../utils/common */ \"./node_modules/pako/lib/utils/common.js\");\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/inftrees.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/messages.js":
/*!************************************************!*\
  !*** ./node_modules/pako/lib/zlib/messages.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/messages.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/trees.js":
/*!*********************************************!*\
  !*** ./node_modules/pako/lib/zlib/trees.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = __webpack_require__(/*! ../utils/common */ \"./node_modules/pako/lib/utils/common.js\");\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/trees.js?");

/***/ }),

/***/ "./node_modules/pako/lib/zlib/zstream.js":
/*!***********************************************!*\
  !*** ./node_modules/pako/lib/zlib/zstream.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n\n\n//# sourceURL=webpack:///./node_modules/pako/lib/zlib/zstream.js?");

/***/ }),

/***/ "./node_modules/parse-rect/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse-rect/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar pick = __webpack_require__(/*! pick-by-alias */ \"./node_modules/pick-by-alias/index.js\")\r\n\r\nmodule.exports = parseRect\r\n\r\nfunction parseRect (arg) {\r\n  var rect\r\n\r\n  // direct arguments sequence\r\n  if (arguments.length > 1) {\r\n    arg = arguments\r\n  }\r\n\r\n  // svg viewbox\r\n  if (typeof arg === 'string') {\r\n    arg = arg.split(/\\s/).map(parseFloat)\r\n  }\r\n  else if (typeof arg === 'number') {\r\n    arg = [arg]\r\n  }\r\n\r\n  // 0, 0, 100, 100 - array-like\r\n  if (arg.length && typeof arg[0] === 'number') {\r\n    // [w, w]\r\n    if (arg.length === 1) {\r\n      rect = {\r\n        width: arg[0],\r\n        height: arg[0],\r\n        x: 0, y: 0\r\n      }\r\n    }\r\n    // [w, h]\r\n    else if (arg.length === 2) {\r\n      rect = {\r\n        width: arg[0],\r\n        height: arg[1],\r\n        x: 0, y: 0\r\n      }\r\n    }\r\n    // [l, t, r, b]\r\n    else {\r\n      rect = {\r\n        x: arg[0],\r\n        y: arg[1],\r\n        width: (arg[2] - arg[0]) || 0,\r\n        height: (arg[3] - arg[1]) || 0\r\n      }\r\n    }\r\n  }\r\n  // {x, y, w, h} or {l, t, b, r}\r\n  else if (arg) {\r\n    arg = pick(arg, {\r\n      left: 'x l left Left',\r\n      top: 'y t top Top',\r\n      width: 'w width W Width',\r\n      height: 'h height W Width',\r\n      bottom: 'b bottom Bottom',\r\n      right: 'r right Right'\r\n    })\r\n\r\n    rect = {\r\n      x: arg.left || 0,\r\n      y: arg.top || 0\r\n    }\r\n\r\n    if (arg.width == null) {\r\n      if (arg.right) rect.width = arg.right - rect.x\r\n      else rect.width = 0\r\n    }\r\n    else {\r\n      rect.width = arg.width\r\n    }\r\n\r\n    if (arg.height == null) {\r\n      if (arg.bottom) rect.height = arg.bottom - rect.y\r\n      else rect.height = 0\r\n    }\r\n    else {\r\n      rect.height = arg.height\r\n    }\r\n  }\r\n\r\n  return rect\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/parse-rect/index.js?");

/***/ }),

/***/ "./node_modules/pick-by-alias/index.js":
/*!*********************************************!*\
  !*** ./node_modules/pick-by-alias/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\n\r\nmodule.exports = function pick (src, props, keepRest) {\r\n\tvar result = {}, prop, i\r\n\r\n\tif (typeof props === 'string') props = toList(props)\r\n\tif (Array.isArray(props)) {\r\n\t\tvar res = {}\r\n\t\tfor (i = 0; i < props.length; i++) {\r\n\t\t\tres[props[i]] = true\r\n\t\t}\r\n\t\tprops = res\r\n\t}\r\n\r\n\t// convert strings to lists\r\n\tfor (prop in props) {\r\n\t\tprops[prop] = toList(props[prop])\r\n\t}\r\n\r\n\t// keep-rest strategy requires unmatched props to be preserved\r\n\tvar occupied = {}\r\n\r\n\tfor (prop in props) {\r\n\t\tvar aliases = props[prop]\r\n\r\n\t\tif (Array.isArray(aliases)) {\r\n\t\t\tfor (i = 0; i < aliases.length; i++) {\r\n\t\t\t\tvar alias = aliases[i]\r\n\r\n\t\t\t\tif (keepRest) {\r\n\t\t\t\t\toccupied[alias] = true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (alias in src) {\r\n\t\t\t\t\tresult[prop] = src[alias]\r\n\r\n\t\t\t\t\tif (keepRest) {\r\n\t\t\t\t\t\tfor (var j = i; j < aliases.length; j++) {\r\n\t\t\t\t\t\t\toccupied[aliases[j]] = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (prop in src) {\r\n\t\t\tif (props[prop]) {\r\n\t\t\t\tresult[prop] = src[prop]\r\n\t\t\t}\r\n\r\n\t\t\tif (keepRest) {\r\n\t\t\t\toccupied[prop] = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (keepRest) {\r\n\t\tfor (prop in src) {\r\n\t\t\tif (occupied[prop]) continue\r\n\t\t\tresult[prop] = src[prop]\r\n\t\t}\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nvar CACHE = {}\r\n\r\nfunction toList(arg) {\r\n\tif (CACHE[arg]) return CACHE[arg]\r\n\tif (typeof arg === 'string') {\r\n\t\targ = CACHE[arg] = arg.split(/\\s*,\\s*|\\s+/)\r\n\t}\r\n\treturn arg\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/pick-by-alias/index.js?");

/***/ }),

/***/ "./node_modules/primitive-pool/index.js":
/*!**********************************************!*\
  !*** ./node_modules/primitive-pool/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nmodule.exports = getKey\r\n\r\nvar cache = {}, nullObj = {}, undefinedObj = {}\r\n\r\nfunction getKey (key) {\r\n\t// tagged template\r\n\tif (Array.isArray(key) && key.raw) key = String.raw.apply(this, arguments)\r\n\r\n\tif (key === null) {\r\n\t\treturn nullObj\r\n\t}\r\n\tif (key === undefined) {\r\n\t\treturn undefinedObj\r\n\t}\r\n\r\n\tvar obj\r\n\r\n\tif (typeof key === 'number' || key instanceof Number) {\r\n\t\tif (cache[key]) return cache[key]\r\n\t\tobj = new Number(key)\r\n\t\tcache[key] = obj\r\n\t\treturn obj\r\n\t}\r\n\r\n\tif (typeof key === 'string' || key instanceof String) {\r\n\t\tif (cache[key]) return cache[key]\r\n\t\tobj = new String(key)\r\n\t\tcache[key] = obj\r\n\t\treturn obj\r\n\t}\r\n\r\n\tif (typeof key === 'boolean' || key instanceof Boolean) {\r\n\t\tif (cache[key]) return cache[key]\r\n\t\tobj = new Boolean(key)\r\n\t\tcache[key] = obj\r\n\t\treturn obj\r\n\t}\r\n\r\n\t// treat any other non-primitive key directly\r\n\treturn key\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/primitive-pool/index.js?");

/***/ }),

/***/ "./node_modules/pxls/index.js":
/*!************************************!*\
  !*** ./node_modules/pxls/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar u8 = __webpack_require__(/*! to-uint8 */ \"./node_modules/to-uint8/index.js\")\r\nvar dims = __webpack_require__(/*! compute-dims */ \"./node_modules/compute-dims/lib/index.js\")\r\nvar flat = __webpack_require__(/*! arr-flatten */ \"./node_modules/arr-flatten/index.js\")\r\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"./node_modules/pxls/node_modules/is-buffer/index.js\")\r\nvar isBrowser = __webpack_require__(/*! is-browser */ \"./node_modules/is-browser/client.js\")\r\nvar flip = __webpack_require__(/*! flip-pixels */ \"./node_modules/flip-pixels/index.js\")\r\n\r\nmodule.exports = pxls\r\n\r\nvar context\r\n\r\nfunction pxls (data, step) {\r\n  if (!data) return data\r\n\r\n  // handle ndarrays\r\n  if (isNdarray(data)) {\r\n    var i = 0\r\n    // rgb array\r\n    if (data.shape[2] === 3) {\r\n      var len = data.shape[0] * data.shape[1]\r\n      var out = Array(len << 2)\r\n      var hasInt = false\r\n      for (var x = 0; x < data.shape[0]; x++) {\r\n        for (var y = 0; y < data.shape[1]; y++) {\r\n          var r = data.get(y, x, 0)\r\n          var g = data.get(y, x, 1)\r\n          var b = data.get(y, x, 2)\r\n          out[(i << 2)] = r\r\n          out[(i << 2) + 1] = g\r\n          out[(i << 2) + 2] = b\r\n          if (!hasInt && (r > 1 || g > 1 || b > 1)) hasInt = true\r\n          i++\r\n        }\r\n      }\r\n      var a = hasInt ? 255 : 1\r\n      for (var i = 0; i < len; i++) {\r\n        out[(i << 2) + 3] = a\r\n      }\r\n      data = out\r\n    }\r\n    // bitmap array\r\n    else if (data.shape[2] === 1 || !data.shape[2]) {\r\n      var len = data.shape[0] * data.shape[1]\r\n      var out = Array(len << 2)\r\n      var hasInt = false\r\n      for (var x = 0; x < data.shape[0]; x++) {\r\n        for (var y = 0; y < data.shape[1]; y++) {\r\n          var r = data.get(y, x, 0)\r\n          out[(i << 2)] = r\r\n          out[(i << 2) + 1] = r\r\n          out[(i << 2) + 2] = r\r\n          if (!hasInt && r > 1) hasInt = true\r\n          i++\r\n        }\r\n      }\r\n      var a = hasInt ? 255 : 1\r\n      for (var i = 0; i < len; i++) {\r\n        out[(i << 2) + 3] = a\r\n      }\r\n      data = out\r\n    }\r\n    // direct data\r\n    else {\r\n      data = data.data\r\n    }\r\n\r\n    return u8(data)\r\n  }\r\n\r\n  // detect w/h/step from options\r\n  var width, height\r\n  if (Array.isArray(step)) {\r\n    width = step[0]\r\n    height = step[1]\r\n    step = step[2]\r\n  }\r\n\r\n  // detect w/h from data\r\n  if (!width) width = data.shape ? data.shape[0] : data.width\r\n  if (!height) height = data.shape ? data.shape[1] : data.height\r\n\r\n  // intercept absent canvas (useful for headless-gl)\r\n  if (data.gl || data._gl || data.regl) data = data.regl ? data.regl._gl : data.gl || data._gl\r\n\r\n  // faster to use drawImage(WrbGLContext), but it has some weird async function/raf side-effect\r\n  if (data.readPixels) {\r\n    var gl = data\r\n    var pixels = new Uint8Array(gl.drawingBufferWidth * gl.drawingBufferHeight * 4)\r\n    gl.readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.UNSIGNED_BYTE, pixels)\r\n\r\n    return flip(pixels, gl.drawingBufferWidth, gl.drawingBufferHeight)\r\n  }\r\n\r\n  // DOM load async shortcut, expects data to be loaded though\r\n  if (isBrowser) {\r\n    if (data.canvas) data = data.canvas\r\n    if (data.tagName || typeof ImageBitmap !== 'undefined' && data instanceof ImageBitmap) {\r\n      if (!context) context = document.createElement('canvas').getContext('2d')\r\n\r\n      // clears canvas too\r\n      context.canvas.width = data.width || width\r\n      context.canvas.height = data.height || height\r\n\r\n      context.drawImage(data, 0, 0)\r\n\r\n      data = context.getImageData(0, 0, context.canvas.width, context.canvas.height)\r\n    }\r\n  }\r\n\r\n  // unfold ImageData\r\n  if (data.data) data = data.data\r\n\r\n  // detect nested data shape\r\n  if (Array.isArray(data)) {\r\n    var shape = dims(data, 3)\r\n\r\n    if (shape) {\r\n      // [[[r,g,b], [r,g,b], ...], [[r,g,b], [r,g,b], ...]]\r\n      if (shape[2]) step = shape[2]\r\n      // [[r,g,b], [r,g,b], ...]\r\n      // not [[r,g,b,a,r,g,b,a], [r,g,b,a,r,g,b,a]]\r\n      else if (shape[1] && shape[1] <= 4) step = shape[1]\r\n    }\r\n\r\n    data = flat(data)\r\n  }\r\n\r\n  // if no step detected, figure out step from width/height\r\n  if (step == null && width && height) {\r\n    step = Math.floor(data.length / (width * height))\r\n  }\r\n\r\n  // refold buffers\r\n  if (data instanceof ArrayBuffer || isBuffer(data)) data = new Uint8Array(data)\r\n\r\n  // ignore bad data\r\n  if (data.length == null) return null\r\n\r\n  // [r,g,b, r,g,b, ...]\r\n  if (step === 3) {\r\n    var len = Math.floor(data.length / 3)\r\n    var out = Array(len << 2)\r\n    var hasInt = false\r\n    for (var i = 0; i < len; i++) {\r\n      var r = data[i * 3]\r\n      var g = data[i * 3 + 1]\r\n      var b = data[i * 3 + 2]\r\n      out[(i << 2)] = r\r\n      out[(i << 2) + 1] = g\r\n      out[(i << 2) + 2] = b\r\n      if (!hasInt && (r > 1 || g > 1 || b > 1)) hasInt = true\r\n    }\r\n    var a = hasInt ? 255 : 1\r\n    for (var i = 0; i < len; i++) {\r\n      out[(i << 2) + 3] = a\r\n    }\r\n    data = out\r\n  }\r\n  // [v,v,v,v...]\r\n  else if (step === 1) {\r\n    var len = data.length\r\n    var out = Array(len << 2)\r\n    var hasInt = false\r\n    for (var i = 0; i < len; i++) {\r\n      var r = data[i]\r\n      out[(i << 2)] = r\r\n      out[(i << 2) + 1] = r\r\n      out[(i << 2) + 2] = r\r\n      if (!hasInt && r > 1) hasInt = true\r\n    }\r\n    var a = hasInt ? 255 : 1\r\n    for (var i = 0; i < len; i++) {\r\n      out[(i << 2) + 3] = a\r\n    }\r\n    data = out\r\n  }\r\n\r\n  return u8(data)\r\n}\r\n\r\n\r\nfunction isNdarray(v) {\r\n  return v &&\r\n      v.shape &&\r\n      v.stride &&\r\n      v.offset != null &&\r\n      v.dtype\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/pxls/index.js?");

/***/ }),

/***/ "./node_modules/pxls/node_modules/is-buffer/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/pxls/node_modules/is-buffer/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n//# sourceURL=webpack:///./node_modules/pxls/node_modules/is-buffer/index.js?");

/***/ }),

/***/ "./node_modules/regex-regex/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/regex-regex/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar re = /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/;\n/*\n\tMatches parts of a regular expression string.\n\n\t/^\\/\n\t\t-\tmatch a string that begins with a /\n\t()\n\t\t-\tcapture\n\t(?:)+\n\t\t-\tcapture, but do not remember, a group of characters which occur 1 or more times\n\t\\\\\\/\n\t\t-\tmatch the literal \\/\n\t|\n\t\t-\tOR\n\t[^\\/]\n\t\t-\tanything which is not the literal \\/\n\t\\/\n\t\t-\tmatch the literal /\n\t([imgy]*)\n\t\t-\tcapture any characters matching `imgy` occurring 0 or more times\n\t$/\n\t\t-\tstring end\n*/\n\n\n// EXPORTS //\n\nmodule.exports = re;\n\n\n//# sourceURL=webpack:///./node_modules/regex-regex/lib/index.js?");

/***/ }),

/***/ "./node_modules/string-to-arraybuffer/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/string-to-arraybuffer/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\r\n * @module  string-to-arraybuffer\r\n */\r\n\r\n\r\n\r\nvar atob = __webpack_require__(/*! atob-lite */ \"./node_modules/atob-lite/atob-browser.js\")\r\nvar isBase64 = __webpack_require__(/*! is-base64 */ \"./node_modules/is-base64/is-base64.js\")\r\n\r\nmodule.exports = function stringToArrayBuffer (arg) {\r\n\tif (typeof arg !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//valid data uri\r\n\tif (/^data\\:/i.test(arg)) return decode(arg)\r\n\r\n\t//base64\r\n\tif (isBase64(arg)) arg = atob(arg)\r\n\r\n\treturn str2ab(arg)\r\n}\r\n\r\nfunction str2ab (str) {\r\n\tvar array = new Uint8Array(str.length);\r\n\tfor(var i = 0; i < str.length; i++) {\r\n\t\tarray[i] = str.charCodeAt(i);\r\n\t}\r\n\treturn array.buffer\r\n}\r\n\r\nfunction decode(uri) {\r\n\t// strip newlines\r\n\turi = uri.replace(/\\r?\\n/g, '');\r\n\r\n\t// split the URI up into the \"metadata\" and the \"data\" portions\r\n\tvar firstComma = uri.indexOf(',');\r\n\tif (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data-URI');\r\n\r\n\t// remove the \"data:\" scheme and parse the metadata\r\n\tvar meta = uri.substring(5, firstComma).split(';');\r\n\r\n\tvar base64 = false;\r\n\tvar charset = 'US-ASCII';\r\n\tfor (var i = 0; i < meta.length; i++) {\r\n\t\tif ('base64' == meta[i]) {\r\n\t\t\tbase64 = true;\r\n\t\t} else if (0 == meta[i].indexOf('charset=')) {\r\n\t\t\tcharset = meta[i].substring(8);\r\n\t\t}\r\n\t}\r\n\r\n\t// get the encoded data portion and decode URI-encoded chars\r\n\tvar data = unescape(uri.substring(firstComma + 1));\r\n\r\n\tif (base64) data = atob(data)\r\n\r\n\tvar abuf = str2ab(data)\r\n\r\n\tabuf.type = meta[0] || 'text/plain'\r\n\tabuf.charset = charset\r\n\r\n\treturn abuf\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/string-to-arraybuffer/index.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/arrays.js":
/*!*************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/arrays.js ***!
  \*************************************************************/
/*! exports provided: cloneArray, bubbleSort, heapSort, insertNumberIntoArray, insertionSort, mergeTwoSortedArrays, mergeSort, quickSort, doesConsecutiveElementsConditionHold, isArrayInIncreasingOrder, isArrayInNonDecreasingOrder, isArrayInDecreasingOrder, isArrayInNonIncreasingOrder, findSuperlativeElement, max, min, arrayIncludes, removeDuplicatesFromArray, flattenOneLevel, flattenAllLevels, getRandomArrayElement, propertySum, categorizeArrayElementsByFunction, categorizeArrayElementsByProperty, getLastElementOfArray, createAndFillArray, createArrayFromElement, generateAllSubsets, padOrTrimArrayAtStart, selectElementsByIndex, selectElementsOrDefaultByIndex, transpose2d, all, any, none, notAll, some */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneArray\", function() { return cloneArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bubbleSort\", function() { return bubbleSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"heapSort\", function() { return heapSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertNumberIntoArray\", function() { return insertNumberIntoArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertionSort\", function() { return insertionSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeTwoSortedArrays\", function() { return mergeTwoSortedArrays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeSort\", function() { return mergeSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"quickSort\", function() { return quickSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"doesConsecutiveElementsConditionHold\", function() { return doesConsecutiveElementsConditionHold; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayInIncreasingOrder\", function() { return isArrayInIncreasingOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayInNonDecreasingOrder\", function() { return isArrayInNonDecreasingOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayInDecreasingOrder\", function() { return isArrayInDecreasingOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayInNonIncreasingOrder\", function() { return isArrayInNonIncreasingOrder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSuperlativeElement\", function() { return findSuperlativeElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return max; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return min; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"arrayIncludes\", function() { return arrayIncludes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeDuplicatesFromArray\", function() { return removeDuplicatesFromArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flattenOneLevel\", function() { return flattenOneLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flattenAllLevels\", function() { return flattenAllLevels; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRandomArrayElement\", function() { return getRandomArrayElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"propertySum\", function() { return propertySum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"categorizeArrayElementsByFunction\", function() { return categorizeArrayElementsByFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"categorizeArrayElementsByProperty\", function() { return categorizeArrayElementsByProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLastElementOfArray\", function() { return getLastElementOfArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAndFillArray\", function() { return createAndFillArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createArrayFromElement\", function() { return createArrayFromElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateAllSubsets\", function() { return generateAllSubsets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"padOrTrimArrayAtStart\", function() { return padOrTrimArrayAtStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectElementsByIndex\", function() { return selectElementsByIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectElementsOrDefaultByIndex\", function() { return selectElementsOrDefaultByIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transpose2d\", function() { return transpose2d; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"all\", function() { return all; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"any\", function() { return any; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"none\", function() { return none; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notAll\", function() { return notAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"some\", function() { return some; });\n/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ \"./node_modules/thaw-common-utilities.ts/lib/numbers.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects */ \"./node_modules/thaw-common-utilities.ts/lib/objects.js\");\n/* harmony import */ var _collection_classes_priority_queue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collection-classes/priority-queue */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/priority-queue.js\");\n// github:tom-weatherhead/common-utilities.ts/src/arrays.ts\n\n\n\n\nfunction cloneArray(array) {\n    return array.slice(0); // See https://davidwalsh.name/javascript-clone-array\n    // TODO: Try: return array.slice();\n}\n// Sorting algorithm number 1: Bubble Sort\nfunction bubbleSort(array, fnComparator) {\n    let changeDetected = true;\n    array = cloneArray(array);\n    for (let i = array.length - 1; i > 0 && changeDetected; i--) {\n        changeDetected = false;\n        for (let j = 0; j < i; j++) {\n            const element1 = array[j];\n            const element2 = array[j + 1];\n            if (!fnComparator(element1, element2)) {\n                array[j] = element2;\n                array[j + 1] = element1;\n                changeDetected = true;\n            }\n        }\n    }\n    return array;\n}\n// Sorting algorithm number 2: Heap Sort\nfunction heapSort(array, fnComparator) {\n    const priorityQueue = new _collection_classes_priority_queue__WEBPACK_IMPORTED_MODULE_2__[\"PriorityQueue\"](fnComparator);\n    array.forEach((element) => {\n        priorityQueue.enqueue(element);\n    });\n    const result = [];\n    while (!priorityQueue.isEmpty()) {\n        result.push(priorityQueue.dequeue());\n    }\n    return result;\n}\n// Sorting algorithm number 3: Insertion Sort\nfunction insertNumberIntoArray(n, array, fnComparator) {\n    // array must already be sorted in the proper order.\n    let i = array.findIndex((m) => !fnComparator(m, n));\n    if (i < 0) {\n        i = array.length;\n    }\n    const result = Object(_objects__WEBPACK_IMPORTED_MODULE_1__[\"clone\"])(array);\n    // Array.splice modifies the array in place. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    result.splice(i, 0, n);\n    return result;\n}\nfunction insertionSort(array, fnComparator) {\n    return array.reduce((accumulator, n) => insertNumberIntoArray(n, accumulator, fnComparator), []);\n}\n// Sorting algorithm number 4: Merge Sort\nfunction mergeTwoSortedArrays(array1, array2, fnComparator) {\n    let index1 = 0;\n    let index2 = 0;\n    const result = [];\n    while (index1 < array1.length && index2 < array2.length) {\n        const element1 = array1[index1];\n        const element2 = array2[index2];\n        if (fnComparator(element1, element2)) {\n            result.push(element1);\n            index1++;\n        }\n        else {\n            result.push(element2);\n            index2++;\n        }\n    }\n    if (index1 < array1.length) {\n        // Array.concat() does not modify the array in place; it returns a new array.\n        return result.concat(array1.slice(index1));\n    }\n    else if (index2 < array2.length) {\n        return result.concat(array2.slice(index2));\n    }\n    else {\n        return result;\n    }\n}\nfunction mergeSort(array, fnComparator) {\n    if (array.length <= 1) {\n        return array;\n    }\n    const midpoint = Math.trunc(array.length / 2);\n    const array1 = array.slice(0, midpoint);\n    const array2 = array.slice(midpoint);\n    const sortedArray1 = mergeSort(array1, fnComparator);\n    const sortedArray2 = mergeSort(array2, fnComparator);\n    const mergedArray = mergeTwoSortedArrays(sortedArray1, sortedArray2, fnComparator);\n    return mergedArray;\n}\n// Sorting algorithm number 5: Quicksort\nfunction quickSort(array, fnComparator) {\n    if (array.length <= 1) {\n        return array;\n    }\n    // const pivotElement = array.shift(); // No. Don't destroy the parameter.\n    const pivotElement = array[0];\n    const subArray1 = [];\n    const subArray2 = [];\n    array.slice(1).forEach((element) => {\n        if (fnComparator(element, pivotElement)) {\n            subArray1.push(element);\n        }\n        else {\n            subArray2.push(element);\n        }\n    });\n    return quickSort(subArray1, fnComparator)\n        .concat([pivotElement])\n        .concat(quickSort(subArray2, fnComparator));\n}\nfunction doesConsecutiveElementsConditionHold(array, fn, defaultResult = true) {\n    if (array.length <= 1) {\n        // The array is too short to have any consecutive elements.\n        return defaultResult;\n    }\n    for (let i = 0; i < array.length - 1; i++) {\n        if (!fn(array[i], array[i + 1])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isArrayInIncreasingOrder(array) {\n    return doesConsecutiveElementsConditionHold(array, (x, y) => x < y, true);\n}\nfunction isArrayInNonDecreasingOrder(array) {\n    return doesConsecutiveElementsConditionHold(array, (x, y) => x <= y, true);\n}\nfunction isArrayInDecreasingOrder(array) {\n    return doesConsecutiveElementsConditionHold(array, (x, y) => x > y, true);\n}\nfunction isArrayInNonIncreasingOrder(array) {\n    return doesConsecutiveElementsConditionHold(array, (x, y) => x >= y, true);\n}\nfunction findSuperlativeElement(array, fn) {\n    if (!array.length) {\n        // From https://www.sitepen.com/blog/typescript-2-3-the-sexy-default-type-argument/ :\n        // return <T> {}; // Return the default value for type T.\n        throw new Error('findSuperlativeElement() : array has a length of zero.');\n    }\n    return array.slice(1).reduce(fn, array[0]);\n}\nfunction max(array) {\n    return findSuperlativeElement(array, (x, y) => (x > y ? x : y));\n}\nfunction min(array) {\n    return findSuperlativeElement(array, (x, y) => (x < y ? x : y));\n}\n// NO: Array.includes() exists in Typescript, so we don't need to implement arrayIncludes()\n// Note: error TS2339: Property 'includes' does not exist on type 'number[]'.\nfunction arrayIncludes(array, element) {\n    return array.indexOf(element) >= 0;\n}\nfunction removeDuplicatesFromArray(array) {\n    // See the discussion at https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\n    // JavaScript Set: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\n    // See https://stackoverflow.com/questions/13486479/how-to-get-an-array-of-unique-values-from-an-array-containing-duplicates-in-java\n    // Discussion about performace: See https://medium.com/@jakubsynowiec/unique-array-values-in-javascript-7c932682766c\n    // return [...new Set(array)]; // Yes. Requires ES6, since it uses the \"spread\" operator (\"...\").\n    // return Array.from(new Set(array)); // Yes\n    return array.reduce((x, y) => (x.includes(y) ? x : [...x, y]), // Array.includes() exists in Typescript\n    // (x: T[], y: T) => x.indexOf(y) >= 0 ? x : [...x, y],\n    []); // Yes. From svnpenn.\n}\nfunction flattenOneLevel(a, b = []) {\n    return a.reduce((accumulator, element) => {\n        const castedElement = element;\n        // if (isArray(element)) {\n        if (typeof castedElement !== 'undefined') {\n            return accumulator.concat(castedElement);\n        }\n        else {\n            accumulator.push(element);\n            return accumulator;\n        }\n    }, b);\n}\nfunction flattenAllLevels(a, b = []) {\n    return a.reduce((accumulator, element) => {\n        const elementAsArray = element;\n        const elementAsT = element;\n        if (typeof elementAsArray !== 'undefined') {\n            flattenAllLevels(elementAsArray, accumulator);\n        }\n        else if (typeof elementAsT !== 'undefined') {\n            accumulator.push(elementAsT);\n        }\n        return accumulator;\n    }, b);\n}\nfunction getRandomArrayElement(array) {\n    if (!array.length) {\n        return undefined;\n    }\n    return array[Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"getRandomNonNegativeInteger\"])(array.length)];\n}\nfunction propertySum(array, propertyName) {\n    return Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"sum\"])(array.map((element) => element[propertyName]));\n}\n// TODO: Use this:\n// export function categorizeArrayElementsByFunction<T, U>(\n// \tarray: T[],\n// \tfn: (element: T) => U // (element: T) => ObjectKeyType\n// ): Record<U, T[]> { ... }\n// T must be an ObjectValueType\n// export function categorizeArrayElementsByFunction<T>(\n// \tarray: T[],\n// \tfn: (element: T) => string // (element: T) => ObjectKeyType\n// ): Record<string, unknown> {\nfunction categorizeArrayElementsByFunction(array, fn // (element: T) => ObjectKeyType\n) {\n    // [...new Set(array)] : Remove duplicate elements\n    // const propertyValues = [...new Set(array.map(element => fn(element)))];\n    const propertyValues = removeDuplicatesFromArray(array.map((element) => fn(element)));\n    const start = {};\n    // Or: const start = new Map<U, T[]>();\n    propertyValues.sort();\n    return propertyValues.reduce((accumulator, propertyValue) => {\n        accumulator[propertyValue] = array.filter((element) => fn(element) === propertyValue);\n        return accumulator;\n    }, start);\n}\nfunction categorizeArrayElementsByProperty(array, propertyName) {\n    return categorizeArrayElementsByFunction(array, (element) => element[propertyName]);\n}\nfunction getLastElementOfArray(array) {\n    if (!array.length) {\n        return undefined;\n    }\n    // From https://solidfoundationwebdev.com/blog/posts/3-methods-to-get-the-last-element-of-an-array-in-javascript :\n    // return array[array.length - 1];\n    // return array.pop(); // But this will remove the last element from the array.\n    return array.slice(-1)[0];\n}\n// createAndFillArray(obj, d1, d2, d3, ... dn) :\n// Create an n-dimensional array of size d1 x d2 x ... x dn, with all elements set to obj\n// NO: Try this recursive type definition: type Foo<T> = T | Foo<T[]>\n// export function createAndFillArray<T>(obj: T, ...dimensions: number[]): Foo<T> { ...\n// error TS2456: Type alias 'Metaarray' circularly references itself.\n// type Metaarray<T> = T | Metaarray<T[]>;\n// export function createAndFillArray<T>(\n// \tobj: T,\n// \t...dimensions: number[]\n// ): Metaarray<T> { ... }\nfunction createAndFillArray(obj, ...dimensions) {\n    if (!dimensions || !dimensions.length) {\n        return obj;\n    }\n    const result = [];\n    const d1 = dimensions.shift();\n    for (let i = 0; i < d1; i++) {\n        result.push(createAndFillArray(obj, ...dimensions));\n    }\n    dimensions.unshift(d1);\n    return result;\n}\nfunction createArrayFromElement(element, length) {\n    // if (length < 0) {\n    // \treturn [];\n    // }\n    // return createAndFillArray(element, length);\n    // TODO: return new Array(length).fill(element);\n    return new Array(Math.max(length, 0)).fill(element);\n}\nfunction generateAllSubsets(array, i = 0, accumulator = []) {\n    if (i >= array.length) {\n        return [accumulator];\n    }\n    const list1 = generateAllSubsets(array, i + 1, accumulator);\n    const list2 = generateAllSubsets(array, i + 1, accumulator.concat([array[i]]));\n    return list1.concat(list2);\n}\nfunction padOrTrimArrayAtStart(array, desiredLength, defaultElement) {\n    const diff = array.length - desiredLength;\n    if (diff >= 0) {\n        return array.slice(diff);\n    }\n    else {\n        return new Array(-diff).fill(defaultElement).concat(array);\n    }\n}\nfunction selectElementsByIndex(array, ...selectedIndices) {\n    return selectedIndices\n        .filter((value) => value < array.length)\n        .map((selectedIndex) => array[selectedIndex]);\n}\nfunction selectElementsOrDefaultByIndex(array, defaultValue, ...selectedIndices) {\n    return selectedIndices.map((selectedIndex) => selectedIndex < array.length ? array[selectedIndex] : defaultValue);\n}\n// transpose2d changes [[A1, A2, A3], [B1, B2, B3], [C1, C2, C3]]\n// to: [[A1, B1, C1], [A2, B2, C2], [A3, B3, C3]]\nfunction transpose2d(matrix) {\n    const minLength = Math.min(...matrix.map((row) => row.length));\n    const result = [];\n    for (let i = 0; i < minLength; i++) {\n        const row = [];\n        for (const array of matrix) {\n            row.push(array[i]);\n        }\n        result.push(row);\n    }\n    return result;\n}\n// export function cascade1d1array<T>(\n// \toperation: (s: T, element: T) => T, // Function,\n// \tseedValue: T,\n// \tarray: T[]\n// ): T[] {\n// \treturn array.reduce((accumulator: T[], element: T) => {\n// \t\tseedValue = operation(seedValue, element);\n// \t\taccumulator.push(seedValue);\n// \t\treturn accumulator;\n// \t}, []);\n// }\n// TODO: Function performed on arrays of Booleans:\n// - all\n// - any\n// - none\n// - notAll\n// - some\n// -\nfunction all(array) {\n    for (const value of array) {\n        if (!value) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction any(array) {\n    for (const value of array) {\n        if (value) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction none(array) {\n    for (const value of array) {\n        if (value) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction notAll(array) {\n    for (const value of array) {\n        if (!value) {\n            return true;\n        }\n    }\n    return false;\n}\nconst some = any;\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/arrays.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/arraysOfNumbers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/arraysOfNumbers.js ***!
  \**********************************************************************/
/*! exports provided: createNaNArray, normalize, mean, median, dotProduct, crossProduct, generateHierarchyOfLocalMaximaAndMinima, standardDeviation, mapToNumStdDeviationsFromMean, populationCovariance, sampleCovariance, coefficientOfDetermination, clamp, populationCorrelationCoefficient, sampleCorrelationCoefficient, getLastElementOfNumericArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNaNArray\", function() { return createNaNArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mean\", function() { return mean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"median\", function() { return median; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dotProduct\", function() { return dotProduct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"crossProduct\", function() { return crossProduct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateHierarchyOfLocalMaximaAndMinima\", function() { return generateHierarchyOfLocalMaximaAndMinima; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"standardDeviation\", function() { return standardDeviation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapToNumStdDeviationsFromMean\", function() { return mapToNumStdDeviationsFromMean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"populationCovariance\", function() { return populationCovariance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sampleCovariance\", function() { return sampleCovariance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coefficientOfDetermination\", function() { return coefficientOfDetermination; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return clamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"populationCorrelationCoefficient\", function() { return populationCorrelationCoefficient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sampleCorrelationCoefficient\", function() { return sampleCorrelationCoefficient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLastElementOfNumericArray\", function() { return getLastElementOfNumericArray; });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"./node_modules/thaw-common-utilities.ts/lib/arrays.js\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ \"./node_modules/thaw-common-utilities.ts/lib/functions.js\");\n/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./numbers */ \"./node_modules/thaw-common-utilities.ts/lib/numbers.js\");\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./objects */ \"./node_modules/thaw-common-utilities.ts/lib/objects.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./types */ \"./node_modules/thaw-common-utilities.ts/lib/types.js\");\n// github:tom-weatherhead/common-utilities.ts/src/arraysOfNumbers.ts\n\n\n\n\n\n\nfunction createNaNArray(length) {\n    return Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"createArrayFromElement\"])(NaN, length);\n}\nfunction normalize(array) {\n    if (!array.length) {\n        return [];\n    }\n    const minValue = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"min\"])(array);\n    const maxValue = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"max\"])(array);\n    const range = maxValue - minValue;\n    if (!range) {\n        return createNaNArray(array.length);\n    }\n    return array.map((n) => (n - minValue) / (maxValue - minValue));\n}\nfunction mean(arg) {\n    if (arg.length <= 0) {\n        return NaN;\n    }\n    return Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(...arg) / arg.length;\n}\nfunction median(arg) {\n    if (arg.length <= 0) {\n        return NaN;\n    }\n    const sortedArray = Object(_objects__WEBPACK_IMPORTED_MODULE_3__[\"clone\"])(arg).sort(); // Array.sort() sorts the array *in place*\n    return sortedArray[Math.floor(sortedArray.length / 2)];\n}\n// Version 1: Dot product of 2 arrays.\n// Version 2: Dot product of n arrays.\n// export function dotProductVersion1(\n// \tarray1: number[],\n// \tarray2: number[]\n// ): number {\n// \tconst len = Math.min(array1.length, array2.length);\n// \treturn sum(\n// \t\t...array1.slice(0, len).map((n1: number, i: number) => n1 * array2[i])\n// \t);\n// }\n// Was dotProductVersion2\nfunction dotProduct(...serieses) {\n    if (serieses.length === 0) {\n        return NaN;\n    }\n    return Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(...Object(_functions__WEBPACK_IMPORTED_MODULE_1__[\"pointwise\"])(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"product\"], ...serieses));\n}\n// Cross product (i.e. Cartesian product)\n// Version 1: Cross product of 2 arrays.\n// Version 2: Cross product of n arrays.\n// export function crossProductVersion1(\n// \tarray1: number[],\n// \tarray2: number[]\n// ): number[][] {\n// \treturn array1.reduce(\n// \t\t(accumulator1: number[][], n1: number) =>\n// \t\t\taccumulator1.concat(\n// \t\t\t\tarray2.reduce(\n// \t\t\t\t\t(accumulator2: number[][], n2: number) =>\n// \t\t\t\t\t\taccumulator2.concat([[n1, n2]]),\n// \t\t\t\t\t[]\n// \t\t\t\t)\n// \t\t\t),\n// \t\t[]\n// \t);\n// }\nfunction crossProductVersion2Helper(accumulator, ...aa) {\n    if (aa.length === 0) {\n        return accumulator;\n    }\n    accumulator = accumulator.reduce((accumulator1, accumulatorElement) => accumulator1.concat(aa[0].reduce((accumulator2, n2) => accumulator2.concat([\n        accumulatorElement.concat([n2])\n    ]), [])), []);\n    return crossProductVersion2Helper(accumulator, ...aa.slice(1));\n}\n// Cross product (i.e. Cartesian product)\n// Was crossProductVersion2\nfunction crossProduct(...aa) {\n    return crossProductVersion2Helper([[]], ...aa);\n}\nfunction generateHierarchyOfLocalMaximaAndMinima(array) {\n    const result = [];\n    let currentTier = array.map((element) => {\n        return {\n            maximum: element,\n            minimum: element\n        };\n    });\n    result.unshift(currentTier);\n    while (currentTier.length > 1) {\n        const newTier = [];\n        for (let i = 0; i < currentTier.length; i += 2) {\n            const value1 = currentTier[i];\n            let combinedValue;\n            if (i + 1 < currentTier.length) {\n                const value2 = currentTier[i + 1];\n                combinedValue = {\n                    maximum: Math.max(value1.maximum, value2.maximum),\n                    minimum: Math.min(value1.minimum, value2.minimum)\n                };\n            }\n            else {\n                combinedValue = {\n                    maximum: value1.maximum,\n                    minimum: value1.minimum\n                };\n            }\n            newTier.push(combinedValue);\n        }\n        currentTier = newTier;\n        result.unshift(currentTier);\n    }\n    return result;\n}\n// from core.ts in ta-math :\n// export function sd(series: Array<number>) {\n// \tlet E = mean(series);\n// \tlet E2 = mean(pointwise((x: number) => x * x, series));\n// \treturn Math.sqrt(E2 - E * E);\n// }\nfunction standardDeviation(arg) {\n    if (arg.length <= 1) {\n        return NaN;\n    }\n    // const meanOfArg = mean(arg);\n    const square = (n) => n * n;\n    // return Math.sqrt(\n    // \tsum(...arg.map((n) => square(n - meanOfArg))) / (arg.length - 1)\n    // );\n    // See https://www.mathsisfun.com/data/standard-deviation-formulas.html :\n    // 1) Celcualte the mean\n    // 2) Array of (pointwise) differences\n    // 3) Array of squares of differences\n    // 4) Sum of array of squares of differences\n    // 5) Average of array of squares of differences\n    // 6) Square root of average of array of squares of differences (between each value in the array and the mean of the array)\n    const mu = mean(arg);\n    const sumOfSquares = Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(...arg.map((n) => square(n - mu)));\n    return Math.sqrt(sumOfSquares / arg.length);\n}\nfunction mapToNumStdDeviationsFromMean(a) {\n    const m = mean(a);\n    const stdDev = standardDeviation(a);\n    if (Number.isNaN(stdDev) || stdDev === 0) {\n        return createNaNArray(a.length);\n    }\n    else {\n        return a.map((value) => (value - m) / stdDev);\n    }\n}\n// Covariance: See https://www.investopedia.com/terms/c/covariance.asp\n/*\nWhen an analyst has a set of data, a pair of x and y values, covariance can be calculated using five variables from that data. They are:\n\n    xi = a given x value in the data set\n    xm = the mean, or average, of the x values\n    yi = the y value in the data set that corresponds with xi\n    ym = the mean, or average, of the y values\n    n = the number of data points\n\nGiven this information, the formula for covariance is:\n\nCovariance(x, y) = SUM [(xi - xm) * (yi - ym)] / (n - 1)\n */\nfunction createCovarianceFunction(k) {\n    return (x, y) => {\n        if (x.length !== y.length || x.length <= 1) {\n            return NaN;\n        }\n        const meanX = mean(x);\n        const meanY = mean(y);\n        // Note that if x is a list of numbers, then covariance(x, x) === (standardDeviation(x)) ^ 2\n        return (Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(...Object(_functions__WEBPACK_IMPORTED_MODULE_1__[\"pointwise\"])((xi, yi) => (xi - meanX) * (yi - meanY), x, y)) /\n            (x.length - k));\n    };\n}\n// If you are saying \"populationCovariance vs. sampleCovariance? WTF???\"\n// then see https://www.educba.com/covariance-formula/\nconst populationCovariance = createCovarianceFunction(0);\nconst sampleCovariance = createCovarianceFunction(1);\n// R Squared function: Calculates the coefficient of determination\n// See e.g. https://www.statisticshowto.com/probability-and-statistics/coefficient-of-determination-r-squared/\nfunction coefficientOfDetermination(x, y) {\n    const n = x.length;\n    if (n !== y.length || n === 0) {\n        return NaN;\n    }\n    const numerator = n * Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(Object(_functions__WEBPACK_IMPORTED_MODULE_1__[\"pointwise\"])(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"product\"], x, y)) - Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(x) * Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(y);\n    const square = (i) => i * i;\n    const fn = (z) => n * Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(z.map(square)) - square(Object(_numbers__WEBPACK_IMPORTED_MODULE_2__[\"sum\"])(z));\n    const denominatorSquared = fn(x) * fn(y);\n    return (numerator * numerator) / denominatorSquared;\n}\nfunction clamp(value, minimum, maximum) {\n    if (value < minimum) {\n        return minimum;\n    }\n    else if (value > maximum) {\n        return maximum;\n    }\n    else {\n        return value;\n    }\n}\n// Correlation Coefficient: See https://www.investopedia.com/terms/c/correlationcoefficient.asp\n// Also known as the Pearson product-moment correlation coefficient\n// CorrelationCoefficient(x, y) = covariance(x, y) / (standardDeviation(x) * standardDeviation(y))\nfunction createCorrelationCoefficientFunction(k) {\n    return (x, y) => {\n        if (x.length !== y.length || x.length <= 1) {\n            return NaN;\n        }\n        // const numerator = covariance(x, y);\n        const numerator = createCovarianceFunction(k)(x, y);\n        const denominator = standardDeviation(x) * standardDeviation(y);\n        if (denominator === 0) {\n            return NaN; // numerator ? NaN : 0;\n        }\n        return clamp(numerator / denominator, -1, 1);\n    };\n}\nconst populationCorrelationCoefficient = createCorrelationCoefficientFunction(0);\nconst sampleCorrelationCoefficient = createCorrelationCoefficientFunction(1);\nfunction getLastElementOfNumericArray(array) {\n    return Object(_types__WEBPACK_IMPORTED_MODULE_4__[\"ifDefinedThenElse\"])(Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"getLastElementOfArray\"])(array), NaN);\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/arraysOfNumbers.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/asynchronous.js":
/*!*******************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/asynchronous.js ***!
  \*******************************************************************/
/*! exports provided: asyncForEach, asyncMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asyncForEach\", function() { return asyncForEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asyncMap\", function() { return asyncMap; });\n// github:tom-weatherhead/common-utilities.ts/src/asynchronous.ts\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// From https://codeburst.io/javascript-async-await-with-foreach-b6ba62bbf404 :\n// const waitFor = ms => new Promise(r => setTimeout(r, ms));\nfunction asyncForEach(array, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (let index = 0; index < array.length; index++) {\n            yield callback(array[index], index, array);\n        }\n    });\n}\n/*\nasyncForEach([1, 2, 3], async (num) => {\n    await waitFor(50);\n    console.log(num);\n});\n\nconsole.log('Done');\n*/\nfunction asyncMap(array, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = [];\n        for (let index = 0; index < array.length; index++) {\n            result.push(yield callback(array[index], index, array));\n        }\n        return result;\n    });\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/asynchronous.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/hashtable.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/hashtable.js ***!
  \***********************************************************************************/
/*! exports provided: createHashTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createHashTable\", function() { return createHashTable; });\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/hashtable.ts\n\nclass HashTable {\n    constructor() {\n        // Map key hashes to buckets of values:\n        // private readonly hashTable = new Map<number, [K, V][]>();\n        this.hashTable = new Map();\n    }\n    get(key) {\n        const bucket = this.findBucket(key) || [];\n        const keyValuePair = bucket.find((kvp) => key.equals(kvp.key));\n        if (typeof keyValuePair !== 'undefined') {\n            return keyValuePair.value;\n        }\n        return undefined;\n    }\n    set(key, value) {\n        const bucket = this.findBucket(key) || [];\n        const newBucket = [{ key, value }].concat(this.bucketWithKeyRemoved(bucket, key));\n        return newBucket.length > bucket.length;\n    }\n    delete(key) {\n        const bucket = this.findBucket(key);\n        if (typeof bucket === 'undefined') {\n            return false;\n        }\n        const newBucket = this.bucketWithKeyRemoved(bucket, key);\n        const wasDeleted = newBucket.length < bucket.length;\n        if (newBucket.length > 0) {\n            this.hashTable.set(key.getHashCode(), newBucket);\n        }\n        else {\n            this.hashTable.delete(key.getHashCode());\n        }\n        return wasDeleted;\n    }\n    findBucket(key) {\n        return this.hashTable.get(key.getHashCode());\n    }\n    bucketWithKeyRemoved(bucket, key) {\n        return bucket.filter((kvp) => !key.equals(kvp.key));\n    }\n}\nfunction createHashTable() {\n    return new HashTable();\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/hashtable.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator-base.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator-base.js ***!
  \***************************************************************************************/
/*! exports provided: IteratorBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IteratorBase\", function() { return IteratorBase; });\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/iterator-base.ts\n\nclass IteratorBase {\n    // The methods in this class are implemented in terms of isDone(), next(), and cloneAndConstruct().\n    every(pred) {\n        while (!this.isDone()) {\n            if (!pred(this.next())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    filter(pred) {\n        const resultArray = [];\n        while (!this.isDone()) {\n            const element = this.next();\n            if (pred(element)) {\n                resultArray.push(element);\n            }\n        }\n        return this.cloneAndConstruct(resultArray);\n    }\n    forEach(fn) {\n        while (!this.isDone()) {\n            fn(this.next());\n        }\n    }\n    map(fnMapElement) {\n        const resultArray = [];\n        while (!this.isDone()) {\n            resultArray.push(fnMapElement(this.next()));\n        }\n        return this.cloneAndConstruct(resultArray);\n    }\n    some(pred) {\n        while (!this.isDone()) {\n            if (pred(this.next())) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator-base.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js ***!
  \**********************************************************************************/
/*! exports provided: Iterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iterator\", function() { return Iterator; });\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../objects */ \"./node_modules/thaw-common-utilities.ts/lib/objects.js\");\n/* harmony import */ var _iterator_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterator-base */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator-base.js\");\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/iterator.ts\n\n\n\nclass Iterator extends _iterator_base__WEBPACK_IMPORTED_MODULE_1__[\"IteratorBase\"] {\n    constructor(items) {\n        super();\n        this.items = [];\n        this.index = 0;\n        this.items = items;\n    }\n    static cloneAndConstruct(items) {\n        return new Iterator(Object(_objects__WEBPACK_IMPORTED_MODULE_0__[\"clone\"])(items));\n    }\n    next() {\n        if (this.isDone()) {\n            return undefined;\n        }\n        return this.items[this.index++]; // Evaluate, then increment\n    }\n    isDone() {\n        return this.index >= this.items.length;\n    }\n    cloneAndConstruct(items) {\n        return Iterator.cloneAndConstruct(items);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/priority-queue.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/priority-queue.js ***!
  \****************************************************************************************/
/*! exports provided: PriorityQueue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PriorityQueue\", function() { return PriorityQueue; });\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../objects */ \"./node_modules/thaw-common-utilities.ts/lib/objects.js\");\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterator */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js\");\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/priority-queue.ts\n\n\n\nclass PriorityQueue {\n    constructor(fnComparator) {\n        this.items = [];\n        this.fnComparator = fnComparator;\n    }\n    enqueue(item) {\n        this.items.push(item);\n        // Now: Restore the heap condition throughout the heap by propagating\n        // the element that is now at index heap.length - 1 up through the heap, as necessary.\n        let index = this.items.length - 1;\n        while (index) {\n            const nextIndex = Math.trunc((index - 1) / 2);\n            const elementAtIndex = this.items[index];\n            const elementAtNextIndex = this.items[nextIndex];\n            if (this.fnComparator(elementAtNextIndex, elementAtIndex)) {\n                break;\n            }\n            // Swap the two elements:\n            this.items[index] = elementAtNextIndex;\n            this.items[nextIndex] = elementAtIndex;\n            index = nextIndex;\n        }\n    }\n    dequeue() {\n        if (!this.items.length) {\n            return undefined;\n        }\n        const result = this.items[0];\n        const lastElement = this.items.pop();\n        if (!this.items.length) {\n            return result;\n        }\n        this.items[0] = lastElement;\n        // Now: Restore the heap condition throughout the heap by propagating lastElement\n        // (i.e. the element that is now at index 0) down through the heap, as necessary.\n        // The heap condition is: For all integers i where 0 <= i < heap.length :\n        // 1) If 2 * i + 1 < heap.length then heap[i] >= heap[2 * i + 1], and\n        // 2) If 2 * i + 2 < heap.length then heap[i] >= heap[2 * i + 2]\n        // The heap condition ensures that the largest element in the heap is at index 0.\n        let index = 0;\n        while (index < this.items.length) {\n            const nextIndex1 = 2 * index + 1;\n            const nextIndex2 = nextIndex1 + 1;\n            let nextIndex;\n            if (nextIndex1 >= this.items.length) {\n                break;\n            }\n            else if (nextIndex2 >= this.items.length) {\n                nextIndex = nextIndex1;\n            }\n            else if (this.fnComparator(this.items[nextIndex1], this.items[nextIndex2])) {\n                nextIndex = nextIndex1;\n            }\n            else {\n                nextIndex = nextIndex2;\n            }\n            const elementAtIndex = this.items[index];\n            const elementAtNextIndex = this.items[nextIndex];\n            if (!this.fnComparator(elementAtNextIndex, elementAtIndex)) {\n                break;\n            }\n            // Swap the two elements:\n            this.items[index] = elementAtNextIndex;\n            this.items[nextIndex] = elementAtIndex;\n            index = nextIndex;\n        }\n        return result;\n    }\n    isEmpty() {\n        return this.items.length === 0;\n    }\n    getIterator() {\n        const originalItems = this.items;\n        const sortedItems = [];\n        this.items = Object(_objects__WEBPACK_IMPORTED_MODULE_0__[\"clone\"])(this.items);\n        while (!this.isEmpty()) {\n            sortedItems.push(this.dequeue());\n        }\n        this.items = originalItems;\n        return new _iterator__WEBPACK_IMPORTED_MODULE_1__[\"Iterator\"](sortedItems); // No need to clone sortedItems\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/priority-queue.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/queue.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/queue.js ***!
  \*******************************************************************************/
/*! exports provided: Queue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Queue\", function() { return Queue; });\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterator */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js\");\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/queue.ts\n\n\nclass Queue {\n    constructor() {\n        this.items = [];\n    }\n    enqueue(item) {\n        this.items.push(item);\n    }\n    dequeue() {\n        // if (this.isEmpty()) {\n        // \tthrow new EmptyQueueException();\n        // }\n        return this.items.shift();\n    }\n    isEmpty() {\n        return this.items.length === 0;\n    }\n    getIterator() {\n        return _iterator__WEBPACK_IMPORTED_MODULE_0__[\"Iterator\"].cloneAndConstruct(this.items);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/queue.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/set.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/set.js ***!
  \*****************************************************************************/
/*! exports provided: Set */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Set\", function() { return Set; });\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterator */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js\");\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/set.ts\n\n\nclass Set {\n    constructor() {\n        this.items = [];\n    }\n    static createFromArray(array) {\n        const result = new Set();\n        array.forEach((element) => {\n            result.add(element);\n        });\n        return result;\n    }\n    static createFromIterator(iterator) {\n        const result = new Set();\n        while (!iterator.isDone()) {\n            const element = iterator.next();\n            result.add(element);\n        }\n        return result;\n    }\n    clone() {\n        const result = new Set();\n        this.items.forEach((element) => {\n            result.add(element);\n        });\n        return result;\n    }\n    clear() {\n        this.items = [];\n    }\n    add(item) {\n        if (!this.contains(item)) {\n            this.items.push(item);\n        }\n    }\n    remove(item) {\n        // Or: Use indexOf() and splice(), since item should occur in this.items at most one time?\n        this.items = this.items.filter((otherItem) => otherItem !== item);\n    }\n    contains(item) {\n        // TODO? : Pass in the equality test predicate as a parameter?\n        return this.items.indexOf(item) >= 0;\n    }\n    isEmpty() {\n        return this.items.length === 0;\n    }\n    isASubsetOf(otherSet) {\n        return this.items.every((element) => otherSet.contains(element));\n    }\n    isEqualTo(otherSet) {\n        return this.isASubsetOf(otherSet) && otherSet.isASubsetOf(this);\n    }\n    // Return a new set that is the intersection of this set and otherSet.\n    // This set is not modified.\n    intersection(otherSet) {\n        const result = this.clone();\n        result.intersectionInPlace(otherSet);\n        return result;\n    }\n    // Remove any of this set's elements that are not also in otherSet, in place (i.e. this set may be modified).\n    intersectionInPlace(otherSet) {\n        const elementsToRemove = new Set();\n        this.items.forEach((element) => {\n            if (!otherSet.contains(element)) {\n                elementsToRemove.add(element);\n            }\n        });\n        elementsToRemove.items.forEach((element) => {\n            this.remove(element);\n        });\n    }\n    // Return a new set that is the union of this set and otherSet.\n    // This set is not modified.\n    union(otherSet) {\n        const result = this.clone();\n        result.unionInPlace(otherSet);\n        return result;\n    }\n    // Add otherSet's elements to this set, in place (i.e. this set may be modified).\n    unionInPlace(otherSet) {\n        otherSet.items.forEach((element) => {\n            this.add(element);\n        });\n    }\n    getAllSubsets() {\n        const result = [];\n        this.getAllSubsetsHelper(result, [], 0);\n        return result;\n    }\n    getIterator() {\n        return _iterator__WEBPACK_IMPORTED_MODULE_0__[\"Iterator\"].cloneAndConstruct(this.items);\n    }\n    getAllSubsetsHelper(arrayOfSubsets, subsetAsArray, index) {\n        if (index >= this.items.length) {\n            arrayOfSubsets.push(Set.createFromArray(subsetAsArray));\n        }\n        else {\n            subsetAsArray.push(this.items[index]);\n            this.getAllSubsetsHelper(arrayOfSubsets, subsetAsArray, index + 1);\n            subsetAsArray.pop();\n            this.getAllSubsetsHelper(arrayOfSubsets, subsetAsArray, index + 1);\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/set.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/collection-classes/stack.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/collection-classes/stack.js ***!
  \*******************************************************************************/
/*! exports provided: Stack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stack\", function() { return Stack; });\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterator */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/iterator.js\");\n// github:tom-weatherhead/common-utilities.ts/src/collection-classes/stack.ts\n\n\nclass Stack {\n    constructor() {\n        this.items = [];\n    }\n    // constructor() {\n    // }\n    push(item) {\n        this.items.push(item);\n    }\n    pop() {\n        // if (this.isEmpty()) {\n        // \tthrow new EmptyStackException();\n        // }\n        return this.items.pop();\n    }\n    isEmpty() {\n        return this.items.length === 0;\n    }\n    getIterator() {\n        return _iterator__WEBPACK_IMPORTED_MODULE_0__[\"Iterator\"].cloneAndConstruct(this.items);\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/collection-classes/stack.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/dates.js":
/*!************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/dates.js ***!
  \************************************************************/
/*! exports provided: getDateString, getDateTimeString, getDateUTCString, getDateTimeUTCString, getIntervalStringFromMilliseconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDateString\", function() { return getDateString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDateTimeString\", function() { return getDateTimeString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDateUTCString\", function() { return getDateUTCString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDateTimeUTCString\", function() { return getDateTimeUTCString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIntervalStringFromMilliseconds\", function() { return getIntervalStringFromMilliseconds; });\n/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numbers */ \"./node_modules/thaw-common-utilities.ts/lib/numbers.js\");\n// github:tom-weatherhead/common-utilities.ts/src/dates.ts\n\n\nfunction getDateString(date) {\n    // if (!date || !isDate(date)) {\n    // \tdate = new Date();\n    // }\n    return `${date.getFullYear()}-${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getMonth() + 1, 2)}-${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getDate(), 2)}`;\n}\nfunction getDateTimeString(date) {\n    // See https://stackoverflow.com/questions/10073699/pad-a-number-with-leading-zeros-in-javascript\n    // ('000' + num).slice(-4)\n    return `${getDateString(date)} ${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getHours(), 2)}:${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getMinutes(), 2)}:${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getSeconds(), 2)}`;\n    /*\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString .\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat .\n\n    // ! The fails under Node.js ; see https://github.com/nodejs/node/issues/8500\n    // mscdex: \"By default --with-intl=small-icu is used to build node, which contains just the en-US locale\n    // (@nodejs/intl -- is this correct or does it contain more?). You will need to either build node\n    // with --with-intl=full-icu or --with-intl=system-icu if you want to be able to use more locales.\n    // The reason node is built with a smaller ICU by default is file size.\n\n    return date\n        .toLocaleTimeString(\n            'en-CA',\n            {\n                timeZone: 'UTC',\n                hour12: false,\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit'\n            }\n        )\n        .replace(',', '');\n    */\n}\nfunction getDateUTCString(date) {\n    return `${date.getUTCFullYear()}-${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getUTCMonth() + 1, 2)}-${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getUTCDate(), 2)}`;\n}\nfunction getDateTimeUTCString(date) {\n    if (typeof date === 'undefined') {\n        date = new Date();\n    }\n    return `${getDateUTCString(date)} ${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getUTCHours(), 2)}:${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getUTCMinutes(), 2)}:${Object(_numbers__WEBPACK_IMPORTED_MODULE_0__[\"zeroPadNumber\"])(date.getUTCSeconds(), 2)}`;\n}\n// export function getDifferenceBetweenDatesAsObject (dateEarlier, dateLater) {\n// \tconst dateValueDifference = dateLater.valueOf() - dateEarlier.valueOf();\n// \tlet seconds = Math.floor(dateValueDifference / 1000);\n// \tconst hours = Math.floor(seconds / 3600);\n// \tseconds -= hours * 3600;\n// \tconst minutes = Math.floor(seconds / 60);\n// \tseconds -= minutes * 60;\n// \treturn {\n// \t\thours: hours,\n// \t\tminutes: minutes,\n// \t\tseconds: seconds\n// \t};\n// }\n// export function getDifferenceBetweenDatesAsString (dateEarlier, dateLater) {\n// \tconst diff = getDifferenceBetweenDatesAsObject(dateEarlier, dateLater);\n// \treturn `${zeroPadNumber(diff.hours, 2)}h ${zeroPadNumber(diff.minutes, 2)}m ${zeroPadNumber(diff.seconds, 2)}s`;\n// }\nfunction pluralize(n, unit) {\n    return `${n} ${unit}${n === 1 ? '' : 's'}`;\n}\n// export function getIntervalStringFromMillisecondsV1(milliseconds: number): string {\n// \tlet seconds = Math.floor(milliseconds / 1000);\n// \tmilliseconds -= seconds * 1000;\n// \tlet minutes = Math.floor(seconds / 60);\n// \tseconds -= minutes * 60;\n// \tlet hours = Math.floor(minutes / 60);\n// \tminutes -= hours * 60;\n// \tconst days = Math.floor(hours / 24);\n// \thours -= days * 24;\n// \treturn `${pluralize(days, 'day')}, ${pluralize(hours, 'hour')}, ${pluralize(minutes, 'minute')}, ${pluralize(seconds, 'second')}, and ${pluralize(milliseconds, 'millisecond')}`;\n// }\n// export function getIntervalStringFromMillisecondsV2(milliseconds: number): string {\nfunction getIntervalStringFromMilliseconds(milliseconds) {\n    const resultArray = [];\n    let seconds = Math.floor(milliseconds / 1000);\n    milliseconds -= seconds * 1000;\n    resultArray.unshift(pluralize(milliseconds, 'millisecond'));\n    if (seconds > 0) {\n        let minutes = Math.floor(seconds / 60);\n        seconds -= minutes * 60;\n        resultArray.unshift(pluralize(seconds, 'second'));\n        if (minutes > 0) {\n            let hours = Math.floor(minutes / 60);\n            minutes -= hours * 60;\n            resultArray.unshift(pluralize(minutes, 'minute'));\n            if (hours > 0) {\n                const days = Math.floor(hours / 24);\n                hours -= days * 24;\n                resultArray.unshift(pluralize(hours, 'hour'));\n                if (days > 0) {\n                    resultArray.unshift(pluralize(days, 'day'));\n                }\n            }\n        }\n    }\n    switch (resultArray.length) {\n        case 1:\n            return resultArray[0];\n        case 2:\n            return `${resultArray[0]} and ${resultArray[1]}`;\n        default:\n            // This will ensure the presence of an Oxford comma.\n            resultArray[resultArray.length - 1] = `and ${resultArray[resultArray.length - 1]}`;\n            return resultArray.join(', ');\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/dates.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/functions.js":
/*!****************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/functions.js ***!
  \****************************************************************/
/*! exports provided: identityFunction, booleanInvertFunction, compositeFunctions, curry, curry2ArgumentFunction, pointwise, rolling, cascade, spreadArrayParameter, unspreadArrayParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identityFunction\", function() { return identityFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"booleanInvertFunction\", function() { return booleanInvertFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compositeFunctions\", function() { return compositeFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry\", function() { return curry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry2ArgumentFunction\", function() { return curry2ArgumentFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointwise\", function() { return pointwise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rolling\", function() { return rolling; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cascade\", function() { return cascade; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spreadArrayParameter\", function() { return spreadArrayParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unspreadArrayParameter\", function() { return unspreadArrayParameter; });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"./node_modules/thaw-common-utilities.ts/lib/arrays.js\");\n/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./numbers */ \"./node_modules/thaw-common-utilities.ts/lib/numbers.js\");\n// github:tom-weatherhead/common-utilities.ts/src/functions.ts\n\n\n\nfunction identityFunction(arg) {\n    return arg;\n}\nconst booleanInvertFunction = (arg) => !arg;\n// 'Composite' as a verb, not an adjective:\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nfunction compositeFunctions(fnArray) {\n    return fnArray.reduce((accumulator, element) => (arg) => element(accumulator(arg)), identityFunction);\n}\n/* eslint-enable  @typescript-eslint/no-explicit-any */\n// Function.length is the number of parameters that a function expects.\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\n// E.g. If fn.length === 2, then curry(fn) returns x => y => fn(x, y);\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nfunction curryHelper(fn, args) {\n    return (arg) => {\n        args.push(arg);\n        if (args.length >= fn.length) {\n            return fn(...args);\n        }\n        return curryHelper(fn, args);\n    };\n}\n/* eslint-enable  @typescript-eslint/no-explicit-any */\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nfunction curry(fn) {\n    return curryHelper(fn, []);\n}\n/* eslint-enable  @typescript-eslint/no-explicit-any */\nfunction curry2ArgumentFunction(fn) {\n    return (arg1) => (arg2) => fn(arg1, arg2);\n}\nfunction pointwise(operation, ...serieses) {\n    if (serieses.length === 0) {\n        return [];\n    }\n    const lengths = serieses.map((series) => series.length);\n    const iseries = (j) => serieses.map((x) => x[j]);\n    return Object(_numbers__WEBPACK_IMPORTED_MODULE_1__[\"generateNonNegativeIntegersLessThan\"])(Math.min(...lengths)).map((i) => operation(...iseries(i)));\n}\nfunction rolling(operation, series, window) {\n    return Object(_numbers__WEBPACK_IMPORTED_MODULE_1__[\"generateNonNegativeIntegersLessThan\"])(series.length).map((i) => operation(...series.slice(Math.max(i + 1 - window, 0), i + 1)));\n}\nfunction cascade(operation, seedValue, ...serieses) {\n    return Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"transpose2d\"])(serieses).map((iseries) => {\n        seedValue = operation(seedValue, ...iseries);\n        return seedValue;\n    });\n}\nfunction spreadArrayParameter(fn) {\n    return (array) => fn(...array);\n}\nfunction unspreadArrayParameter(fn) {\n    return (...array) => fn(array);\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/functions.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/functors.js":
/*!***************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/functors.js ***!
  \***************************************************************/
/*! exports provided: UniversalFunctor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UniversalFunctor\", function() { return UniversalFunctor; });\n// github:tom-weatherhead/common-utilities.ts/src/functors.ts\n\nclass UniversalFunctor {\n    constructor(valueIn) {\n        this.value = valueIn;\n    }\n    getValue() {\n        return this.value;\n    }\n    map(f) {\n        return new UniversalFunctor(f(this.value));\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/functors.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/json.js":
/*!***********************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/json.js ***!
  \***********************************************************/
/*! exports provided: safeJsonParse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"safeJsonParse\", function() { return safeJsonParse; });\n// github:tom-weatherhead/common-utilities.ts/src/json.js\n\nfunction safeJsonParse(str, dflt) {\n    let result;\n    let errorToThrow = new Error('safeJsonParse() : Typecast error');\n    try {\n        result = JSON.parse(str);\n    }\n    catch (e) {\n        errorToThrow = e;\n    }\n    if (typeof result !== 'undefined') {\n        return result;\n    }\n    else if (typeof dflt !== 'undefined') {\n        return dflt;\n    }\n    else {\n        throw errorToThrow;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/json.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/lazy.js":
/*!***********************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/lazy.js ***!
  \***********************************************************/
/*! exports provided: makeLazyList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeLazyList\", function() { return makeLazyList; });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"./node_modules/thaw-common-utilities.ts/lib/arrays.js\");\n// github:tom-weatherhead/common-utilities.ts/src/lazy.ts\n\n\nfunction pushMe(array, element) {\n    array.push(element);\n    return array;\n}\n// Here, fn can be an n-ary function, not just a binary function:\nfunction makeLazyList(fn, ...args) {\n    // const argsClone = args.slice(0); // See https://davidwalsh.name/javascript-clone-array\n    const argsClone = Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"cloneArray\"])(args);\n    const arg1 = args.shift();\n    return () => [arg1, makeLazyList(fn, ...pushMe(args, fn(...argsClone)))];\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/lazy.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/main.js":
/*!***********************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/main.js ***!
  \***********************************************************/
/*! exports provided: cloneArray, bubbleSort, heapSort, insertNumberIntoArray, insertionSort, mergeTwoSortedArrays, mergeSort, quickSort, doesConsecutiveElementsConditionHold, isArrayInIncreasingOrder, isArrayInNonDecreasingOrder, isArrayInDecreasingOrder, isArrayInNonIncreasingOrder, findSuperlativeElement, max, min, arrayIncludes, removeDuplicatesFromArray, flattenOneLevel, flattenAllLevels, getRandomArrayElement, propertySum, categorizeArrayElementsByFunction, categorizeArrayElementsByProperty, getLastElementOfArray, createAndFillArray, createArrayFromElement, generateAllSubsets, padOrTrimArrayAtStart, selectElementsByIndex, selectElementsOrDefaultByIndex, transpose2d, all, any, none, notAll, some, createNaNArray, normalize, mean, median, dotProduct, crossProduct, generateHierarchyOfLocalMaximaAndMinima, standardDeviation, mapToNumStdDeviationsFromMean, populationCovariance, sampleCovariance, coefficientOfDetermination, clamp, populationCorrelationCoefficient, sampleCorrelationCoefficient, getLastElementOfNumericArray, asyncForEach, asyncMap, getDateString, getDateTimeString, getDateUTCString, getDateTimeUTCString, getIntervalStringFromMilliseconds, identityFunction, booleanInvertFunction, compositeFunctions, curry, curry2ArgumentFunction, pointwise, rolling, cascade, spreadArrayParameter, unspreadArrayParameter, UniversalFunctor, safeJsonParse, makeLazyList, isGreaterThan, isLessThan, fnIsGreaterThan, fnIsLessThan, isNegative, isNonNegative, isPositive, isNonPositive, negate, binaryAdd, fnAddition, additiveIdentity, add, sum, subtract, fnSubtraction, binaryMultiply, fnMultiplication, multiplicativeIdentity, multiply, product, divide, safeDivide, fnSafeDivision, getSign, generateNonNegativeIntegersLessThan, generateRange, generateFirstNNaturalNumbers, getRandomNonNegativeInteger, zeroPadNumber, zeroExtendNumber, removeNonNumbers, histogram, histogramLookup, mode, aToThePowerOfB, tenToThePowerOfN, factory_fnRoundToNDigits, isInteger, isNonNegativeInteger, isPositiveInteger, isNonNegativeNumber, isPositiveNumber, integerDivision, numberToFixedPrecisionString, clone, copySpecifiedObjectProperties, combineObjects, getOwnProperties, getProperty, deleteUndefinedValuesFromObject, regexInteger, regexFloatingPointNumber, replicateString, getTypeString, areTypesEqual, isUndefined, isDefined, isArray, isBoolean, isDate, isFunction, isNumber, isSafeNumber, isObject, isRegularExpression, isString, isArrayOf, isArrayOfNumbers, isAggregateEntity, ifDefinedThenElse, ifDefinedThenMapElse, createHashTable, PriorityQueue, Queue, Set, Stack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"./node_modules/thaw-common-utilities.ts/lib/arrays.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cloneArray\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"cloneArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"bubbleSort\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"bubbleSort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"heapSort\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"heapSort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"insertNumberIntoArray\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"insertNumberIntoArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"insertionSort\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"insertionSort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mergeTwoSortedArrays\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"mergeTwoSortedArrays\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mergeSort\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"mergeSort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"quickSort\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"quickSort\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"doesConsecutiveElementsConditionHold\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"doesConsecutiveElementsConditionHold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArrayInIncreasingOrder\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"isArrayInIncreasingOrder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArrayInNonDecreasingOrder\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"isArrayInNonDecreasingOrder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArrayInDecreasingOrder\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"isArrayInDecreasingOrder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArrayInNonIncreasingOrder\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"isArrayInNonIncreasingOrder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findSuperlativeElement\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"findSuperlativeElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"max\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"min\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"arrayIncludes\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"arrayIncludes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeDuplicatesFromArray\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"removeDuplicatesFromArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"flattenOneLevel\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"flattenOneLevel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"flattenAllLevels\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"flattenAllLevels\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getRandomArrayElement\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"getRandomArrayElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"propertySum\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"propertySum\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"categorizeArrayElementsByFunction\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"categorizeArrayElementsByFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"categorizeArrayElementsByProperty\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"categorizeArrayElementsByProperty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getLastElementOfArray\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"getLastElementOfArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createAndFillArray\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"createAndFillArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createArrayFromElement\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"createArrayFromElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateAllSubsets\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"generateAllSubsets\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"padOrTrimArrayAtStart\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"padOrTrimArrayAtStart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"selectElementsByIndex\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"selectElementsByIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"selectElementsOrDefaultByIndex\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"selectElementsOrDefaultByIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"transpose2d\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"transpose2d\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"all\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"all\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"any\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"any\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"none\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"none\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notAll\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"notAll\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"some\", function() { return _arrays__WEBPACK_IMPORTED_MODULE_0__[\"some\"]; });\n\n/* harmony import */ var _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arraysOfNumbers */ \"./node_modules/thaw-common-utilities.ts/lib/arraysOfNumbers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createNaNArray\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"createNaNArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"normalize\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mean\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"mean\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"median\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"median\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dotProduct\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"dotProduct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"crossProduct\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"crossProduct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateHierarchyOfLocalMaximaAndMinima\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"generateHierarchyOfLocalMaximaAndMinima\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"standardDeviation\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"standardDeviation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapToNumStdDeviationsFromMean\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"mapToNumStdDeviationsFromMean\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"populationCovariance\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"populationCovariance\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"sampleCovariance\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"sampleCovariance\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"coefficientOfDetermination\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"coefficientOfDetermination\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"clamp\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"populationCorrelationCoefficient\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"populationCorrelationCoefficient\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"sampleCorrelationCoefficient\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"sampleCorrelationCoefficient\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getLastElementOfNumericArray\", function() { return _arraysOfNumbers__WEBPACK_IMPORTED_MODULE_1__[\"getLastElementOfNumericArray\"]; });\n\n/* harmony import */ var _asynchronous__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./asynchronous */ \"./node_modules/thaw-common-utilities.ts/lib/asynchronous.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"asyncForEach\", function() { return _asynchronous__WEBPACK_IMPORTED_MODULE_2__[\"asyncForEach\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"asyncMap\", function() { return _asynchronous__WEBPACK_IMPORTED_MODULE_2__[\"asyncMap\"]; });\n\n/* harmony import */ var _dates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dates */ \"./node_modules/thaw-common-utilities.ts/lib/dates.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getDateString\", function() { return _dates__WEBPACK_IMPORTED_MODULE_3__[\"getDateString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getDateTimeString\", function() { return _dates__WEBPACK_IMPORTED_MODULE_3__[\"getDateTimeString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getDateUTCString\", function() { return _dates__WEBPACK_IMPORTED_MODULE_3__[\"getDateUTCString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getDateTimeUTCString\", function() { return _dates__WEBPACK_IMPORTED_MODULE_3__[\"getDateTimeUTCString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getIntervalStringFromMilliseconds\", function() { return _dates__WEBPACK_IMPORTED_MODULE_3__[\"getIntervalStringFromMilliseconds\"]; });\n\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./functions */ \"./node_modules/thaw-common-utilities.ts/lib/functions.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"identityFunction\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"identityFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"booleanInvertFunction\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"booleanInvertFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compositeFunctions\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"compositeFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"curry\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry2ArgumentFunction\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"curry2ArgumentFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"pointwise\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"pointwise\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rolling\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"rolling\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cascade\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"cascade\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"spreadArrayParameter\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"spreadArrayParameter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unspreadArrayParameter\", function() { return _functions__WEBPACK_IMPORTED_MODULE_4__[\"unspreadArrayParameter\"]; });\n\n/* harmony import */ var _functors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./functors */ \"./node_modules/thaw-common-utilities.ts/lib/functors.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UniversalFunctor\", function() { return _functors__WEBPACK_IMPORTED_MODULE_5__[\"UniversalFunctor\"]; });\n\n/* harmony import */ var _json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./json */ \"./node_modules/thaw-common-utilities.ts/lib/json.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"safeJsonParse\", function() { return _json__WEBPACK_IMPORTED_MODULE_6__[\"safeJsonParse\"]; });\n\n/* harmony import */ var _lazy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lazy */ \"./node_modules/thaw-common-utilities.ts/lib/lazy.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"makeLazyList\", function() { return _lazy__WEBPACK_IMPORTED_MODULE_7__[\"makeLazyList\"]; });\n\n/* harmony import */ var _numbers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./numbers */ \"./node_modules/thaw-common-utilities.ts/lib/numbers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isGreaterThan\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isGreaterThan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isLessThan\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isLessThan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fnIsGreaterThan\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"fnIsGreaterThan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fnIsLessThan\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"fnIsLessThan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNegative\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isNegative\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNonNegative\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isNonNegative\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPositive\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isPositive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNonPositive\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isNonPositive\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"negate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"binaryAdd\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"binaryAdd\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fnAddition\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"fnAddition\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"additiveIdentity\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"additiveIdentity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"add\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"sum\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"sum\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"subtract\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fnSubtraction\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"fnSubtraction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"binaryMultiply\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"binaryMultiply\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fnMultiplication\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"fnMultiplication\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"multiplicativeIdentity\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"multiplicativeIdentity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"multiply\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"product\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"product\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"divide\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"divide\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"safeDivide\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"safeDivide\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fnSafeDivision\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"fnSafeDivision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getSign\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"getSign\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateNonNegativeIntegersLessThan\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"generateNonNegativeIntegersLessThan\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateRange\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"generateRange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateFirstNNaturalNumbers\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"generateFirstNNaturalNumbers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getRandomNonNegativeInteger\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"getRandomNonNegativeInteger\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"zeroPadNumber\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"zeroPadNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"zeroExtendNumber\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"zeroExtendNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeNonNumbers\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"removeNonNumbers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"histogram\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"histogram\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"histogramLookup\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"histogramLookup\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mode\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"mode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"aToThePowerOfB\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"aToThePowerOfB\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tenToThePowerOfN\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"tenToThePowerOfN\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"factory_fnRoundToNDigits\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"factory_fnRoundToNDigits\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isInteger\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isInteger\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNonNegativeInteger\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isNonNegativeInteger\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPositiveInteger\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isPositiveInteger\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNonNegativeNumber\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isNonNegativeNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPositiveNumber\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"isPositiveNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"integerDivision\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"integerDivision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"numberToFixedPrecisionString\", function() { return _numbers__WEBPACK_IMPORTED_MODULE_8__[\"numberToFixedPrecisionString\"]; });\n\n/* harmony import */ var _objects__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./objects */ \"./node_modules/thaw-common-utilities.ts/lib/objects.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return _objects__WEBPACK_IMPORTED_MODULE_9__[\"clone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"copySpecifiedObjectProperties\", function() { return _objects__WEBPACK_IMPORTED_MODULE_9__[\"copySpecifiedObjectProperties\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"combineObjects\", function() { return _objects__WEBPACK_IMPORTED_MODULE_9__[\"combineObjects\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getOwnProperties\", function() { return _objects__WEBPACK_IMPORTED_MODULE_9__[\"getOwnProperties\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getProperty\", function() { return _objects__WEBPACK_IMPORTED_MODULE_9__[\"getProperty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deleteUndefinedValuesFromObject\", function() { return _objects__WEBPACK_IMPORTED_MODULE_9__[\"deleteUndefinedValuesFromObject\"]; });\n\n/* harmony import */ var _regexes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./regexes */ \"./node_modules/thaw-common-utilities.ts/lib/regexes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"regexInteger\", function() { return _regexes__WEBPACK_IMPORTED_MODULE_10__[\"regexInteger\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"regexFloatingPointNumber\", function() { return _regexes__WEBPACK_IMPORTED_MODULE_10__[\"regexFloatingPointNumber\"]; });\n\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./strings */ \"./node_modules/thaw-common-utilities.ts/lib/strings.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"replicateString\", function() { return _strings__WEBPACK_IMPORTED_MODULE_11__[\"replicateString\"]; });\n\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./types */ \"./node_modules/thaw-common-utilities.ts/lib/types.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getTypeString\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"getTypeString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"areTypesEqual\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"areTypesEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isUndefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isDefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isBoolean\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDate\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isDate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSafeNumber\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isSafeNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRegularExpression\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isRegularExpression\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArrayOf\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isArrayOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isArrayOfNumbers\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isArrayOfNumbers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isAggregateEntity\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"isAggregateEntity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ifDefinedThenElse\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"ifDefinedThenElse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ifDefinedThenMapElse\", function() { return _types__WEBPACK_IMPORTED_MODULE_12__[\"ifDefinedThenMapElse\"]; });\n\n/* harmony import */ var _collection_classes_hashtable__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./collection-classes/hashtable */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/hashtable.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createHashTable\", function() { return _collection_classes_hashtable__WEBPACK_IMPORTED_MODULE_13__[\"createHashTable\"]; });\n\n/* harmony import */ var _collection_classes_priority_queue__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./collection-classes/priority-queue */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/priority-queue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PriorityQueue\", function() { return _collection_classes_priority_queue__WEBPACK_IMPORTED_MODULE_14__[\"PriorityQueue\"]; });\n\n/* harmony import */ var _collection_classes_queue__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./collection-classes/queue */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/queue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Queue\", function() { return _collection_classes_queue__WEBPACK_IMPORTED_MODULE_15__[\"Queue\"]; });\n\n/* harmony import */ var _collection_classes_set__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./collection-classes/set */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/set.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Set\", function() { return _collection_classes_set__WEBPACK_IMPORTED_MODULE_16__[\"Set\"]; });\n\n/* harmony import */ var _collection_classes_stack__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./collection-classes/stack */ \"./node_modules/thaw-common-utilities.ts/lib/collection-classes/stack.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Stack\", function() { return _collection_classes_stack__WEBPACK_IMPORTED_MODULE_17__[\"Stack\"]; });\n\n// github:tom-weatherhead/common-utilities.ts/src/main.ts\n\n// See e.g. https://itnext.io/step-by-step-building-and-publishing-an-npm-typescript-package-44fe7164964c\n\n\n\n\n\n\n// export * from './http';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/main.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/numbers.js":
/*!**************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/numbers.js ***!
  \**************************************************************/
/*! exports provided: isGreaterThan, isLessThan, fnIsGreaterThan, fnIsLessThan, isNegative, isNonNegative, isPositive, isNonPositive, negate, binaryAdd, fnAddition, additiveIdentity, add, sum, subtract, fnSubtraction, binaryMultiply, fnMultiplication, multiplicativeIdentity, multiply, product, divide, safeDivide, fnSafeDivision, getSign, generateNonNegativeIntegersLessThan, generateRange, generateFirstNNaturalNumbers, getRandomNonNegativeInteger, zeroPadNumber, zeroExtendNumber, removeNonNumbers, histogram, histogramLookup, mode, aToThePowerOfB, tenToThePowerOfN, factory_fnRoundToNDigits, isInteger, isNonNegativeInteger, isPositiveInteger, isNonNegativeNumber, isPositiveNumber, integerDivision, numberToFixedPrecisionString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isGreaterThan\", function() { return isGreaterThan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLessThan\", function() { return isLessThan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fnIsGreaterThan\", function() { return fnIsGreaterThan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fnIsLessThan\", function() { return fnIsLessThan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNegative\", function() { return isNegative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonNegative\", function() { return isNonNegative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPositive\", function() { return isPositive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonPositive\", function() { return isNonPositive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return negate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"binaryAdd\", function() { return binaryAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fnAddition\", function() { return fnAddition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"additiveIdentity\", function() { return additiveIdentity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sum\", function() { return sum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subtract\", function() { return subtract; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fnSubtraction\", function() { return fnSubtraction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"binaryMultiply\", function() { return binaryMultiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fnMultiplication\", function() { return fnMultiplication; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiplicativeIdentity\", function() { return multiplicativeIdentity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"multiply\", function() { return multiply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"product\", function() { return product; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"divide\", function() { return divide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"safeDivide\", function() { return safeDivide; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fnSafeDivision\", function() { return fnSafeDivision; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSign\", function() { return getSign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateNonNegativeIntegersLessThan\", function() { return generateNonNegativeIntegersLessThan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateRange\", function() { return generateRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateFirstNNaturalNumbers\", function() { return generateFirstNNaturalNumbers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRandomNonNegativeInteger\", function() { return getRandomNonNegativeInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zeroPadNumber\", function() { return zeroPadNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zeroExtendNumber\", function() { return zeroExtendNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeNonNumbers\", function() { return removeNonNumbers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"histogram\", function() { return histogram; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"histogramLookup\", function() { return histogramLookup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mode\", function() { return mode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aToThePowerOfB\", function() { return aToThePowerOfB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tenToThePowerOfN\", function() { return tenToThePowerOfN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"factory_fnRoundToNDigits\", function() { return factory_fnRoundToNDigits; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isInteger\", function() { return isInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonNegativeInteger\", function() { return isNonNegativeInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPositiveInteger\", function() { return isPositiveInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonNegativeNumber\", function() { return isNonNegativeNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPositiveNumber\", function() { return isPositiveNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"integerDivision\", function() { return integerDivision; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"numberToFixedPrecisionString\", function() { return numberToFixedPrecisionString; });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"./node_modules/thaw-common-utilities.ts/lib/arrays.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings */ \"./node_modules/thaw-common-utilities.ts/lib/strings.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"./node_modules/thaw-common-utilities.ts/lib/types.js\");\n// github:tom-weatherhead/common-utilities.ts/src/numbers.ts\n\n\n\n\n// export function isSafeNumber(arg: unknown): boolean {\n// \treturn (\n// \t\ttypeof arg === 'number' && !Number.isNaN(arg) && Number.isFinite(arg)\n// \t);\n// }\nconst isGreaterThan = (x, y) => Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(x) && Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(y) && x > y;\nconst isLessThan = (x, y) => Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(x) && Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(y) && x < y;\nconst fnIsGreaterThan = isGreaterThan;\nconst fnIsLessThan = isLessThan;\nconst isNegative = (n) => Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n) && n < 0;\nconst isNonNegative = (n) => Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n) && n >= 0;\nconst isPositive = (n) => Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n) && n > 0;\nconst isNonPositive = (n) => Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n) && n <= 0;\n// **** negate ****\nconst negate = (n) => -n;\n// **** add ****\nconst binaryAdd = (a, b) => a + b;\nconst fnAddition = binaryAdd;\nconst additiveIdentity = 0;\n// export function add(...arg: number[]): number {\n// \treturn arg.reduce(binaryAdd, additiveIdentity);\n// }\nfunction add(...arg) {\n    return removeNonNumbers(arg).reduce(binaryAdd, additiveIdentity);\n}\nconst sum = add;\n// export function arraySum(arg: unknown[]): number {\n// \treturn sum(...arg);\n// }\n// **** subtract ****\nconst subtract = (a, b) => a - b;\nconst fnSubtraction = subtract;\n// **** multiply ****\nconst binaryMultiply = (a, b) => a * b;\nconst fnMultiplication = binaryMultiply;\nconst multiplicativeIdentity = 1;\n// export function multiply(...arg: number[]): number {\n// \treturn arg.reduce(\n// \t\tbinaryMultiply,\n// \t\tmultiplicativeIdentity\n// \t);\n// }\nfunction multiply(...arg) {\n    return removeNonNumbers(arg).reduce(binaryMultiply, multiplicativeIdentity);\n}\nconst product = multiply;\n// **** divide ****\nconst divide = (a, b) => a / b;\n// export const fnSafeDivision = (a: number, b: number, dflt = 0): number =>\n// \t!b ? dflt : a / b;\nfunction safeDivide(a, b, dflt = 0) {\n    // return Number.isNaN(a) || !b ? dflt : a / b;\n    let result;\n    try {\n        result = a / b;\n    }\n    catch (error) {\n        result = NaN; // Not a safe number.\n    }\n    return Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isSafeNumber\"])(result) ? result : dflt;\n}\nconst fnSafeDivision = safeDivide;\nfunction getSign(n) {\n    if (!Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n)) {\n        return NaN;\n    }\n    else if (n > 0) {\n        return 1;\n    }\n    else if (n < 0) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\n// range() : Stolen from https://stackoverflow.com/questions/36947847/how-to-generate-range-of-numbers-from-0-to-n-in-es2015-only#comment68007528_36953272\n/**\n * range\n *\n * @method range\n * @param  {Int}   start\t\t\t\tThe smallest integer in the array to be generated\n * @param  {Int}   end\t\t\t\t\tThe largest integer in the array to be generated\n * @return {Array<Int>}\t\t\t\t\tThe integers from start to end, inclusive, in increasing order\n */\n/*\nfunction range (start, end) {\n    // return [...Array(end - start + 1).keys()].map(n => start + n);\n\n    return [...Array.from(Array(end - start + 1).keys())].map(n => start + n); // The Array.from() is for TypeScript, where Array.keys() returns an iterator, not an array.\n}\n */\nfunction generateNonNegativeIntegersLessThan(n) {\n    // return generateRange(0, n - 1);\n    return [...Array(n).keys()];\n}\nfunction generateRange(start, end) {\n    // const result: number[] = [];\n    // while (start <= end) {\n    // \tresult.push(start);\n    // \tstart++;\n    // }\n    // return result;\n    // return [...Array(end - start + 1).keys()].map(n => start + n);\n    return generateNonNegativeIntegersLessThan(end - start + 1).map((n) => start + n);\n}\nfunction generateFirstNNaturalNumbers(n) {\n    return generateRange(1, n);\n}\nfunction getRandomNonNegativeInteger(n) {\n    // Returns a value in the range [0, 1, 2, ..., n - 1].\n    if (Number.isNaN(n) || n <= 0) {\n        return NaN;\n    }\n    if (n !== Math.floor(n)) {\n        throw new Error(`getRandomNonNegativeInteger() : ${n} is not an integer.`);\n    }\n    return Math.floor(Math.random() * n);\n}\nfunction zeroPadNumber(n, minLength) {\n    return (Object(_strings__WEBPACK_IMPORTED_MODULE_1__[\"replicateString\"])('0', minLength) + n).slice(-minLength);\n}\nfunction zeroExtendNumber(n, minNumberOfDecimalPlaces) {\n    let str = n.toString();\n    let indexOfDecimalPoint = str.indexOf('.');\n    if (indexOfDecimalPoint < 0) {\n        indexOfDecimalPoint = str.length;\n        str = str + '.';\n    }\n    return (str +\n        Object(_strings__WEBPACK_IMPORTED_MODULE_1__[\"replicateString\"])('0', indexOfDecimalPoint + 1 + minNumberOfDecimalPlaces - str.length));\n}\nfunction removeNonNumbers(arg) {\n    // return arg.map((o) => o as number).filter((o) => o !== undefined);\n    return arg\n        .filter((o) => typeof o === 'number')\n        .map((o) => o)\n        .filter((n) => !Number.isNaN(n));\n}\nfunction histogram(arg) {\n    return arg.reduce((accumulator, element) => {\n        // accumulator[element] = (accumulator[element] || 0) + 1;\n        accumulator.set(element, (accumulator.get(element) || 0) + 1);\n        return accumulator;\n    }, new Map() // {}\n    );\n}\n// export function histogramLookup(hist: object, key: number | string, fnEqual: (number | string, number | string) => boolean): number | undefined {\n// \tconst pair: [number | string, number] = hist.find((he: [number | string, number]) => fnEqual(he[0], key));\n// export function histogramLookup(hist: object, key: keyType, fnEqual: (a: keyType, b: keyType) => boolean): number | undefined {\n// \tconst pair: [keyType, number] = hist.find((he: [keyType, number]) => fnEqual(he[0], key));\n// \tif (pair) {\n// \t\treturn pair[1];\n// \t} else {\n// \t\treturn undefined;\n// \t}\n// }\nfunction histogramLookup(hist, key) {\n    return hist.get(key);\n}\nfunction mode(arg) {\n    const hist = histogram(arg);\n    // return Object.keys(hist).reduce(\n    // TODO: Call reduce() on a duplicate-free version of arg\n    return arg.reduce((accumulator, element) => {\n        const elementCount = hist.get(element) || 0;\n        if (elementCount > accumulator.count) {\n            // accumulator = { element: element || undefined, count: elementCount };\n            accumulator = { element, count: elementCount };\n        }\n        return accumulator;\n    }, { element: undefined, count: 0 });\n}\nfunction aToThePowerOfB(a, b) {\n    return product(...Object(_arrays__WEBPACK_IMPORTED_MODULE_0__[\"createArrayFromElement\"])(a, b));\n}\nfunction tenToThePowerOfN(n) {\n    return aToThePowerOfB(10, n);\n}\nfunction factory_fnRoundToNDigits(n) {\n    const valueOfTenToThePowerOfN = tenToThePowerOfN(n);\n    return (m) => Math.round(m * valueOfTenToThePowerOfN) / valueOfTenToThePowerOfN;\n}\n// export function isInteger(n: number): boolean {\n// \t// return Number.isInteger(n);\n// \treturn Number.isSafeInteger(n); // ThAW 2020-01-06 : Q: Which integers are not 'safe'?\n// }\nfunction isInteger(n) {\n    return typeof n === 'number' && Number.isSafeInteger(n);\n}\nfunction isNonNegativeInteger(n) {\n    return isInteger(n) && n >= 0;\n}\nfunction isPositiveInteger(n) {\n    return isInteger(n) && n > 0;\n}\nfunction isNonNegativeNumber(n) {\n    return Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n) && n >= 0;\n}\nfunction isPositiveNumber(n) {\n    return Object(_types__WEBPACK_IMPORTED_MODULE_2__[\"isNumber\"])(n) && n > 0;\n}\nfunction integerDivision(n1, n2) {\n    return parseInt(`${n1 / n2}`, 10);\n    // try {\n    // \treturn parseInt(n1 / n2, 10);\n    // } catch (error) {\n    // \treturn undefined;\n    // }\n}\nfunction numberToFixedPrecisionString(n, digits) {\n    return zeroExtendNumber(factory_fnRoundToNDigits(digits)(n), digits);\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/numbers.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/objects.js":
/*!**************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/objects.js ***!
  \**************************************************************/
/*! exports provided: clone, copySpecifiedObjectProperties, combineObjects, getOwnProperties, getProperty, deleteUndefinedValuesFromObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copySpecifiedObjectProperties\", function() { return copySpecifiedObjectProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"combineObjects\", function() { return combineObjects; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOwnProperties\", function() { return getOwnProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getProperty\", function() { return getProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteUndefinedValuesFromObject\", function() { return deleteUndefinedValuesFromObject; });\n// github:tom-weatherhead/common-utilities.ts/src/objects.ts\n\nfunction clone(arg) {\n    // For an in-depth discussion of object copying, see https://scotch.io/bar-talk/copying-objects-in-javascript\n    // **** Warning: JSON.parse(JSON.stringify(arg)) will fail for circular objects.\n    // ? Do we need isCircular(obj) ?\n    return JSON.parse(JSON.stringify(arg));\n    // From avoidwork/haro/src/utility.js :\n    // return JSON.parse(JSON.stringify(arg, null, 0)); // TODO: What are the second and third parameters to stringify() ?\n}\nfunction copySpecifiedObjectProperties(propertyList, src, dst = {}) {\n    // propertyList.forEach(property => {\n    // \tif (isDefined(src[property])) {\n    // \t\tdst[property] = src[property];\n    // \t}\n    // });\n    propertyList\n        // .filter(property => isDefined(src[property]))\n        .filter((property) => typeof src[property] !== 'undefined')\n        .forEach((property) => {\n        dst[property] = src[property];\n    });\n    return dst;\n}\nfunction combineObjects(...objects) {\n    const combinedObject = {};\n    objects.forEach((object) => {\n        Object.keys(object).forEach((key) => {\n            combinedObject[key] = object[key];\n        });\n    });\n    return combinedObject;\n}\nfunction getOwnProperties(obj = {}) {\n    /*\n    // Version 1\n    // See https://stackoverflow.com/questions/208016/how-to-list-the-properties-of-a-javascript-object\n    let result = [];\n\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(key);\n        }\n    }\n\n    return result;\n    */\n    // Version 2\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\n    return Object.getOwnPropertyNames(obj);\n}\n// E.g. getProperty(obj, 'subObj1.subObj2.arrayMember.length', 'Toast');\nfunction getProperty(obj, propertyPath, defaultValue) {\n    const arrayOfProperties = propertyPath.split('.');\n    let result = obj;\n    for (const property of arrayOfProperties) {\n        const tempObj = result;\n        // if (!isDefined(obj)) {\n        if (typeof tempObj === 'undefined') {\n            return defaultValue;\n        }\n        result = tempObj[property];\n    }\n    const castedResult = result;\n    if (typeof castedResult === 'undefined') {\n        return defaultValue;\n    }\n    return castedResult;\n}\nfunction deleteUndefinedValuesFromObject(obj) {\n    const keysToDelete = Object.keys(obj).filter((key) => typeof obj[key] === 'undefined');\n    keysToDelete.forEach((key) => {\n        delete obj[key];\n    });\n    return obj;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/objects.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/regexes.js":
/*!**************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/regexes.js ***!
  \**************************************************************/
/*! exports provided: regexInteger, regexFloatingPointNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regexInteger\", function() { return regexInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regexFloatingPointNumber\", function() { return regexFloatingPointNumber; });\n// github:tom-weatherhead/common-utilities.ts/src/regexes.ts\n\nconst regexInteger = /^(0|-?[1-9][0-9]*)$/;\n// TODO: Allow 0.5 and 1.0 and 0.0, but not 00.5 or 01.0 or 0.50 or -0.0\n// Note: We never allow a plus sign to be part of the number.\n// Case 1: 0.0 : Zero. No minus sign is allowed.\n// Case 2: -?(0|[1-9][0-9]*)\\.[0-9]*[1-9] : The number can start with a zero, but it cannot end with a zero.\n// Case 3: -?[1-9][0-9]*\\.[0-9]+ : The number cannot start with a zero, but it can end with a zero.\n// export const regexFloatingPointNumber = /^-?(0|[1-9][0-9]*)\\.[0-9]+$/;\nconst regexFloatingPointNumber = /^((0\\.0)|(-?(0|[1-9][0-9]*)\\.[0-9]*[1-9])|(-?[1-9][0-9]*\\.[0-9]+))$/;\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/regexes.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/strings.js":
/*!**************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/strings.js ***!
  \**************************************************************/
/*! exports provided: replicateString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"replicateString\", function() { return replicateString; });\n// github:tom-weatherhead/common-utilities.ts/src/strings.ts\n\nfunction replicateString(str, n) {\n    // if (!isNumber(n)) {\n    // \treturn undefined;\n    // }\n    let result = '';\n    while (n > 0) {\n        result = result + `${str}`;\n        --n;\n    }\n    return result;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/strings.js?");

/***/ }),

/***/ "./node_modules/thaw-common-utilities.ts/lib/types.js":
/*!************************************************************!*\
  !*** ./node_modules/thaw-common-utilities.ts/lib/types.js ***!
  \************************************************************/
/*! exports provided: getTypeString, areTypesEqual, isUndefined, isDefined, isArray, isBoolean, isDate, isFunction, isNumber, isSafeNumber, isObject, isRegularExpression, isString, isArrayOf, isArrayOfNumbers, isAggregateEntity, ifDefinedThenElse, ifDefinedThenMapElse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTypeString\", function() { return getTypeString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"areTypesEqual\", function() { return areTypesEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return isBoolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDate\", function() { return isDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSafeNumber\", function() { return isSafeNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRegularExpression\", function() { return isRegularExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayOf\", function() { return isArrayOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArrayOfNumbers\", function() { return isArrayOfNumbers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAggregateEntity\", function() { return isAggregateEntity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ifDefinedThenElse\", function() { return ifDefinedThenElse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ifDefinedThenMapElse\", function() { return ifDefinedThenMapElse; });\n// github:tom-weatherhead/common-utilities.ts/src/types.ts\n\n// import { booleanInvertFunction, compositeFunctions } from './functions';\nfunction getTypeString(obj) {\n    return Object.prototype.toString.call(obj);\n}\nfunction areTypesEqual(obj1, obj2) {\n    return getTypeString(obj1) === getTypeString(obj2);\n}\nfunction factory_fnIsType(typeName) {\n    return (arg) => getTypeString(arg) === `[object ${typeName}]`;\n}\n// Done: npm i -D @babel/preset-env\n// Done: Babel presets in Gruntfile: \"presets\": [ \"@babel/preset-env\" ]\n// See https://github.com/babel/babel/issues/8575\n// See https://github.com/storybooks/storybook/issues/3937\n// See https://stackoverflow.com/questions/52092739/upgrade-to-babel-7-cannot-read-property-bindings-of-null\n// export function isDefined (obj) {\n// \treturn typeof obj !== '[object Undefined]';\n// }\n// export const isUndefined: (obj: any) => boolean = factory_fnIsType(\n// \t'Undefined'\n// );\nconst isUndefined = (obj) => typeof obj === 'undefined';\n// I.e. isDefined(arg) === booleanInvertFunction(isUndefined(arg))\n// export const isDefined: (obj: any) => boolean = compositeFunctions([isUndefined, booleanInvertFunction]);\n// export const isDefined: (obj: any) => boolean = obj =>\n// \t!factory_fnIsType('Undefined')(obj);\nconst isDefined = (obj) => typeof obj !== 'undefined';\nconst isArray = factory_fnIsType('Array');\nconst isBoolean = factory_fnIsType('Boolean');\nconst isDate = factory_fnIsType('Date');\nconst isFunction = factory_fnIsType('Function');\nconst isNumberType = factory_fnIsType('Number');\n// export const isNumber = arg => isNumberType(arg) && arg === arg; // This works too, since NaN !== NaN.\nconst isNumber = (arg) => isNumberType(arg) && !Number.isNaN(arg);\n// && typeof arg === 'number'\n// && Number.isFinite(arg);\n// export function isSafeNumber(arg: unknown): boolean {\n// \treturn (\n// \t\ttypeof arg === 'number' && !Number.isNaN(arg) && Number.isFinite(arg)\n// \t);\n// }\nconst isSafeNumber = (arg) => isNumber(arg) && Number.isFinite(arg);\nconst isObject = factory_fnIsType('Object');\nconst isRegularExpression = factory_fnIsType('RegExp');\nconst isString = factory_fnIsType('String');\nconst isArrayOf = (arg, fn) => isArray(arg) && arg.every(fn);\n// export const isArrayOfNumbers = arg => isArray(arg) && arg.every(isNumber);\nconst isArrayOfNumbers = (arg) => isArrayOf(arg, isNumber);\nconst isAggregateEntity = (arg) => isArray(arg) || isObject(arg);\n// Deprecated. Superseded by ifDefinedThenElse<T>()\n// export const ifDefinedElse: (obj: any, dflt: any) => boolean = (arg, dflt) =>\n// \tisDefined(arg) ? arg : dflt;\nfunction ifDefinedThenElse(valueIn, defaultOut) {\n    if (typeof valueIn !== 'undefined') {\n        return valueIn;\n    }\n    else {\n        return defaultOut;\n    }\n}\nfunction ifDefinedThenMapElse(valueIn, fn, defaultOut) {\n    if (typeof valueIn !== 'undefined') {\n        return fn(valueIn);\n    }\n    else {\n        return defaultOut;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-common-utilities.ts/lib/types.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/main.js":
/*!***********************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/main.js ***!
  \***********************************************************/
/*! exports provided: createAffineTransformationMatrix, doAffineTransformation, desaturateRGBA, desaturateImage, flipImage, generateKernel, gaussianBlurImage, mirrorImage, pixelateImage, ResamplingMode, resampleImage, rotate90DegreesClockwiseFromImage, rotate90DegreesCounterclockwiseFromImage, rotate180DegreesFromImage, generateTestImage_SingleRGBAColour, generateTestImage_GreyscaleGradient, compositeImageFromBuffers, compositeTest, convolveImageFromBuffer, ColourModel, defaultBytesPerPixel, createImageBuffer, createThAWImage, createThAWImageFromImageData, getExtensionFromFilePath, createFileIOManager, seeingRedRGBA, mapColoursInImageFromBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _processing_affine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processing/affine */ \"./node_modules/thaw-image-processing.ts/lib/processing/affine.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createAffineTransformationMatrix\", function() { return _processing_affine__WEBPACK_IMPORTED_MODULE_0__[\"createAffineTransformationMatrix\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"doAffineTransformation\", function() { return _processing_affine__WEBPACK_IMPORTED_MODULE_0__[\"doAffineTransformation\"]; });\n\n/* harmony import */ var _processing_desaturate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./processing/desaturate */ \"./node_modules/thaw-image-processing.ts/lib/processing/desaturate.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"desaturateRGBA\", function() { return _processing_desaturate__WEBPACK_IMPORTED_MODULE_1__[\"desaturateRGBA\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"desaturateImage\", function() { return _processing_desaturate__WEBPACK_IMPORTED_MODULE_1__[\"desaturateImage\"]; });\n\n/* harmony import */ var _processing_flip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./processing/flip */ \"./node_modules/thaw-image-processing.ts/lib/processing/flip.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"flipImage\", function() { return _processing_flip__WEBPACK_IMPORTED_MODULE_2__[\"flipImage\"]; });\n\n/* harmony import */ var _processing_gaussian_blur__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./processing/gaussian-blur */ \"./node_modules/thaw-image-processing.ts/lib/processing/gaussian-blur.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateKernel\", function() { return _processing_gaussian_blur__WEBPACK_IMPORTED_MODULE_3__[\"generateKernel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"gaussianBlurImage\", function() { return _processing_gaussian_blur__WEBPACK_IMPORTED_MODULE_3__[\"gaussianBlurImage\"]; });\n\n/* harmony import */ var _processing_mirror__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./processing/mirror */ \"./node_modules/thaw-image-processing.ts/lib/processing/mirror.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mirrorImage\", function() { return _processing_mirror__WEBPACK_IMPORTED_MODULE_4__[\"mirrorImage\"]; });\n\n/* harmony import */ var _processing_pixelate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./processing/pixelate */ \"./node_modules/thaw-image-processing.ts/lib/processing/pixelate.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"pixelateImage\", function() { return _processing_pixelate__WEBPACK_IMPORTED_MODULE_5__[\"pixelateImage\"]; });\n\n/* harmony import */ var _processing_resample__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./processing/resample */ \"./node_modules/thaw-image-processing.ts/lib/processing/resample.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ResamplingMode\", function() { return _processing_resample__WEBPACK_IMPORTED_MODULE_6__[\"ResamplingMode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"resampleImage\", function() { return _processing_resample__WEBPACK_IMPORTED_MODULE_6__[\"resampleImage\"]; });\n\n/* harmony import */ var _processing_rotate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./processing/rotate */ \"./node_modules/thaw-image-processing.ts/lib/processing/rotate.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotate90DegreesClockwiseFromImage\", function() { return _processing_rotate__WEBPACK_IMPORTED_MODULE_7__[\"rotate90DegreesClockwiseFromImage\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotate90DegreesCounterclockwiseFromImage\", function() { return _processing_rotate__WEBPACK_IMPORTED_MODULE_7__[\"rotate90DegreesCounterclockwiseFromImage\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotate180DegreesFromImage\", function() { return _processing_rotate__WEBPACK_IMPORTED_MODULE_7__[\"rotate180DegreesFromImage\"]; });\n\n/* harmony import */ var _util_composite__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./util/composite */ \"./node_modules/thaw-image-processing.ts/lib/util/composite.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateTestImage_SingleRGBAColour\", function() { return _util_composite__WEBPACK_IMPORTED_MODULE_8__[\"generateTestImage_SingleRGBAColour\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateTestImage_GreyscaleGradient\", function() { return _util_composite__WEBPACK_IMPORTED_MODULE_8__[\"generateTestImage_GreyscaleGradient\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compositeImageFromBuffers\", function() { return _util_composite__WEBPACK_IMPORTED_MODULE_8__[\"compositeImageFromBuffers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compositeTest\", function() { return _util_composite__WEBPACK_IMPORTED_MODULE_8__[\"compositeTest\"]; });\n\n/* harmony import */ var _util_convolve__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util/convolve */ \"./node_modules/thaw-image-processing.ts/lib/util/convolve.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"convolveImageFromBuffer\", function() { return _util_convolve__WEBPACK_IMPORTED_MODULE_9__[\"convolveImageFromBuffer\"]; });\n\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColourModel\", function() { return _util_image__WEBPACK_IMPORTED_MODULE_10__[\"ColourModel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultBytesPerPixel\", function() { return _util_image__WEBPACK_IMPORTED_MODULE_10__[\"defaultBytesPerPixel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createImageBuffer\", function() { return _util_image__WEBPACK_IMPORTED_MODULE_10__[\"createImageBuffer\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createThAWImage\", function() { return _util_image__WEBPACK_IMPORTED_MODULE_10__[\"createThAWImage\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createThAWImageFromImageData\", function() { return _util_image__WEBPACK_IMPORTED_MODULE_10__[\"createThAWImageFromImageData\"]; });\n\n/* harmony import */ var _util_file_io__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./util/file-io */ \"./node_modules/thaw-image-processing.ts/lib/util/file-io.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getExtensionFromFilePath\", function() { return _util_file_io__WEBPACK_IMPORTED_MODULE_11__[\"getExtensionFromFilePath\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createFileIOManager\", function() { return _util_file_io__WEBPACK_IMPORTED_MODULE_11__[\"createFileIOManager\"]; });\n\n/* harmony import */ var _util_map_colours__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./util/map-colours */ \"./node_modules/thaw-image-processing.ts/lib/util/map-colours.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"seeingRedRGBA\", function() { return _util_map_colours__WEBPACK_IMPORTED_MODULE_12__[\"seeingRedRGBA\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapColoursInImageFromBuffer\", function() { return _util_map_colours__WEBPACK_IMPORTED_MODULE_12__[\"mapColoursInImageFromBuffer\"]; });\n\n// thaw-image-processing.ts/src/main.ts\n// See e.g. https://itnext.io/step-by-step-building-and-publishing-an-npm-typescript-package-44fe7164964c\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export * from './util/map-coordinates';\n// export * from './util/remap-and-divide-by-255';\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/main.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/affine.js":
/*!************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/affine.js ***!
  \************************************************************************/
/*! exports provided: createAffineTransformationMatrix, doAffineTransformation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAffineTransformationMatrix\", function() { return createAffineTransformationMatrix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"doAffineTransformation\", function() { return doAffineTransformation; });\n/* harmony import */ var thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! thaw-common-utilities.ts */ \"./node_modules/thaw-common-utilities.ts/lib/main.js\");\n// thaw-image-processing.ts/src/affine.ts\n/* eslint-disable no-fallthrough */\n// Other ESLint examples:\n// eslint-disable-line no-fallthrough\n// eslint-disable-next-line no-fallthrough\n// srcX = dstX * a + dstY * b + c\n// srcY = dstX * d + dstY * e + f\n\nfunction createAffineTransformationMatrix(a, b, c, d, e, f) {\n    return { a, b, c, d, e, f };\n}\nfunction doAffineTransformation(dstImage, srcImage, matrix, dstLeft, dstRight, dstBottom, dstTop) {\n    if (dstImage.bytesPerPixel !== srcImage.bytesPerPixel) {\n        throw new Error('doAffineTransformation() : dstImage.bytesPerPixel !== srcImage.bytesPerPixel');\n    }\n    dstLeft = Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"ifDefinedThenElse\"])(dstLeft, 0);\n    dstRight = Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"ifDefinedThenElse\"])(dstRight, dstImage.width - 1);\n    dstBottom = Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"ifDefinedThenElse\"])(dstBottom, 0);\n    dstTop = Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"ifDefinedThenElse\"])(dstTop, dstImage.height - 1);\n    let dstRowOffset = dstImage.bytesPerLine * dstBottom + dstImage.bytesPerPixel * dstLeft;\n    for (let dstY = dstBottom; dstY <= dstTop; dstY++) {\n        // For each dstY++, srcX += b  and srcY += e\n        let dstPixelOffset = dstRowOffset;\n        for (let dstX = dstLeft; dstX <= dstRight; dstX++) {\n            // For each dstX++, srcX += a  and srcY += d\n            const srcX = Math.trunc(dstX * matrix.a + dstY * matrix.b + matrix.c);\n            const srcY = Math.trunc(dstX * matrix.d + dstY * matrix.e + matrix.f);\n            if (srcX >= 0 &&\n                srcX < srcImage.width &&\n                srcY >= 0 &&\n                srcY < srcImage.height) {\n                const srcPixelOffset = srcImage.bytesPerLine * srcY +\n                    srcImage.bytesPerPixel * srcX;\n                switch (dstImage.bytesPerPixel) {\n                    case 4:\n                        dstImage.data[dstPixelOffset + 3] =\n                            srcImage.data[srcPixelOffset + 3];\n                    case 3:\n                        dstImage.data[dstPixelOffset + 2] =\n                            srcImage.data[srcPixelOffset + 2];\n                        dstImage.data[dstPixelOffset + 1] =\n                            srcImage.data[srcPixelOffset + 1];\n                    case 1:\n                        dstImage.data[dstPixelOffset + 0] =\n                            srcImage.data[srcPixelOffset + 0];\n                    default:\n                        break;\n                }\n            }\n            dstPixelOffset += dstImage.bytesPerPixel;\n        }\n        dstRowOffset += dstImage.bytesPerLine;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/affine.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/desaturate.js":
/*!****************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/desaturate.js ***!
  \****************************************************************************/
/*! exports provided: desaturateRGBA, desaturateImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"desaturateRGBA\", function() { return desaturateRGBA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"desaturateImage\", function() { return desaturateImage; });\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n/* harmony import */ var _util_map_colours__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/map-colours */ \"./node_modules/thaw-image-processing.ts/lib/util/map-colours.js\");\n// thaw-image-processing.ts/src/desaturate.ts\n\n\nfunction desaturateRGBA(buffer, offset) {\n    // Assuming that buffer[offset] is the red byte, buffer[offset + 1] is the green byte, and buffer[offset + 2] is the blue byte.\n    const grey = Math.round(buffer[offset] * 0.3 +\n        buffer[offset + 1] * 0.59 +\n        buffer[offset + 2] * 0.11);\n    buffer[offset + 2] = grey;\n    buffer[offset + 1] = grey;\n    buffer[offset] = grey;\n}\nfunction desaturateImage(srcImage) {\n    if (srcImage.colourModel !== _util_image__WEBPACK_IMPORTED_MODULE_0__[\"ColourModel\"].RGBA32) {\n        throw new Error('desaturateImage: Unsupported colour model');\n    }\n    return Object(_util_map_colours__WEBPACK_IMPORTED_MODULE_1__[\"mapColoursInImageFromBuffer\"])(srcImage, desaturateRGBA);\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/desaturate.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/flip.js":
/*!**********************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/flip.js ***!
  \**********************************************************************/
/*! exports provided: flipImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flipImage\", function() { return flipImage; });\n/* harmony import */ var _affine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./affine */ \"./node_modules/thaw-image-processing.ts/lib/processing/affine.js\");\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.ts/src/flip.ts\n// import { IOperationOptions } from './file-types/jpeg';\n\n\nfunction flipImage(srcImage) {\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_1__[\"createThAWImage\"])(srcImage.width, srcImage.height, srcImage.bytesPerPixel);\n    const flipMatrix = Object(_affine__WEBPACK_IMPORTED_MODULE_0__[\"createAffineTransformationMatrix\"])(1, 0, 0, 0, -1, srcImage.height - 1);\n    Object(_affine__WEBPACK_IMPORTED_MODULE_0__[\"doAffineTransformation\"])(dstImage, srcImage, flipMatrix);\n    return dstImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/flip.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/gaussian-blur.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/gaussian-blur.js ***!
  \*******************************************************************************/
/*! exports provided: generateKernel, gaussianBlurImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateKernel\", function() { return generateKernel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gaussianBlurImage\", function() { return gaussianBlurImage; });\n/* harmony import */ var _util_convolve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/convolve */ \"./node_modules/thaw-image-processing.ts/lib/util/convolve.js\");\n/* harmony import */ var _util_sample__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sample */ \"./node_modules/thaw-image-processing.ts/lib/util/sample.js\");\n/* harmony import */ var _util_sample_array_and_weight__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/sample-array-and-weight */ \"./node_modules/thaw-image-processing.ts/lib/util/sample-array-and-weight.js\");\n// thaw-image-processing.ts/src/gaussian-blur.ts\n\n\n\nfunction gaussianDistribution(x, mu, sigma) {\n    const d = x - mu;\n    const n = 1.0 / (Math.sqrt(2 * Math.PI) * sigma);\n    return Math.exp((-d * d) / (2 * sigma * sigma)) * n;\n}\nfunction sampleInterval(f, minInclusive, maxInclusive, sampleCount) {\n    const result = [];\n    const stepSize = (maxInclusive - minInclusive) / (sampleCount - 1);\n    for (let s = 0; s < sampleCount; ++s) {\n        const x = minInclusive + s * stepSize;\n        const y = f(x);\n        result.push(new _util_sample__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y));\n    }\n    return result;\n}\nfunction integrateSimpson(samples) {\n    let result = samples[0].sampleValueAtX +\n        samples[samples.length - 1].sampleValueAtX;\n    for (let s = 1; s < samples.length - 1; ++s) {\n        const sampleWeight = s % 2 === 0 ? 2.0 : 4.0;\n        result += sampleWeight * samples[s].sampleValueAtX;\n    }\n    const h = (samples[samples.length - 1].x - samples[0].x) / (samples.length - 1);\n    return (result * h) / 3.0;\n}\nfunction roundTo6DecimalPlaces(n) {\n    return Math.round(n * 1000000) / 1000000;\n}\nfunction generateKernel(sigma, kernelSize) {\n    // sigma must be a positive number.\n    // kernelSize must be an odd positive integer smaller than 999.\n    const sampleCount = 1000.0;\n    let samplesPerBin = Math.ceil(sampleCount / kernelSize);\n    if (samplesPerBin % 2 === 0) {\n        // need an even number of intervals for Simpson integration => odd number of samples\n        ++samplesPerBin;\n    }\n    let weightSum = 0;\n    const kernelLeft = -Math.floor(kernelSize / 2);\n    const calcSamplesForRange = (minInclusive, maxInclusive) => {\n        return sampleInterval((x) => gaussianDistribution(x, 0, sigma), minInclusive, maxInclusive, samplesPerBin);\n    };\n    // Get samples left and right of kernel support first\n    const outsideSamplesLeft = calcSamplesForRange(-5 * sigma, kernelLeft - 0.5);\n    const outsideSamplesRight = calcSamplesForRange(-kernelLeft + 0.5, 5 * sigma);\n    const allSamples = [\n        new _util_sample_array_and_weight__WEBPACK_IMPORTED_MODULE_2__[\"default\"](outsideSamplesLeft, 0)\n    ];\n    // Now, sample kernel taps and calculate tap weights\n    for (let tap = 0; tap < kernelSize; ++tap) {\n        const left = kernelLeft - 0.5 + tap;\n        const tapSamples = calcSamplesForRange(left, left + 1);\n        const tapWeight = integrateSimpson(tapSamples);\n        allSamples.push(new _util_sample_array_and_weight__WEBPACK_IMPORTED_MODULE_2__[\"default\"](tapSamples, tapWeight));\n        weightSum += tapWeight;\n    }\n    allSamples.push(new _util_sample_array_and_weight__WEBPACK_IMPORTED_MODULE_2__[\"default\"](outsideSamplesRight, 0));\n    // Renormalize the kernel and round its entries to 6 decimal places.\n    const result = [];\n    for (let i = 1; i < allSamples.length - 1; ++i) {\n        result.push(roundTo6DecimalPlaces(allSamples[i].weight / weightSum));\n    }\n    return result;\n}\nfunction gaussianBlurImage(srcImage, sigma, kernelSize) {\n    const kernel = generateKernel(sigma, kernelSize);\n    return Object(_util_convolve__WEBPACK_IMPORTED_MODULE_0__[\"convolveImageFromBuffer\"])(srcImage, kernel);\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/gaussian-blur.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/mirror.js":
/*!************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/mirror.js ***!
  \************************************************************************/
/*! exports provided: mirrorImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mirrorImage\", function() { return mirrorImage; });\n/* harmony import */ var _affine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./affine */ \"./node_modules/thaw-image-processing.ts/lib/processing/affine.js\");\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.ts/src/mirror.ts\n// import { IOperationOptio../util/imagens } from './file-types/jpeg';\n\n\nfunction mirrorImage(srcImage) {\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_1__[\"createThAWImage\"])(srcImage.width, srcImage.height, srcImage.bytesPerPixel);\n    const mirrorMatrix = Object(_affine__WEBPACK_IMPORTED_MODULE_0__[\"createAffineTransformationMatrix\"])(-1, 0, srcImage.width - 1, 0, 1, 0);\n    Object(_affine__WEBPACK_IMPORTED_MODULE_0__[\"doAffineTransformation\"])(dstImage, srcImage, mirrorMatrix);\n    return dstImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/mirror.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/pixelate.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/pixelate.js ***!
  \**************************************************************************/
/*! exports provided: pixelateImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pixelateImage\", function() { return pixelateImage; });\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.ts/src/pixelate.ts\n/* eslint-disable no-fallthrough */\n\nfunction pixelateImage(srcImage, pixelWidth, pixelHeight) {\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(srcImage.width, srcImage.height, srcImage.bytesPerPixel);\n    let dstRowOffset = 0;\n    let srcRowOffset = 0;\n    if (pixelHeight === undefined) {\n        pixelHeight = pixelWidth;\n    }\n    for (let row = 0; row < srcImage.height; row += pixelHeight) {\n        const thisPixelHeight = Math.min(pixelHeight, srcImage.height - row);\n        let dstPixelOffset = dstRowOffset;\n        let srcPixelOffset = srcRowOffset;\n        for (let col = 0; col < srcImage.width; col += pixelWidth) {\n            const thisPixelWidth = Math.min(pixelWidth, srcImage.width - col);\n            let accumulator3 = 0;\n            let accumulator2 = 0;\n            let accumulator1 = 0;\n            let accumulator0 = 0;\n            let srcRowOffset2 = srcPixelOffset;\n            for (let row2 = 0; row2 < thisPixelHeight; row2++) {\n                let srcPixelOffset2 = srcRowOffset2;\n                for (let col2 = 0; col2 < thisPixelWidth; col2++) {\n                    switch (srcImage.bytesPerPixel) {\n                        case 4:\n                            accumulator3 +=\n                                srcImage.data[srcPixelOffset2 + 3];\n                        case 3:\n                            accumulator2 +=\n                                srcImage.data[srcPixelOffset2 + 2];\n                            accumulator1 +=\n                                srcImage.data[srcPixelOffset2 + 1];\n                        case 1:\n                            accumulator0 +=\n                                srcImage.data[srcPixelOffset2 + 0];\n                        default:\n                            break;\n                    }\n                    srcPixelOffset2 += srcImage.bytesPerPixel;\n                }\n                srcRowOffset2 += srcImage.bytesPerLine;\n            }\n            const numPixelsInThisPixel = thisPixelWidth * thisPixelHeight;\n            const result3 = Math.round(accumulator3 / numPixelsInThisPixel);\n            const result2 = Math.round(accumulator2 / numPixelsInThisPixel);\n            const result1 = Math.round(accumulator1 / numPixelsInThisPixel);\n            const result0 = Math.round(accumulator0 / numPixelsInThisPixel);\n            let dstRowOffset2 = dstPixelOffset;\n            for (let row2 = 0; row2 < thisPixelHeight; row2++) {\n                let dstPixelOffset2 = dstRowOffset2;\n                for (let col2 = 0; col2 < thisPixelWidth; col2++) {\n                    switch (srcImage.bytesPerPixel) {\n                        case 4:\n                            dstImage.data[dstPixelOffset2 + 3] = result3;\n                        case 3:\n                            dstImage.data[dstPixelOffset2 + 2] = result2;\n                            dstImage.data[dstPixelOffset2 + 1] = result1;\n                        case 1:\n                            dstImage.data[dstPixelOffset2 + 0] = result0;\n                        default:\n                            break;\n                    }\n                    dstPixelOffset2 += dstImage.bytesPerPixel;\n                }\n                dstRowOffset2 += dstImage.bytesPerLine;\n            }\n            dstPixelOffset += dstImage.bytesPerPixel * pixelWidth;\n            srcPixelOffset += srcImage.bytesPerPixel * pixelWidth;\n        }\n        dstRowOffset += dstImage.bytesPerLine * pixelHeight;\n        srcRowOffset += srcImage.bytesPerLine * pixelHeight;\n    }\n    return dstImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/pixelate.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/resample.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/resample.js ***!
  \**************************************************************************/
/*! exports provided: ResamplingMode, resampleImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResamplingMode\", function() { return ResamplingMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resampleImage\", function() { return resampleImage; });\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.ts/src/resample.ts\n// See http://entropymine.com/imageworsener/bicubic/ :\n// Cubic resampling\n// Broadly speaking, cubic resampling means little more than \"any algorithm in which the most sophisticated mathematical operation is to take the cube of a number\".\n// More strictly, we only consider cubic filters which have a certain maximum width (a radius of 2), and which are symmetric, unbiased, continuous and smooth, etc. Fortunately, there are only a limited number of filters which meet all the requirements. In a 1988 paper, Mitchell and Netravali showed that, given these constraints, there are only two free parameters remaining, which are usually named B and C. Here’s the general formula for this entire family of cubic filters:\n// k(x) = (1/6) * (12 - 9B - 6C) * |x|^3 + (-18 + 12B + 6C) * |x|^2                      + (6 - 2B)\t\t\tif |x| < 1\n// k(x) = (1/6) * (-B - 6C)      * |x|^3 + (6B + 30C)       * |x|^2 + (-12B - 48C) * |x| + (8B + 24C)\t\tif 1 <= |x| < 2\n// k(x) = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\totherwise\n// So, we have a two-dimensional space containing all the interesting cubic resampling algorithms. I will use the notation cubic(B,C) to refer to a specific algorithm in this space.\n// The cubics for which C=0 are called the \"B-spline\" cubics. They are the ones that do not produce any ringing artifacts. If \"B-spline\" is used to refer to a specific algorithm, it means cubic(1,0).\n// The cubics for which B=0 are known as the cardinal cubics. They are the ones that do not have any inherent blurring. By that, I mean if you apply a cardinal cubic to an image without changing the image size, it will leave the image pixels completely unchanged.\n// The contenders\n// 1. B-spline\n// In some applications, \"bicubic\" means cubic(1,0). Other applications don’t call this filter \"bicubic\", and instead use the less-ambiguous name \"B-spline.\" Though it’s sometimes useful, it’s very blurry, so it’s usually not the best choice.\n// 2. Mitchell\n// It’s also common for \"bicubic\" to be a Mitchell filter, which is cubic(1/3,1/3).\n// 3. Catmull-Rom\n// Some applications use a Catmull-Rom filter when you ask for \"bicubic\". This is cubic(0,1/2).\n// 4. Unnamed cardinal cubic (0.75)\n// I’ve only seen one application that uses cubic(0, 0.75), but it’s a popular application, so I include it in this list. It’s not clear to me why one would choose this over Catmull-Rom.\n// 5. Unnamed cardinal cubic (1.0)\n// I’ve seen several applications and code samples in which \"bicubic\" is cubic(0, 1). If this filter has a common name, I’m not aware of it. This is a rather poor filter, so when I see it implemented, I tend to assume that it was selected by someone who didn’t realize there were other options.\n// ****\n/* eslint-disable no-fallthrough */\n// ThAW 2020-11-17 : BUG in bicubic upsampling? Investigate.\n\nvar ResamplingMode;\n(function (ResamplingMode) {\n    ResamplingMode[ResamplingMode[\"NearestNeighbour\"] = 0] = \"NearestNeighbour\";\n    ResamplingMode[ResamplingMode[\"Bilinear\"] = 1] = \"Bilinear\";\n    ResamplingMode[ResamplingMode[\"Bicubic\"] = 2] = \"Bicubic\";\n})(ResamplingMode || (ResamplingMode = {}));\nfunction resample1DNearestNeighbour(dstBuffer, dstInitialOffset, numDstPixels, dstPixelStride, srcBuffer, srcInitialOffset, numSrcPixels, srcPixelStride, numBytesPerPixel) {\n    let accumulator = 0;\n    for (let dstPixelIndex = 0; dstPixelIndex < numDstPixels; dstPixelIndex++) {\n        const srcPixelIndex = Math.trunc(accumulator / numDstPixels) * srcPixelStride +\n            srcInitialOffset; // We need a truncating integer division operator.\n        switch (numBytesPerPixel) {\n            case 4:\n                dstBuffer[dstInitialOffset + 3] =\n                    srcBuffer[srcPixelIndex + 3];\n            case 3:\n                dstBuffer[dstInitialOffset + 2] =\n                    srcBuffer[srcPixelIndex + 2];\n                dstBuffer[dstInitialOffset + 1] =\n                    srcBuffer[srcPixelIndex + 1];\n            case 1:\n                dstBuffer[dstInitialOffset] = srcBuffer[srcPixelIndex];\n            default:\n                break;\n        }\n        dstInitialOffset += dstPixelStride;\n        accumulator += numSrcPixels;\n    }\n}\nfunction resample1DBilinear(dstBuffer, dstInitialOffset, numDstPixels, dstPixelStride, srcBuffer, srcInitialOffset, numSrcPixels, srcPixelStride, numBytesPerPixel) {\n    let accumulator = 0;\n    for (let dstPixelIndex = 0; dstPixelIndex < numDstPixels; dstPixelIndex++) {\n        const srcPixelIndexInRun = Math.trunc(accumulator / numDstPixels);\n        const srcPixelIndex = srcPixelIndexInRun * srcPixelStride + srcInitialOffset; // We need a truncating integer division operator.\n        if (srcPixelIndexInRun >= numSrcPixels - 1) {\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstInitialOffset + 3] =\n                        srcBuffer[srcPixelIndex + 3];\n                case 3:\n                    dstBuffer[dstInitialOffset + 2] =\n                        srcBuffer[srcPixelIndex + 2];\n                    dstBuffer[dstInitialOffset + 1] =\n                        srcBuffer[srcPixelIndex + 1];\n                case 1:\n                    dstBuffer[dstInitialOffset] = srcBuffer[srcPixelIndex];\n                default:\n                    break;\n            }\n        }\n        else {\n            const srcPixelIndex2 = (srcPixelIndexInRun + 1) * srcPixelStride + srcInitialOffset; // We need a truncating integer division operator.\n            const remainder = accumulator - srcPixelIndexInRun * numDstPixels;\n            const weight1 = numDstPixels - remainder;\n            const weight2 = remainder;\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstInitialOffset + 3] =\n                        (srcBuffer[srcPixelIndex + 3] * weight1 +\n                            srcBuffer[srcPixelIndex2 + 3] * weight2) /\n                            numDstPixels;\n                case 3:\n                    dstBuffer[dstInitialOffset + 2] =\n                        (srcBuffer[srcPixelIndex + 2] * weight1 +\n                            srcBuffer[srcPixelIndex2 + 2] * weight2) /\n                            numDstPixels;\n                    dstBuffer[dstInitialOffset + 1] =\n                        (srcBuffer[srcPixelIndex + 1] * weight1 +\n                            srcBuffer[srcPixelIndex2 + 1] * weight2) /\n                            numDstPixels;\n                case 1:\n                    dstBuffer[dstInitialOffset] =\n                        (srcBuffer[srcPixelIndex] * weight1 +\n                            srcBuffer[srcPixelIndex2] * weight2) /\n                            numDstPixels;\n                default:\n                    break;\n            }\n        }\n        dstInitialOffset += dstPixelStride;\n        accumulator += numSrcPixels;\n    }\n}\nfunction generateCubicWeightFunction(B, C) {\n    return (x) => {\n        x = Math.abs(x);\n        if (x < 1) {\n            // k(x) = (1/6) * (12 - 9B - 6C) * |x|^3 + (-18 + 12B + 6C) * |x|^2                      + (6 - 2B)\t\t\tif |x| < 1\n            return ((((12 - 9 * B - 6 * C) * x + (-18 + 12 * B + 6 * C)) * x * x +\n                6 -\n                2 * B) /\n                6);\n        }\n        else if (x < 2) {\n            // k(x) = (1/6) * (-B - 6C)      * |x|^3 + (6B + 30C)       * |x|^2 + (-12B - 48C) * |x| + (8B + 24C)\t\tif 1 <= |x| < 2\n            //return (((((-B - 6 * C) * x) + (6 * B + 30 * C) * x) - (12 * B + 48 * C) * x) + 8 * B + 24 * C) / 6;\n            return (((-B - 6 * C) * x +\n                (6 * B + 30 * C) * x -\n                (12 * B + 48 * C) * x +\n                8 * B +\n                24 * C) /\n                6);\n        }\n        else {\n            // k(x) = 0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\totherwise\n            return 0;\n        }\n    };\n}\n// const getBicubicWeight = generateCubicWeightFunction(1, 0);\t\t\t\t// B-spline\n// const getBicubicWeight = generateCubicWeightFunction(1 / 3, 1 / 3);\t\t// Mitchell\nconst getBicubicWeight = generateCubicWeightFunction(0, 0.5); // Catmull-Rom\nfunction resample1DBicubic(dstBuffer, dstInitialOffset, numDstPixels, dstPixelStride, srcBuffer, srcInitialOffset, numSrcPixels, srcPixelStride, numBytesPerPixel) {\n    let dstPixelOffsetInBuffer = dstInitialOffset;\n    let accumulator = 0;\n    for (let dstPixelIndex = 0; dstPixelIndex < numDstPixels; dstPixelIndex++) {\n        const dstPixelIndexInSrcSpace = accumulator / numDstPixels;\n        const srcPixelIndex = Math.trunc(dstPixelIndexInSrcSpace);\n        const firstSrcPixelIndex = Math.max(srcPixelIndex - 1, 0);\n        const lastSrcPixelIndex = Math.min(srcPixelIndex + 2, numSrcPixels - 1);\n        let accumulator3 = 0;\n        let accumulator2 = 0;\n        let accumulator1 = 0;\n        let accumulator0 = 0;\n        let totalWeight = 0;\n        let srcPixelOffsetInBuffer = firstSrcPixelIndex * srcPixelStride + srcInitialOffset; // We need a truncating integer division operator.\n        for (let srcPixelIndexInRun = firstSrcPixelIndex; srcPixelIndexInRun <= lastSrcPixelIndex; srcPixelIndexInRun++) {\n            //const srcPixelWeight = getBicubicWeight(srcPixelIndexInRun - dstPixelIndexInSrcSpace);\n            const srcPixelWeight = getBicubicWeight(((srcPixelIndex - dstPixelIndexInSrcSpace) * numDstPixels) /\n                numSrcPixels);\n            switch (numBytesPerPixel) {\n                case 4:\n                    accumulator3 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 3] *\n                            srcPixelWeight;\n                case 3:\n                    accumulator2 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 2] *\n                            srcPixelWeight;\n                    accumulator1 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 1] *\n                            srcPixelWeight;\n                case 1:\n                    accumulator0 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 0] *\n                            srcPixelWeight;\n                default:\n                    break;\n            }\n            totalWeight += srcPixelWeight;\n            srcPixelOffsetInBuffer += srcPixelStride;\n        }\n        if (totalWeight > 0) {\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffsetInBuffer + 3] =\n                        accumulator3 / totalWeight; // Or * inverseOfTotalWeight;\n                case 3:\n                    dstBuffer[dstPixelOffsetInBuffer + 2] =\n                        accumulator2 / totalWeight;\n                    dstBuffer[dstPixelOffsetInBuffer + 1] =\n                        accumulator1 / totalWeight;\n                case 1:\n                    dstBuffer[dstPixelOffsetInBuffer + 0] =\n                        accumulator0 / totalWeight;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffsetInBuffer + 3] = 0;\n                case 3:\n                    dstBuffer[dstPixelOffsetInBuffer + 2] = 0;\n                    dstBuffer[dstPixelOffsetInBuffer + 1] = 0;\n                case 1:\n                    dstBuffer[dstPixelOffsetInBuffer + 0] = 0;\n                default:\n                    break;\n            }\n        }\n        dstPixelOffsetInBuffer += dstPixelStride;\n        accumulator += numSrcPixels;\n    }\n}\nfunction get1DResamplingFunction(mode) {\n    switch (mode) {\n        case ResamplingMode.NearestNeighbour:\n            return resample1DNearestNeighbour;\n        case ResamplingMode.Bilinear:\n            return resample1DBilinear;\n        case ResamplingMode.Bicubic:\n            return resample1DBicubic;\n        default:\n            throw new Error(`get1DResamplingFunction: Unsupported ResamplingMode '${mode}'`);\n    }\n}\nfunction resampleImage(srcImage, dstWidth, dstHeight, mode) {\n    const fn1DResamplingFunction = get1DResamplingFunction(mode);\n    const numBytesPerPixel = srcImage.bytesPerPixel;\n    const intermediateImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(dstWidth, srcImage.height, numBytesPerPixel);\n    // 1) Resample horizontally from srcBuffer to intermediateBuffer\n    for (let row = 0; row < srcImage.height; row++) {\n        fn1DResamplingFunction(intermediateImage.data, row * intermediateImage.bytesPerLine, intermediateImage.width, numBytesPerPixel, srcImage.data, row * srcImage.bytesPerLine, srcImage.width, numBytesPerPixel, numBytesPerPixel);\n    }\n    // 2) Resample vertically from intermediateBuffer to dstBuffer\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(dstWidth, dstHeight, numBytesPerPixel);\n    for (let col = 0; col < intermediateImage.width; col++) {\n        fn1DResamplingFunction(dstImage.data, col * numBytesPerPixel, dstHeight, dstImage.bytesPerLine, intermediateImage.data, col * numBytesPerPixel, intermediateImage.height, intermediateImage.bytesPerLine, numBytesPerPixel);\n    }\n    return dstImage;\n}\n// Stretching in context:\n// There are three intervals in dest pixel space to be aware of:\n// 1) The dest interval to be rendered.\n// 2) The extent of the dest image. Do not write outside of this interval. Use this interval to crop interval #1.\n// 3) The dest context.\n// There are two intervals in src pixel space to be aware of:\n// 4) The extent of the src image. Do not read outside of this interval.\n// 5) The src context.\n/*\nfunction resampleInContext1DBicubic(\n    dstBuffer,\n    dstPixelOffsetInBuffer,\n    dstPixelStride,\n    dstRegionToRenderStart, dstRegionToRenderLength,\n    dstContextStart, dstContextLength,\n    srcBuffer,\n    srcInitialOffset,\n    srcPixelStride,\n    numSrcPixels,\t\t// We can safely read the src pixels with indices 0 <= i < numSrcPixels\n    srcContextStart, srcContextLength,\n    numBytesPerPixel) {\n\n    let accumulator = (dstRegionToRenderStart - dstContextStart) * srcContextLength;\n\n    dstPixelOffsetInBuffer += dstRegionToRenderStart * dstPixelStride;\n\n    for (let dstPixelCounter = 0; dstPixelCounter < dstRegionToRenderLength; dstPixelCounter++) {\n        const dstPixelIndexInSrcSpace = accumulator / dstContextLength + srcContextStart;\n        const srcPixelIndex = Math.trunc(dstPixelIndexInSrcSpace);\n        let firstSrcPixelIndex = Math.max(srcPixelIndex - 1, 0);\n        let lastSrcPixelIndex = Math.min(srcPixelIndex + 2, numSrcPixels - 1);\n        let accumulator3 = 0;\n        let accumulator2 = 0;\n        let accumulator1 = 0;\n        let accumulator0 = 0;\n        let totalWeight = 0;\n        let srcPixelOffsetInBuffer = (firstSrcPixelIndex * srcPixelStride) + srcInitialOffset;\t\t// We need a truncating integer division operator.\n\n        for (let srcPixelIndexInRun = firstSrcPixelIndex; srcPixelIndexInRun <= lastSrcPixelIndex; srcPixelIndexInRun++) {\n            //const srcPixelWeight = getBicubicWeight(srcPixelIndexInRun - dstPixelIndexInSrcSpace);\n            const srcPixelWeight = getBicubicWeight((srcPixelIndexInRun - dstPixelIndexInSrcSpace) * dstContextLength / srcContextLength);\n\n            switch (numBytesPerPixel) {\n                case 4:\n                    accumulator3 += srcBuffer[srcPixelOffsetInBuffer + 3] * srcPixelWeight;\n                case 3:\n                    accumulator2 += srcBuffer[srcPixelOffsetInBuffer + 2] * srcPixelWeight;\n                    accumulator1 += srcBuffer[srcPixelOffsetInBuffer + 1] * srcPixelWeight;\n                case 1:\n                    accumulator0 += srcBuffer[srcPixelOffsetInBuffer + 0] * srcPixelWeight;\n                default:\n                    break;\n            }\n\n            totalWeight += srcPixelWeight;\n            srcPixelOffsetInBuffer += srcPixelStride;\n        }\n\n        if (totalWeight > 0) {\n\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffsetInBuffer + 3] = accumulator3 / totalWeight; // Or * inverseOfTotalWeight;\n                case 3:\n                    dstBuffer[dstPixelOffsetInBuffer + 2] = accumulator2 / totalWeight;\n                    dstBuffer[dstPixelOffsetInBuffer + 1] = accumulator1 / totalWeight;\n                case 1:\n                    dstBuffer[dstPixelOffsetInBuffer + 0] = accumulator0 / totalWeight;\n                default:\n                    break;\n            }\n        } else {\n\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffsetInBuffer + 3] = 0;\n                case 3:\n                    dstBuffer[dstPixelOffsetInBuffer + 2] = 0;\n                    dstBuffer[dstPixelOffsetInBuffer + 1] = 0;\n                case 1:\n                    dstBuffer[dstPixelOffsetInBuffer + 0] = 0;\n                default:\n                    break;\n            }\n        }\n\n        dstPixelOffsetInBuffer += dstPixelStride;\n        accumulator += numSrcPixels;\n    }\n}\n\nfunction resampleImageInContextFromBuffer(\n    srcImage,\n    srcContextLeft, srcContextWidth, srcContextBottom (or Top?), srcContextHeight,\n    dstBuffer,\t// May be null or undefined; or an existing buffer may be provided.\n    dstWidth, dstHeight,\n    dstRegionToRenderLeft, dstRegionToRenderWidth, dstRegionToRenderBottom (or Top?), dstRegionToRenderHeight,\n    dstContextLeft, dstContextWidth, dstContextBottom (or Top?), dstContextHeight,\n    mode) {\n\n    // **** The code below this line has not yet been modified ****\n\n    const fn1DResamplingFunction = resampleInContext1DBicubic;\n    // const fn1DResamplingFunction = get1DResamplingFunction(mode);\n\n    // if (!fn1DResamplingFunction) {\n        // console.error('No resampling function for mode', mode);\n        // return undefined;\n    // }\n\n    const numBytesPerPixel = 4;\t// Assume that the pixel format is RGBA.\n\n    const srcWidth = srcImage.width;\n    const srcHeight = srcImage.height;\n    const srcBytesPerLine = srcWidth * numBytesPerPixel;\n    const srcBuffer = srcImage.data;\n\n    const intermediateWidth = dstWidth;\n    const intermediateHeight = srcHeight;\n    const intermediateBytesPerLine = dstWidth * numBytesPerPixel;\n    const intermediateBuffer = Buffer.alloc(intermediateHeight * intermediateBytesPerLine);\n\n    const dstBytesPerLine = intermediateBytesPerLine;\n    const dstBuffer = Buffer.alloc(dstHeight * dstBytesPerLine);\n\n    // TODO TomW 2018-04-14 : Decide what the intermediate image is supposed to contain when we are stretching in context. I.e. The first for loop below probably shouldn't be using srcHeight; instead, only use as much of the src image as we will need.\n\n    // 1) Resample horizontally from srcBuffer to intermediateBuffer\n\n    for (let row = 0; row < srcHeight; row++) {\n        fn1DResamplingFunction(\n            intermediateBuffer,\n            row * intermediateBytesPerLine,\t\t// dstPixelOffsetInBuffer,\n            numBytesPerPixel,\t\t\t\t\t// dstPixelStride,\n            0, intermediateWidth,\t\t\t\t// dstRegionToRenderStart, dstRegionToRenderLength,\n            dstContextLeft, dstContextWidth,\t// dstContextStart, dstContextLength,\n            srcBuffer,\n            row * srcBytesPerLine,\t\t\t\t// srcInitialOffset,\n            numBytesPerPixel,\t\t\t\t\t// srcPixelStride,\n            srcWidth,\t\t\t\t\t\t\t// numSrcPixels,\t\t// We can safely read the src pixels with indices 0 <= i < numSrcPixels\n            srcContextLeft, srcContextWidth,\t// srcContextStart, srcContextLength,\n            numBytesPerPixel);\n\n        // intermediateBuffer, row * intermediateBytesPerLine, intermediateWidth, numBytesPerPixel, srcBuffer, row * srcBytesPerLine, srcWidth, numBytesPerPixel, numBytesPerPixel);\n    }\n\n    // 2) Resample vertically from intermediateBuffer to dstBuffer\n\n    for (let col = 0; col < intermediateWidth; col++) {\n        fn1DResamplingFunction(\n            dstBuffer,\n            col * numBytesPerPixel,\t\t\t\t// dstPixelOffsetInBuffer,\n            dstBytesPerLine,\t\t\t\t\t// dstPixelStride,\n            0, dstHeight,\t\t\t\t\t\t// dstRegionToRenderStart, dstRegionToRenderLength,\n            dstRegionToRenderBottom, dstRegionToRenderHeight,\t// dstContextStart, dstContextLength,\n            intermediateBuffer,\n            col * numBytesPerPixel,\t\t\t\t// srcInitialOffset,\n            intermediateBytesPerLine,\t\t\t// srcPixelStride,\n            intermediateHeight,\t\t\t\t\t// numSrcPixels,\t\t// We can safely read the src pixels with indices 0 <= i < numSrcPixels\n            srcRegionToRenderBottom, srcRegionToRenderHeight,\t// srcContextStart, srcContextLength,\n            numBytesPerPixel);\n\n            // dstBuffer, col * numBytesPerPixel, dstHeight, dstBytesPerLine, intermediateBuffer, col * numBytesPerPixel, intermediateHeight, intermediateBytesPerLine, numBytesPerPixel);\n    }\n\n    return {\n        width: dstWidth,\n        height: dstHeight,\n        data: dstBuffer\n    };\n}\n*/\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/resample.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/processing/rotate.js":
/*!************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/processing/rotate.js ***!
  \************************************************************************/
/*! exports provided: rotate90DegreesClockwiseFromImage, rotate90DegreesCounterclockwiseFromImage, rotate180DegreesFromImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate90DegreesClockwiseFromImage\", function() { return rotate90DegreesClockwiseFromImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate90DegreesCounterclockwiseFromImage\", function() { return rotate90DegreesCounterclockwiseFromImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate180DegreesFromImage\", function() { return rotate180DegreesFromImage; });\n/* harmony import */ var _util_map_coordinates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/map-coordinates */ \"./node_modules/thaw-image-processing.ts/lib/util/map-coordinates.js\");\n/* harmony import */ var _util_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.ts/src/rotate.ts\n\n\nfunction rotate90DegreesClockwiseFromImage(srcImage) {\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_1__[\"createThAWImage\"])(srcImage.height, srcImage.width, srcImage.bytesPerPixel);\n    Object(_util_map_coordinates__WEBPACK_IMPORTED_MODULE_0__[\"mapImageByCoordinatesFromBuffer\"])(dstImage.data, dstImage.width, dstImage.height, 0, dstImage.bytesPerLine, dstImage.bytesPerPixel, srcImage.data, (srcImage.height - 1) * srcImage.bytesPerLine, srcImage.bytesPerPixel, -srcImage.bytesPerLine, srcImage.bytesPerPixel);\n    return dstImage;\n}\nfunction rotate90DegreesCounterclockwiseFromImage(srcImage) {\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_1__[\"createThAWImage\"])(srcImage.height, srcImage.width, srcImage.bytesPerPixel);\n    Object(_util_map_coordinates__WEBPACK_IMPORTED_MODULE_0__[\"mapImageByCoordinatesFromBuffer\"])(dstImage.data, dstImage.width, dstImage.height, 0, dstImage.bytesPerLine, dstImage.bytesPerPixel, srcImage.data, (srcImage.width - 1) * srcImage.bytesPerPixel, -srcImage.bytesPerPixel, srcImage.bytesPerLine, srcImage.bytesPerPixel);\n    return dstImage;\n}\nfunction rotate180DegreesFromImage(srcImage) {\n    const dstImage = Object(_util_image__WEBPACK_IMPORTED_MODULE_1__[\"createThAWImage\"])(srcImage.width, srcImage.height, srcImage.bytesPerPixel);\n    Object(_util_map_coordinates__WEBPACK_IMPORTED_MODULE_0__[\"mapImageByCoordinatesFromBuffer\"])(dstImage.data, dstImage.width, dstImage.height, 0, dstImage.bytesPerLine, dstImage.bytesPerPixel, srcImage.data, (srcImage.height - 1) * srcImage.bytesPerLine +\n        (srcImage.width - 1) * srcImage.bytesPerPixel, -srcImage.bytesPerLine, -srcImage.bytesPerPixel, srcImage.bytesPerPixel);\n    return dstImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/processing/rotate.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/composite.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/composite.js ***!
  \*********************************************************************/
/*! exports provided: generateTestImage_SingleRGBAColour, generateTestImage_GreyscaleGradient, compositeImageFromBuffers, compositeTest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateTestImage_SingleRGBAColour\", function() { return generateTestImage_SingleRGBAColour; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateTestImage_GreyscaleGradient\", function() { return generateTestImage_GreyscaleGradient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compositeImageFromBuffers\", function() { return compositeImageFromBuffers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compositeTest\", function() { return compositeTest; });\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.js/src/composite.ts\n/* eslint-disable no-fallthrough */\n\n// typedef CreateImage(width: number, height: number, bytesPerPixel: number, bytesPerLine: number, data: Buffer): IThAWImage;\n// export function generateTestImage_SingleRGBAColour (width, height, red, green, blue, alpha, fnCreateImage) {\nfunction generateTestImage_SingleRGBAColour(width, height, red, green, blue, alpha) {\n    // const image = fnCreateImage(width, height, 4);\n    const image = Object(_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(width, height, 4);\n    const buffer = image.data;\n    let rowOffset = 0;\n    for (let row = 0; row < image.height; row++) {\n        let pixelOffset = rowOffset;\n        for (let col = 0; col < image.width; col++) {\n            buffer[pixelOffset + 3] = alpha;\n            buffer[pixelOffset + 2] = blue;\n            buffer[pixelOffset + 1] = green;\n            buffer[pixelOffset + 0] = red;\n            pixelOffset += image.bytesPerPixel;\n        }\n        rowOffset += image.bytesPerLine;\n    }\n    return image;\n}\n/*\nfunction generateTestImage_RedGreenGradient (width, height, fnCreateImage) {\n    const image = fnCreateImage(width, height, 4);\n    const buffer = image.data;\n    let rowOffset = 0;\n\n    for (let row = 0; row < image.height; row++) {\n        let pixelOffset = rowOffset;\n        const green = Math.round(row * 255 / (image.height - 1));\n\n        for (let col = 0; col < image.width; col++) {\n            buffer[pixelOffset + 3] = 255;\n            buffer[pixelOffset + 2] = 0;\n            buffer[pixelOffset + 1] = green;\n            buffer[pixelOffset + 0] = Math.round(col * 255 / (image.width - 1));\n            pixelOffset += image.bytesPerPixel;\n        }\n\n        rowOffset += image.bytesPerLine;\n    }\n\n    return image;\n}\n*/\n// export function generateTestImage_GreyscaleGradient (width, height, fnCreateImage): IThAWImage {\nfunction generateTestImage_GreyscaleGradient(width, height) {\n    // const image = fnCreateImage(width, height, 1);\n    const image = Object(_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(width, height, 1);\n    const buffer = image.data;\n    let rowOffset = 0;\n    for (let row = 0; row < image.height; row++) {\n        for (let col = 0; col < image.width; col++) {\n            buffer[rowOffset + col] = Math.round(((row + col) * 255) / (image.height + image.width - 2));\n        }\n        rowOffset += image.bytesPerLine;\n    }\n    return image;\n}\nfunction compositeImageFromBuffers(dstBuffer, dstWidth, dstHeight, dstInitialRowOffset, dstRowStride, dstPixelStride, srcBuffer, srcInitialRowOffset, srcRowStride, srcPixelStride, alphaBuffer, alphaInitialRowOffset, alphaRowStride, alphaPixelStride, numBytesPerPixel) {\n    let dstRowOffset = dstInitialRowOffset;\n    let srcRowOffset = srcInitialRowOffset;\n    let alphaRowOffset = alphaInitialRowOffset;\n    for (let row = 0; row < dstHeight; row++) {\n        let dstPixelOffset = dstRowOffset;\n        let srcPixelOffset = srcRowOffset;\n        let alphaPixelOffset = alphaRowOffset;\n        for (let col = 0; col < dstWidth; col++) {\n            const normalizedAlpha = alphaBuffer[alphaPixelOffset] / 255;\n            const normalizedAlphaComplement = 1 - normalizedAlpha;\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffset + 3] = Math.round(srcBuffer[srcPixelOffset + 3] * normalizedAlpha +\n                        dstBuffer[dstPixelOffset + 3] *\n                            normalizedAlphaComplement);\n                case 3: // eslint-disable-line\n                    dstBuffer[dstPixelOffset + 2] = Math.round(srcBuffer[srcPixelOffset + 2] * normalizedAlpha +\n                        dstBuffer[dstPixelOffset + 2] *\n                            normalizedAlphaComplement);\n                    dstBuffer[dstPixelOffset + 1] = Math.round(srcBuffer[srcPixelOffset + 1] * normalizedAlpha +\n                        dstBuffer[dstPixelOffset + 1] *\n                            normalizedAlphaComplement);\n                case 1: // eslint-disable-line\n                    dstBuffer[dstPixelOffset + 0] = Math.round(srcBuffer[srcPixelOffset + 0] * normalizedAlpha +\n                        dstBuffer[dstPixelOffset + 0] *\n                            normalizedAlphaComplement);\n                default:\n                    // eslint-disable-line\n                    break;\n            }\n            dstPixelOffset += dstPixelStride;\n            srcPixelOffset += srcPixelStride;\n            alphaPixelOffset += alphaPixelStride;\n        }\n        dstRowOffset += dstRowStride;\n        srcRowOffset += srcRowStride;\n        alphaRowOffset += alphaRowStride;\n    }\n}\n// export function compositeTest (srcImage, fnCreateImage) {\nfunction compositeTest(srcImage) {\n    // const dstImage = generateTestImage_RedGreenGradient(srcImage.width, srcImage.height, fnCreateImage);\n    const red = 255;\n    const green = 0;\n    const blue = 0;\n    const alpha = 255;\n    // const dstImage = generateTestImage_SingleRGBAColour(srcImage.width, srcImage.height, red, green, blue, alpha, fnCreateImage);\n    // const alphaImage = generateTestImage_GreyscaleGradient(srcImage.width, srcImage.height, fnCreateImage);\n    const dstImage = generateTestImage_SingleRGBAColour(srcImage.width, srcImage.height, red, green, blue, alpha);\n    const alphaImage = generateTestImage_GreyscaleGradient(srcImage.width, srcImage.height);\n    compositeImageFromBuffers(dstImage.data, dstImage.width, dstImage.height, 0, dstImage.bytesPerLine, dstImage.bytesPerPixel, srcImage.data, 0, srcImage.bytesPerLine, srcImage.bytesPerPixel, alphaImage.data, 0, alphaImage.bytesPerLine, alphaImage.bytesPerPixel, srcImage.bytesPerPixel);\n    return dstImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/composite.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/convolve.js":
/*!********************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/convolve.js ***!
  \********************************************************************/
/*! exports provided: convolveImageFromBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convolveImageFromBuffer\", function() { return convolveImageFromBuffer; });\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// thaw-image-processing.ts/src/convolve.ts\n/* eslint-disable no-fallthrough */\n// import { generateKernel } from './gaussian-blur';\n\nfunction convolve1D(dstBuffer, dstInitialOffset, numDstPixels, dstPixelStride, srcBuffer, srcInitialOffset, numSrcPixels, srcPixelStride, numBytesPerPixel, kernel, kernelOffset) {\n    let dstPixelOffsetInBuffer = dstInitialOffset;\n    for (let dstPixelIndex = 0; dstPixelIndex < numDstPixels; dstPixelIndex++) {\n        const srcPixelIndex = dstPixelIndex;\n        const firstSrcPixelIndex = Math.max(srcPixelIndex - kernelOffset, 0);\n        const lastSrcPixelIndex = Math.min(srcPixelIndex + kernelOffset, numSrcPixels - 1);\n        let accumulator3 = 0;\n        let accumulator2 = 0;\n        let accumulator1 = 0;\n        let accumulator0 = 0;\n        let totalWeight = 0;\n        let srcPixelOffsetInBuffer = firstSrcPixelIndex * srcPixelStride + srcInitialOffset; // We need a truncating integer division operator.\n        for (let srcPixelIndexInRun = firstSrcPixelIndex; srcPixelIndexInRun <= lastSrcPixelIndex; srcPixelIndexInRun++) {\n            const srcPixelWeight = kernel[srcPixelIndexInRun - srcPixelIndex + kernelOffset];\n            switch (numBytesPerPixel) {\n                case 4:\n                    accumulator3 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 3] *\n                            srcPixelWeight;\n                case 3: // eslint-disable-line no-fallthrough\n                    accumulator2 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 2] *\n                            srcPixelWeight;\n                    accumulator1 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 1] *\n                            srcPixelWeight;\n                case 1: // eslint-disable-line\n                    accumulator0 +=\n                        srcBuffer[srcPixelOffsetInBuffer + 0] *\n                            srcPixelWeight;\n                default:\n                    // eslint-disable-line\n                    break;\n            }\n            totalWeight += srcPixelWeight;\n            srcPixelOffsetInBuffer += srcPixelStride;\n        }\n        if (totalWeight > 0) {\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffsetInBuffer + 3] = Math.round(accumulator3 / totalWeight); // Or * inverseOfTotalWeight;\n                case 3: // eslint-disable-line\n                    dstBuffer[dstPixelOffsetInBuffer + 2] = Math.round(accumulator2 / totalWeight);\n                    dstBuffer[dstPixelOffsetInBuffer + 1] = Math.round(accumulator1 / totalWeight);\n                case 1: // eslint-disable-line\n                    dstBuffer[dstPixelOffsetInBuffer + 0] = Math.round(accumulator0 / totalWeight);\n                default:\n                    // eslint-disable-line\n                    break;\n            }\n        }\n        else {\n            console.log('Acc: totalWeight <= 0');\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffsetInBuffer + 3] = 0;\n                case 3: // eslint-disable-line\n                    dstBuffer[dstPixelOffsetInBuffer + 2] = 0;\n                    dstBuffer[dstPixelOffsetInBuffer + 1] = 0;\n                case 1: // eslint-disable-line\n                    dstBuffer[dstPixelOffsetInBuffer + 0] = 0;\n                default:\n                    // eslint-disable-line\n                    break;\n            }\n        }\n        dstPixelOffsetInBuffer += dstPixelStride;\n    }\n}\nfunction convolveImageFromBuffer(srcImage, kernel\n// sigma: number,\n// kernelSize: number /*, fnCreateImage */\n) {\n    // const kernel = generateKernel(sigma, kernelSize);\n    const bytesPerPixel = srcImage.bytesPerPixel;\n    const width = srcImage.width;\n    const height = srcImage.height;\n    // TODO: Use srcBytesPerLine, intermediateBytesPerLine, and dstBytesPerLine instead of bytesPerLine\n    const bytesPerLine = srcImage.bytesPerLine;\n    const srcBuffer = srcImage.data;\n    const intermediateImage = Object(_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(width, height, bytesPerPixel);\n    const intermediateBuffer = intermediateImage.data;\n    const dstImage = Object(_image__WEBPACK_IMPORTED_MODULE_0__[\"createThAWImage\"])(width, height, bytesPerPixel);\n    const dstBuffer = dstImage.data;\n    const kernelOffset = Math.trunc(kernel.length / 2);\n    // Separable convolution: First apply it horizontally, then\n    // apply it vertically.\n    // 1) Convolve horizontally from srcBuffer to intermediateBuffer\n    for (let row = 0; row < height; row++) {\n        convolve1D(intermediateBuffer, row * bytesPerLine, width, bytesPerPixel, srcBuffer, row * bytesPerLine, width, bytesPerPixel, bytesPerPixel, kernel, kernelOffset);\n    }\n    // 2) Convolve vertically from intermediateBuffer to dstBuffer\n    for (let col = 0; col < width; col++) {\n        convolve1D(dstBuffer, col * bytesPerPixel, height, bytesPerLine, intermediateBuffer, col * bytesPerPixel, height, bytesPerLine, bytesPerPixel, kernel, kernelOffset);\n    }\n    return dstImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/convolve.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/file-io.js":
/*!*******************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/file-io.js ***!
  \*******************************************************************/
/*! exports provided: getExtensionFromFilePath, createFileIOManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getExtensionFromFilePath\", function() { return getExtensionFromFilePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createFileIOManager\", function() { return createFileIOManager; });\n/* harmony import */ var jpeg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jpeg-js */ \"./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/index.js\");\n/* harmony import */ var jpeg_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jpeg_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _vivaxy_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vivaxy/png */ \"./node_modules/@vivaxy/png/lib/index.js\");\n/* harmony import */ var _vivaxy_png__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vivaxy_png__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./image */ \"./node_modules/thaw-image-processing.ts/lib/util/image.js\");\n// // thaw-image-processing.ts/src/util/file-io.ts\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nfunction getExtensionFromFilePath(path) {\n    const i = path.toLowerCase().lastIndexOf('.');\n    if (i < 0) {\n        return '';\n    }\n    const extension = path.substring(i + 1);\n    if (extension === 'jpeg') {\n        return 'jpg';\n    }\n    return extension;\n}\n// Return an IThAWImage or a standard ImageData?\nfunction loadFile(fsInjected, path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const extension = getExtensionFromFilePath(path);\n        const srcData = yield fsInjected.promises.readFile(path);\n        let srcImage;\n        switch (extension) {\n            case 'jpg':\n                srcImage = jpeg_js__WEBPACK_IMPORTED_MODULE_0__[\"decode\"](srcData, { useTArray: true });\n                break;\n            case 'png':\n                srcImage = _vivaxy_png__WEBPACK_IMPORTED_MODULE_1__[\"decode\"](srcData);\n                break;\n            default:\n                throw new Error(`loadFile() : Unsupported extension in path '${path}'`);\n        }\n        return Object(_image__WEBPACK_IMPORTED_MODULE_2__[\"createThAWImage\"])(srcImage.width, srcImage.height, undefined, undefined, Uint8ClampedArray.from(srcImage.data));\n    });\n}\nfunction saveFile(fsInjected, image, path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultJpegQuality = 90;\n        const extension = getExtensionFromFilePath(path);\n        let dstData;\n        switch (extension) {\n            case 'jpg':\n                dstData = jpeg_js__WEBPACK_IMPORTED_MODULE_0__[\"encode\"](image, defaultJpegQuality).data;\n                break;\n            case 'png':\n                dstData = _vivaxy_png__WEBPACK_IMPORTED_MODULE_1__[\"encode\"]({\n                    // \tdata: number[],\n                    data: Array.from(image.data),\n                    width: image.width,\n                    height: image.height,\n                    // \tcolorType: COLOR_TYPES,\n                    colorType: 2,\n                    depth: 8,\n                    interlace: 0,\n                    compression: 0,\n                    filter: 0\n                    // , palette?: [number, number, number, number][]\n                });\n                break;\n            default:\n                throw new Error(`saveFile() : Unsupported extension in path '${path}'`);\n        }\n        yield fsInjected.promises.writeFile(path, dstData);\n    });\n}\nfunction createFileIOManager(fsInjected) {\n    // let dstImageQuality = defaultJpegQuality;\n    return {\n        load: (path) => loadFile(fsInjected, path),\n        save: (image, path) => saveFile(fsInjected, image, path)\n        // ,\n        // getDstImageQuality: () => dstImageQuality,\n        // setDstImageQuality: (newDstImageQuality: number) => {\n        // \tif (isLegalJpegImageQuality(newDstImageQuality)) {\n        // \t\tdstImageQuality = newDstImageQuality;\n        // \t}\n        // }\n    };\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/file-io.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/image.js":
/*!*****************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/image.js ***!
  \*****************************************************************/
/*! exports provided: ColourModel, defaultBytesPerPixel, createImageBuffer, createThAWImage, createThAWImageFromImageData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColourModel\", function() { return ColourModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultBytesPerPixel\", function() { return defaultBytesPerPixel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createImageBuffer\", function() { return createImageBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createThAWImage\", function() { return createThAWImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createThAWImageFromImageData\", function() { return createThAWImageFromImageData; });\n/* harmony import */ var thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! thaw-common-utilities.ts */ \"./node_modules/thaw-common-utilities.ts/lib/main.js\");\n// thaw-image-utilities.ts/src/thawimage.ts\n\nvar ColourModel;\n(function (ColourModel) {\n    ColourModel[ColourModel[\"RGBA32\"] = 0] = \"RGBA32\"; // 4 channels * 8 bits per channel\n})(ColourModel || (ColourModel = {}));\nconst defaultBytesPerPixel = 4;\nfunction getAlignedBytesPerLine(rawBytesPerLine) {\n    const byteAlignmentOfLines = 4;\n    // const byteAlignmentOfLines = 8;\n    return (Math.ceil(rawBytesPerLine / byteAlignmentOfLines) *\n        byteAlignmentOfLines);\n}\nfunction createImageBuffer(size) {\n    // return Buffer.alloc(size);\n    // // return Uint8ClampedArray.from(Buffer.alloc(size));\n    return new Uint8ClampedArray(size);\n}\nclass ThAWImage {\n    // constructor(\n    // \twidth: number,\n    // \theight: number,\n    // \toptions: {\n    // \t\tbytesPerPixel?: number;\n    // \t\tbytesPerLine?: number;\n    // \t\tcolourModel?: ColourModel;\n    // \t\tdata?: ThAWImageBufferType;\n    // \t} = {}\n    // ) {\n    // \t...\n    // }\n    constructor(width, height, bytesPerPixel, bytesPerLine, \n    // colourModel?: ColourModel,\n    data) {\n        this.colourModel = ColourModel.RGBA32;\n        if (!Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"isPositiveInteger\"])(width) || !Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"isPositiveInteger\"])(height)) {\n            throw new Error('ThAWImage constructor: width or height is not a positive integer');\n        }\n        if (typeof bytesPerPixel === 'undefined') {\n            bytesPerPixel = defaultBytesPerPixel;\n        }\n        else if (!Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"isPositiveInteger\"])(bytesPerPixel)) {\n            throw new Error('ThAWImage constructor: bytesPerPixel is not a positive integer');\n        }\n        if (typeof bytesPerLine === 'undefined') {\n            bytesPerLine = width * bytesPerPixel;\n        }\n        else if (!Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"isPositiveInteger\"])(bytesPerPixel)) {\n            throw new Error('ThAWImage constructor: bytesPerLine is not a positive integer');\n        }\n        this.width = width;\n        this.height = height;\n        this.bytesPerPixel = bytesPerPixel;\n        this.bytesPerLine = getAlignedBytesPerLine(bytesPerLine);\n        // this.colourModel = colourModel;\n        this.data = Object(thaw_common_utilities_ts__WEBPACK_IMPORTED_MODULE_0__[\"ifDefinedThenElse\"])(data, createImageBuffer(this.bytesPerLine * this.height));\n    }\n    getPixelAsArray(row, column) {\n        const result = [];\n        if (row < 0 ||\n            row >= this.height ||\n            column < 0 ||\n            column >= this.width) {\n            return result;\n        }\n        const offset = row * this.bytesPerLine + column * this.bytesPerPixel;\n        for (let i = 0; i < this.bytesPerPixel; i++) {\n            result.push(this.data[offset + i]);\n        }\n        return result;\n    }\n    // public copy(dstRow: number, dstColumn: number, width: number, height: number, srcImage: IThAWImage, srcRow: number, srcColumn: number): IThAWImage {\n    // \treturn this;\n    // }\n    fill(dstRow, dstColumn, width, height, srcColour) {\n        // Crop the region of interest, if necessary.\n        if (dstRow < 0) {\n            dstRow = 0;\n        }\n        if (dstColumn < 0) {\n            dstColumn = 0;\n        }\n        if (dstColumn + width > this.width) {\n            width = this.width - dstColumn;\n        }\n        if (dstRow + height > this.height) {\n            height = this.height - dstRow;\n        }\n        if (width < 0 ||\n            height < 0 ||\n            srcColour.length < this.bytesPerPixel) {\n            // No-op. Nothing to do.\n            return this;\n        }\n        let rowOffset = dstRow * this.bytesPerLine + dstColumn * this.bytesPerPixel;\n        for (let y = 0; y < height; y++) {\n            let pixelOffset = rowOffset;\n            for (let x = 0; x < width; x++) {\n                for (let i = 0; i < this.bytesPerPixel; i++) {\n                    this.data[pixelOffset + i] = srcColour[i];\n                }\n                pixelOffset += this.bytesPerPixel;\n            }\n            rowOffset += this.bytesPerLine;\n        }\n        return this;\n    }\n}\nfunction createThAWImage(width, height, bytesPerPixel, bytesPerLine, \n// colourModel?: ColourModel,\ndata) {\n    return new ThAWImage(width, height, bytesPerPixel, bytesPerLine, \n    /* colourModel, */ data);\n}\n// export function createThAWImage(\n// \twidth: number,\n// \theight: number,\n// \toptions: {\n// \t\tbytesPerPixel?: number;\n// \t\tbytesPerLine?: number;\n// \t\tcolourModel?: ColourModel;\n// \t\tdata?: ThAWImageBufferType;\n// \t} = {}\n// ): IThAWImage {\n// \treturn new ThAWImage(\n// \t\twidth,\n// \t\theight,\n// \t\toptions\n// \t);\n// }\nfunction createThAWImageFromImageData(imageData) {\n    return new ThAWImage(imageData.width, imageData.height, undefined, undefined, \n    // colourModel,\n    imageData.data);\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/image.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/map-colours.js":
/*!***********************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/map-colours.js ***!
  \***********************************************************************/
/*! exports provided: seeingRedRGBA, mapColoursInImageFromBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"seeingRedRGBA\", function() { return seeingRedRGBA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapColoursInImageFromBuffer\", function() { return mapColoursInImageFromBuffer; });\n// thaw-image-processing.ts/src/map-colours.ts\nfunction seeingRedRGBA(// ColourMapperType\nbuffer, offset) {\n    buffer[offset + 2] = 0;\n    buffer[offset + 1] = 0;\n}\nfunction mapColoursInImageFromBuffer(srcImage, fnMapColours) {\n    const bytesPerPixel = 4; // Assume that the pixel format is RGBA.\n    const width = srcImage.width;\n    const height = srcImage.height;\n    const bytesPerLine = width * bytesPerPixel;\n    const buffer = srcImage.data;\n    let rowOffset = 0;\n    for (let row = 0; row < height; row++) {\n        let pixelOffset = rowOffset;\n        for (let col = 0; col < width; col++) {\n            fnMapColours(buffer, pixelOffset);\n            pixelOffset += bytesPerPixel;\n        }\n        rowOffset += bytesPerLine;\n    }\n    return srcImage;\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/map-colours.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/map-coordinates.js":
/*!***************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/map-coordinates.js ***!
  \***************************************************************************/
/*! exports provided: mapImageByCoordinatesFromBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapImageByCoordinatesFromBuffer\", function() { return mapImageByCoordinatesFromBuffer; });\n// thaw-image-processing.ts/src/map-coordinates.ts\nfunction mapImageByCoordinatesFromBuffer(dstBuffer, dstWidth, dstHeight, dstInitialRowOffset, dstRowStride, dstPixelStride, srcBuffer, srcInitialRowOffset, srcRowStride, srcPixelStride, numBytesPerPixel) {\n    let dstRowOffset = dstInitialRowOffset;\n    let srcRowOffset = srcInitialRowOffset;\n    for (let row = 0; row < dstHeight; row++) {\n        let dstPixelOffset = dstRowOffset;\n        let srcPixelOffset = srcRowOffset;\n        for (let col = 0; col < dstWidth; col++) {\n            switch (numBytesPerPixel) {\n                case 4:\n                    dstBuffer[dstPixelOffset + 3] =\n                        srcBuffer[srcPixelOffset + 3];\n                case 3: // eslint-disable-line\n                    dstBuffer[dstPixelOffset + 2] =\n                        srcBuffer[srcPixelOffset + 2];\n                    dstBuffer[dstPixelOffset + 1] =\n                        srcBuffer[srcPixelOffset + 1];\n                case 1: // eslint-disable-line\n                    dstBuffer[dstPixelOffset + 0] =\n                        srcBuffer[srcPixelOffset + 0];\n                default:\n                    // eslint-disable-line\n                    break;\n            }\n            dstPixelOffset += dstPixelStride;\n            srcPixelOffset += srcPixelStride;\n        }\n        dstRowOffset += dstRowStride;\n        srcRowOffset += srcRowStride;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/map-coordinates.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/sample-array-and-weight.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/sample-array-and-weight.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SampleArrayAndWeight; });\n// thaw-image-processing.ts/src/sample-array-and-weight.ts\nclass SampleArrayAndWeight {\n    constructor(sa, w) {\n        this.sampleArray = sa;\n        this.weight = w;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/sample-array-and-weight.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/lib/util/sample.js":
/*!******************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/lib/util/sample.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Sample; });\n// thaw-image-processing.ts/src/sample.ts\nclass Sample {\n    constructor(x, s) {\n        this.x = x;\n        this.sampleValueAtX = s;\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/lib/util/sample.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var encode = __webpack_require__(/*! ./lib/encoder */ \"./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/encoder.js\"),\n    decode = __webpack_require__(/*! ./lib/decoder */ \"./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/decoder.js\");\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};\n\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/index.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/decoder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/decoder.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar JpegImage = (function jpegImage() {\n  \"use strict\";\n  var dctZigZag = new Int32Array([\n     0,\n     1,  8,\n    16,  9,  2,\n     3, 10, 17, 24,\n    32, 25, 18, 11, 4,\n     5, 12, 19, 26, 33, 40,\n    48, 41, 34, 27, 20, 13,  6,\n     7, 14, 21, 28, 35, 42, 49, 56,\n    57, 50, 43, 36, 29, 22, 15,\n    23, 30, 37, 44, 51, 58,\n    59, 52, 45, 38, 31,\n    39, 46, 53, 60,\n    61, 54, 47,\n    55, 62,\n    63\n  ]);\n\n  var dctCos1  =  4017   // cos(pi/16)\n  var dctSin1  =   799   // sin(pi/16)\n  var dctCos3  =  3406   // cos(3*pi/16)\n  var dctSin3  =  2276   // sin(3*pi/16)\n  var dctCos6  =  1567   // cos(6*pi/16)\n  var dctSin6  =  3784   // sin(6*pi/16)\n  var dctSqrt2 =  5793   // sqrt(2)\n  var dctSqrt1d2 = 2896  // sqrt(2) / 2\n\n  function constructor() {\n  }\n\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0, code = [], i, j, length = 16;\n    while (length > 0 && !codeLengths[length - 1])\n      length--;\n    code.push({children: [], index: 0});\n    var p = code[0], q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          if (code.length === 0)\n            throw new Error('Could not recreate Huffman Table');\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {children: [], index: 0});\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push(q = {children: [], index: 0});\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n\n  function decodeScan(data, offset,\n                      frame, components, resetInterval,\n                      spectralStart, spectralEnd,\n                      successivePrev, successive, opts) {\n    var precision = frame.precision;\n    var samplesPerLine = frame.samplesPerLine;\n    var scanLines = frame.scanLines;\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var maxH = frame.maxH, maxV = frame.maxV;\n\n    var startOffset = offset, bitsData = 0, bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return (bitsData >> bitsCount) & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData == 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new Error(\"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16));\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree, bit;\n      while ((bit = readBit()) !== null) {\n        node = node[bit];\n        if (typeof node === 'number')\n          return node;\n        if (typeof node !== 'object')\n          throw new Error(\"invalid huffman sequence\");\n      }\n      return null;\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        var bit = readBit();\n        if (bit === null) return;\n        n = (n << 1) | bit;\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      var n = receive(length);\n      if (n >= 1 << (length - 1))\n        return n;\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      zz[0]= (component.pred += diff);\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15)\n            break;\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n      zz[0] = (component.pred += diff);\n    }\n    function decodeDCSuccessive(component, zz) {\n      zz[0] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, zz) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart, e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0, successiveACNextValue;\n    function decodeACSuccessive(component, zz) {\n      var k = spectralStart, e = spectralEnd, r = 0;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        var direction = zz[z] < 0 ? -1 : 1;\n        switch (successiveACState) {\n        case 0: // initial state\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15, r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1)\n              throw new Error(\"invalid ACn encoding\");\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            r--;\n            if (r === 0)\n              successiveACState = successiveACState == 2 ? 3 : 0;\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0)\n          successiveACState = 0;\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = (mcu / mcusPerLine) | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n        return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = (mcu / component.blocksPerLine) | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n        return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0)\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      else\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    } else {\n      decodeFn = decodeBaseline;\n    }\n\n    var mcu = 0, marker;\n    var mcuExpected;\n    if (componentsLength == 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    if (!resetInterval) resetInterval = mcuExpected;\n\n    var h, v;\n    while (mcu < mcuExpected) {\n      // reset interval stuff\n      for (i = 0; i < componentsLength; i++)\n        components[i].pred = 0;\n      eobrun = 0;\n\n      if (componentsLength == 1) {\n        component = components[0];\n        for (n = 0; n < resetInterval; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < resetInterval; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n\n          // If we've reached our expected MCU's, stop decoding\n          if (mcu === mcuExpected) break;\n        }\n      }\n\n      if (mcu === mcuExpected) {\n        // Skip trailing bytes at the end of the scan - until we reach the next marker\n        do {\n          if (data[offset] === 0xFF) {\n            if (data[offset + 1] !== 0x00) {\n              break;\n            }\n          }\n          offset += 1;\n        } while (offset < data.length - 2);\n      }\n\n      // find marker\n      bitsCount = 0;\n      marker = (data[offset] << 8) | data[offset + 1];\n      if (marker < 0xFF00) {\n        throw new Error(\"marker was not found\");\n      }\n\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n        offset += 2;\n      }\n      else\n        break;\n    }\n\n    return offset - startOffset;\n  }\n\n  function buildComponentData(frame, component) {\n    var lines = [];\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var samplesPerLine = blocksPerLine << 3;\n    // Only 1 used per invocation of this function and garbage collected after invocation, so no need to account for its memory footprint.\n    var R = new Int32Array(64), r = new Uint8Array(64);\n\n    // A port of poppler's IDCT method which in turn is taken from:\n    //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n    //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n    //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n    //   988-991.\n    function quantizeAndInverse(zz, dataOut, dataIn) {\n      var qt = component.quantizationTable;\n      var v0, v1, v2, v3, v4, v5, v6, v7, t;\n      var p = dataIn;\n      var i;\n\n      // dequant\n      for (i = 0; i < 64; i++)\n        p[i] = zz[i] * qt[i];\n\n      // inverse DCT on rows\n      for (i = 0; i < 8; ++i) {\n        var row = 8 * i;\n\n        // check for all-zero AC coefficients\n        if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 &&\n            p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 &&\n            p[7 + row] == 0) {\n          t = (dctSqrt2 * p[0 + row] + 512) >> 10;\n          p[0 + row] = t;\n          p[1 + row] = t;\n          p[2 + row] = t;\n          p[3 + row] = t;\n          p[4 + row] = t;\n          p[5 + row] = t;\n          p[6 + row] = t;\n          p[7 + row] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0 + row] + 128) >> 8;\n        v1 = (dctSqrt2 * p[4 + row] + 128) >> 8;\n        v2 = p[2 + row];\n        v3 = p[6 + row];\n        v4 = (dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128) >> 8;\n        v5 = p[3 + row] << 4;\n        v6 = p[5 + row] << 4;\n\n        // stage 3\n        t = (v0 - v1+ 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0 + row] = v0 + v7;\n        p[7 + row] = v0 - v7;\n        p[1 + row] = v1 + v6;\n        p[6 + row] = v1 - v6;\n        p[2 + row] = v2 + v5;\n        p[5 + row] = v2 - v5;\n        p[3 + row] = v3 + v4;\n        p[4 + row] = v3 - v4;\n      }\n\n      // inverse DCT on columns\n      for (i = 0; i < 8; ++i) {\n        var col = i;\n\n        // check for all-zero AC coefficients\n        if (p[1*8 + col] == 0 && p[2*8 + col] == 0 && p[3*8 + col] == 0 &&\n            p[4*8 + col] == 0 && p[5*8 + col] == 0 && p[6*8 + col] == 0 &&\n            p[7*8 + col] == 0) {\n          t = (dctSqrt2 * dataIn[i+0] + 8192) >> 14;\n          p[0*8 + col] = t;\n          p[1*8 + col] = t;\n          p[2*8 + col] = t;\n          p[3*8 + col] = t;\n          p[4*8 + col] = t;\n          p[5*8 + col] = t;\n          p[6*8 + col] = t;\n          p[7*8 + col] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0*8 + col] + 2048) >> 12;\n        v1 = (dctSqrt2 * p[4*8 + col] + 2048) >> 12;\n        v2 = p[2*8 + col];\n        v3 = p[6*8 + col];\n        v4 = (dctSqrt1d2 * (p[1*8 + col] - p[7*8 + col]) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p[1*8 + col] + p[7*8 + col]) + 2048) >> 12;\n        v5 = p[3*8 + col];\n        v6 = p[5*8 + col];\n\n        // stage 3\n        t = (v0 - v1 + 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0*8 + col] = v0 + v7;\n        p[7*8 + col] = v0 - v7;\n        p[1*8 + col] = v1 + v6;\n        p[6*8 + col] = v1 - v6;\n        p[2*8 + col] = v2 + v5;\n        p[5*8 + col] = v2 - v5;\n        p[3*8 + col] = v3 + v4;\n        p[4*8 + col] = v3 - v4;\n      }\n\n      // convert to 8-bit integers\n      for (i = 0; i < 64; ++i) {\n        var sample = 128 + ((p[i] + 8) >> 4);\n        dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;\n      }\n    }\n\n    requestMemoryAllocation(samplesPerLine * blocksPerColumn * 8);\n\n    var i, j;\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      var scanLine = blockRow << 3;\n      for (i = 0; i < 8; i++)\n        lines.push(new Uint8Array(samplesPerLine));\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n        var offset = 0, sample = blockCol << 3;\n        for (j = 0; j < 8; j++) {\n          var line = lines[scanLine + j];\n          for (i = 0; i < 8; i++)\n            line[sample + i] = r[offset++];\n        }\n      }\n    }\n    return lines;\n  }\n\n  function clampTo8bit(a) {\n    return a < 0 ? 0 : a > 255 ? 255 : a;\n  }\n\n  constructor.prototype = {\n    load: function load(path) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", path, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = (function() {\n        // TODO catch parse error\n        var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\n        this.parse(data);\n        if (this.onload)\n          this.onload();\n      }).bind(this);\n      xhr.send(null);\n    },\n    parse: function parse(data) {\n      var maxResolutionInPixels = this.opts.maxResolutionInMP * 1000 * 1000;\n      var offset = 0, length = data.length;\n      function readUint16() {\n        var value = (data[offset] << 8) | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var maxH = 0, maxV = 0;\n        var component, componentId;\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            if (maxH < component.h) maxH = component.h;\n            if (maxV < component.v) maxV = component.v;\n          }\n        }\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) * component.v / maxV);\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksToAllocate = blocksPerColumnForMcu * blocksPerLineForMcu;\n            var blocks = [];\n\n            // Each block is a Int32Array of length 64 (4 x 64 = 256 bytes)\n            requestMemoryAllocation(blocksToAllocate * 256);\n\n            for (var i = 0; i < blocksPerColumnForMcu; i++) {\n              var row = [];\n              for (var j = 0; j < blocksPerLineForMcu; j++)\n                row.push(new Int32Array(64));\n              blocks.push(row);\n            }\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n            component.blocks = blocks;\n          }\n        }\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var jfif = null;\n      var adobe = null;\n      var pixels = null;\n      var frame, resetInterval;\n      var quantizationTables = [], frames = [];\n      var huffmanTablesAC = [], huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      this.comments = [];\n      if (fileMarker != 0xFFD8) { // SOI (Start of Image)\n        throw new Error(\"SOI not found\");\n      }\n\n      fileMarker = readUint16();\n      while (fileMarker != 0xFFD9) { // EOI (End of image)\n        var i, j, l;\n        switch(fileMarker) {\n          case 0xFF00: break;\n          case 0xFFE0: // APP0 (Application Specific)\n          case 0xFFE1: // APP1\n          case 0xFFE2: // APP2\n          case 0xFFE3: // APP3\n          case 0xFFE4: // APP4\n          case 0xFFE5: // APP5\n          case 0xFFE6: // APP6\n          case 0xFFE7: // APP7\n          case 0xFFE8: // APP8\n          case 0xFFE9: // APP9\n          case 0xFFEA: // APP10\n          case 0xFFEB: // APP11\n          case 0xFFEC: // APP12\n          case 0xFFED: // APP13\n          case 0xFFEE: // APP14\n          case 0xFFEF: // APP15\n          case 0xFFFE: // COM (Comment)\n            var appData = readDataBlock();\n\n            if (fileMarker === 0xFFFE) {\n              var comment = String.fromCharCode.apply(null, appData);\n              this.comments.push(comment);\n            }\n\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 &&\n                appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n                jfif = {\n                  version: { major: appData[5], minor: appData[6] },\n                  densityUnits: appData[7],\n                  xDensity: (appData[8] << 8) | appData[9],\n                  yDensity: (appData[10] << 8) | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xFFE1) {\n              if (appData[0] === 0x45 &&\n                appData[1] === 0x78 &&\n                appData[2] === 0x69 &&\n                appData[3] === 0x66 &&\n                appData[4] === 0) { // 'EXIF\\x00'\n                this.exifBuffer = appData.subarray(5, appData.length);\n              }\n            }\n\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F &&\n                appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n                adobe = {\n                  version: appData[6],\n                  flags0: (appData[7] << 8) | appData[8],\n                  flags1: (appData[9] << 8) | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n\n          case 0xFFDB: // DQT (Define Quantization Tables)\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              requestMemoryAllocation(64 * 4);\n              var tableData = new Int32Array(64);\n              if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if ((quantizationTableSpec >> 4) === 1) { //16 bit\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else\n                throw new Error(\"DQT: invalid table spec\");\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)\n            readUint16(); // skip data length\n            frame = {};\n            frame.extended = (fileMarker === 0xFFC1);\n            frame.progressive = (fileMarker === 0xFFC2);\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = {};\n            frame.componentsOrder = [];\n\n            var pixelsInFrame = frame.scanLines * frame.samplesPerLine;\n            if (pixelsInFrame > maxResolutionInPixels) {\n              var exceededAmount = Math.ceil((pixelsInFrame - maxResolutionInPixels) / 1e6);\n              throw new Error(`maxResolutionInMP limit exceeded by ${exceededAmount}MP`);\n            }\n\n            var componentsCount = data[offset++], componentId;\n            var maxH = 0, maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              var qId = data[offset + 2];\n              frame.componentsOrder.push(componentId);\n              frame.components[componentId] = {\n                h: h,\n                v: v,\n                quantizationIdx: qId\n              };\n              offset += 3;\n            }\n            prepareComponents(frame);\n            frames.push(frame);\n            break;\n\n          case 0xFFC4: // DHT (Define Huffman Tables)\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += (codeLengths[j] = data[offset]);\n              }\n              requestMemoryAllocation(16 + codeLengthSum);\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++)\n                huffmanValues[j] = data[offset];\n              i += 17 + codeLengthSum;\n\n              ((huffmanTableSpec >> 4) === 0 ?\n                huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =\n                buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n\n          case 0xFFDD: // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n            resetInterval = readUint16();\n            break;\n\n          case 0xFFDC: // Number of Lines marker\n            readUint16() // skip data length\n            readUint16() // Ignore this data since it represents the image height\n            break;\n            \n          case 0xFFDA: // SOS (Start of Scan)\n            var scanLength = readUint16();\n            var selectorsCount = data[offset++];\n            var components = [], component;\n            for (i = 0; i < selectorsCount; i++) {\n              component = frame.components[data[offset++]];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset,\n              frame, components, resetInterval,\n              spectralStart, spectralEnd,\n              successiveApproximation >> 4, successiveApproximation & 15, this.opts);\n            offset += processed;\n            break;\n\n          case 0xFFFF: // Fill bytes\n            if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n\n          default:\n            if (data[offset - 3] == 0xFF &&\n                data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            }\n            throw new Error(\"unknown JPEG marker \" + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      if (frames.length != 1)\n        throw new Error(\"only single frame JPEGs supported\");\n\n      // set each frame's components quantization table\n      for (var i = 0; i < frames.length; i++) {\n        var cp = frames[i].components;\n        for (var j in cp) {\n          cp[j].quantizationTable = quantizationTables[cp[j].quantizationIdx];\n          delete cp[j].quantizationIdx;\n        }\n      }\n\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (var i = 0; i < frame.componentsOrder.length; i++) {\n        var component = frame.components[frame.componentsOrder[i]];\n        this.components.push({\n          lines: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV\n        });\n      }\n    },\n    getData: function getData(width, height) {\n      var scaleX = this.width / width, scaleY = this.height / height;\n\n      var component1, component2, component3, component4;\n      var component1Line, component2Line, component3Line, component4Line;\n      var x, y;\n      var offset = 0;\n      var Y, Cb, Cr, K, C, M, Ye, R, G, B;\n      var colorTransform;\n      var dataLength = width * height * this.components.length;\n      requestMemoryAllocation(dataLength);\n      var data = new Uint8Array(dataLength);\n      switch (this.components.length) {\n        case 1:\n          component1 = this.components[0];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 2:\n          // PDF might compress two component data in custom colorspace\n          component1 = this.components[0];\n          component2 = this.components[1];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n              data[offset++] = Y;\n              Y = component2Line[0 | (x * component2.scaleX * scaleX)];\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 3:\n          // The default transform for three components is true\n          colorTransform = true;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.opts.colorTransform !== 'undefined')\n            colorTransform = !!this.opts.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                R = component1Line[0 | (x * component1.scaleX * scaleX)];\n                G = component2Line[0 | (x * component2.scaleX * scaleX)];\n                B = component3Line[0 | (x * component3.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n\n                R = clampTo8bit(Y + 1.402 * (Cr - 128));\n                G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                B = clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n\n              data[offset++] = R;\n              data[offset++] = G;\n              data[offset++] = B;\n            }\n          }\n          break;\n        case 4:\n          if (!this.adobe)\n            throw new Error('Unsupported color mode (4 components)');\n          // The default transform for four components is false\n          colorTransform = false;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.opts.colorTransform !== 'undefined')\n            colorTransform = !!this.opts.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          component4 = this.components[3];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            component4Line = component4.lines[0 | (y * component4.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                C = component1Line[0 | (x * component1.scaleX * scaleX)];\n                M = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Ye = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n\n                C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));\n                M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n              data[offset++] = 255-C;\n              data[offset++] = 255-M;\n              data[offset++] = 255-Ye;\n              data[offset++] = 255-K;\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n      return data;\n    },\n    copyToImageData: function copyToImageData(imageData, formatAsRGBA) {\n      var width = imageData.width, height = imageData.height;\n      var imageDataArray = imageData.data;\n      var data = this.getData(width, height);\n      var i = 0, j = 0, x, y;\n      var Y, K, C, M, R, G, B;\n      switch (this.components.length) {\n        case 1:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              Y = data[i++];\n\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 3:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              R = data[i++];\n              G = data[i++];\n              B = data[i++];\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 4:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              C = data[i++];\n              M = data[i++];\n              Y = data[i++];\n              K = data[i++];\n\n              R = 255 - clampTo8bit(C * (1 - K / 255) + K);\n              G = 255 - clampTo8bit(M * (1 - K / 255) + K);\n              B = 255 - clampTo8bit(Y * (1 - K / 255) + K);\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n    }\n  };\n\n\n  // We cap the amount of memory used by jpeg-js to avoid unexpected OOMs from untrusted content.\n  var totalBytesAllocated = 0;\n  var maxMemoryUsageBytes = 0;\n  function requestMemoryAllocation(increaseAmount = 0) {\n    var totalMemoryImpactBytes = totalBytesAllocated + increaseAmount;\n    if (totalMemoryImpactBytes > maxMemoryUsageBytes) {\n      var exceededAmount = Math.ceil((totalMemoryImpactBytes - maxMemoryUsageBytes) / 1024 / 1024);\n      throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${exceededAmount}MB`);\n    }\n\n    totalBytesAllocated = totalMemoryImpactBytes;\n  }\n\n  constructor.resetMaxMemoryUsage = function (maxMemoryUsageBytes_) {\n    totalBytesAllocated = 0;\n    maxMemoryUsageBytes = maxMemoryUsageBytes_;\n  };\n\n  constructor.getBytesAllocated = function () {\n    return totalBytesAllocated;\n  };\n\n  constructor.requestMemoryAllocation = requestMemoryAllocation;\n\n  return constructor;\n})();\n\nif (true) {\n\tmodule.exports = decode;\n} else {}\n\nfunction decode(jpegData, userOpts = {}) {\n  var defaultOpts = {\n    // \"undefined\" means \"Choose whether to transform colors based on the image’s color model.\"\n    colorTransform: undefined,\n    useTArray: false,\n    formatAsRGBA: true,\n    tolerantDecoding: true,\n    maxResolutionInMP: 100, // Don't decode more than 100 megapixels\n    maxMemoryUsageInMB: 512, // Don't decode if memory footprint is more than 512MB\n  };\n\n  var opts = {...defaultOpts, ...userOpts};\n  var arr = new Uint8Array(jpegData);\n  var decoder = new JpegImage();\n  decoder.opts = opts;\n  // If this constructor ever supports async decoding this will need to be done differently.\n  // Until then, treating as singleton limit is fine.\n  JpegImage.resetMaxMemoryUsage(opts.maxMemoryUsageInMB * 1024 * 1024);\n  decoder.parse(arr);\n\n  var channels = (opts.formatAsRGBA) ? 4 : 3;\n  var bytesNeeded = decoder.width * decoder.height * channels;\n  try {\n    JpegImage.requestMemoryAllocation(bytesNeeded);\n    var image = {\n      width: decoder.width,\n      height: decoder.height,\n      exifBuffer: decoder.exifBuffer,\n      data: opts.useTArray ?\n        new Uint8Array(bytesNeeded) :\n        Buffer.alloc(bytesNeeded)\n    };\n    if(decoder.comments.length > 0) {\n      image[\"comments\"] = decoder.comments;\n    }\n  } catch (err){\n    if (err instanceof RangeError){\n      throw new Error(\"Could not allocate enough memory for the image. \" +\n                      \"Required: \" + bytesNeeded);\n    } else {\n      throw err;\n    }\n  }\n\n  decoder.copyToImageData(image, opts.formatAsRGBA);\n\n  return image;\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/decoder.js?");

/***/ }),

/***/ "./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/encoder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/encoder.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/*\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\n\nBasic GUI blocking jpeg encoder\n*/\n\nvar btoa = btoa || function(buf) {\n  return Buffer.from(buf).toString('base64');\n};\n\nfunction JPEGEncoder(quality) {\n  var self = this;\n\tvar fround = Math.round;\n\tvar ffloor = Math.floor;\n\tvar YTable = new Array(64);\n\tvar UVTable = new Array(64);\n\tvar fdtbl_Y = new Array(64);\n\tvar fdtbl_UV = new Array(64);\n\tvar YDC_HT;\n\tvar UVDC_HT;\n\tvar YAC_HT;\n\tvar UVAC_HT;\n\t\n\tvar bitcode = new Array(65535);\n\tvar category = new Array(65535);\n\tvar outputfDCTQuant = new Array(64);\n\tvar DU = new Array(64);\n\tvar byteout = [];\n\tvar bytenew = 0;\n\tvar bytepos = 7;\n\t\n\tvar YDU = new Array(64);\n\tvar UDU = new Array(64);\n\tvar VDU = new Array(64);\n\tvar clt = new Array(256);\n\tvar RGB_YUV_TABLE = new Array(2048);\n\tvar currentQuality;\n\t\n\tvar ZigZag = [\n\t\t\t 0, 1, 5, 6,14,15,27,28,\n\t\t\t 2, 4, 7,13,16,26,29,42,\n\t\t\t 3, 8,12,17,25,30,41,43,\n\t\t\t 9,11,18,24,31,40,44,53,\n\t\t\t10,19,23,32,39,45,52,54,\n\t\t\t20,22,33,38,46,51,55,60,\n\t\t\t21,34,37,47,50,56,59,61,\n\t\t\t35,36,48,49,57,58,62,63\n\t\t];\n\t\n\tvar std_dc_luminance_nrcodes = [0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];\n\tvar std_dc_luminance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n\tvar std_ac_luminance_nrcodes = [0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];\n\tvar std_ac_luminance_values = [\n\t\t\t0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,\n\t\t\t0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,\n\t\t\t0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,\n\t\t\t0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,\n\t\t\t0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,\n\t\t\t0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,\n\t\t\t0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,\n\t\t\t0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,\n\t\t\t0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,\n\t\t\t0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,\n\t\t\t0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,\n\t\t\t0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,\n\t\t\t0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,\n\t\t\t0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,\n\t\t\t0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,\n\t\t\t0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,\n\t\t\t0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,\n\t\t\t0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,\n\t\t\t0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,\n\t\t\t0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n\t\t\t0xf9,0xfa\n\t\t];\n\t\n\tvar std_dc_chrominance_nrcodes = [0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];\n\tvar std_dc_chrominance_values = [0,1,2,3,4,5,6,7,8,9,10,11];\n\tvar std_ac_chrominance_nrcodes = [0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];\n\tvar std_ac_chrominance_values = [\n\t\t\t0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,\n\t\t\t0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,\n\t\t\t0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,\n\t\t\t0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,\n\t\t\t0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,\n\t\t\t0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,\n\t\t\t0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,\n\t\t\t0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,\n\t\t\t0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,\n\t\t\t0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,\n\t\t\t0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,\n\t\t\t0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,\n\t\t\t0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,\n\t\t\t0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,\n\t\t\t0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,\n\t\t\t0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,\n\t\t\t0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,\n\t\t\t0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,\n\t\t\t0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,\n\t\t\t0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,\n\t\t\t0xf9,0xfa\n\t\t];\n\t\n\tfunction initQuantTables(sf){\n\t\t\tvar YQT = [\n\t\t\t\t16, 11, 10, 16, 24, 40, 51, 61,\n\t\t\t\t12, 12, 14, 19, 26, 58, 60, 55,\n\t\t\t\t14, 13, 16, 24, 40, 57, 69, 56,\n\t\t\t\t14, 17, 22, 29, 51, 87, 80, 62,\n\t\t\t\t18, 22, 37, 56, 68,109,103, 77,\n\t\t\t\t24, 35, 55, 64, 81,104,113, 92,\n\t\t\t\t49, 64, 78, 87,103,121,120,101,\n\t\t\t\t72, 92, 95, 98,112,100,103, 99\n\t\t\t];\n\t\t\t\n\t\t\tfor (var i = 0; i < 64; i++) {\n\t\t\t\tvar t = ffloor((YQT[i]*sf+50)/100);\n\t\t\t\tif (t < 1) {\n\t\t\t\t\tt = 1;\n\t\t\t\t} else if (t > 255) {\n\t\t\t\t\tt = 255;\n\t\t\t\t}\n\t\t\t\tYTable[ZigZag[i]] = t;\n\t\t\t}\n\t\t\tvar UVQT = [\n\t\t\t\t17, 18, 24, 47, 99, 99, 99, 99,\n\t\t\t\t18, 21, 26, 66, 99, 99, 99, 99,\n\t\t\t\t24, 26, 56, 99, 99, 99, 99, 99,\n\t\t\t\t47, 66, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99,\n\t\t\t\t99, 99, 99, 99, 99, 99, 99, 99\n\t\t\t];\n\t\t\tfor (var j = 0; j < 64; j++) {\n\t\t\t\tvar u = ffloor((UVQT[j]*sf+50)/100);\n\t\t\t\tif (u < 1) {\n\t\t\t\t\tu = 1;\n\t\t\t\t} else if (u > 255) {\n\t\t\t\t\tu = 255;\n\t\t\t\t}\n\t\t\t\tUVTable[ZigZag[j]] = u;\n\t\t\t}\n\t\t\tvar aasf = [\n\t\t\t\t1.0, 1.387039845, 1.306562965, 1.175875602,\n\t\t\t\t1.0, 0.785694958, 0.541196100, 0.275899379\n\t\t\t];\n\t\t\tvar k = 0;\n\t\t\tfor (var row = 0; row < 8; row++)\n\t\t\t{\n\t\t\t\tfor (var col = 0; col < 8; col++)\n\t\t\t\t{\n\t\t\t\t\tfdtbl_Y[k]  = (1.0 / (YTable [ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n\t\t\t\t\tfdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction computeHuffmanTbl(nrcodes, std_table){\n\t\t\tvar codevalue = 0;\n\t\t\tvar pos_in_table = 0;\n\t\t\tvar HT = new Array();\n\t\t\tfor (var k = 1; k <= 16; k++) {\n\t\t\t\tfor (var j = 1; j <= nrcodes[k]; j++) {\n\t\t\t\t\tHT[std_table[pos_in_table]] = [];\n\t\t\t\t\tHT[std_table[pos_in_table]][0] = codevalue;\n\t\t\t\t\tHT[std_table[pos_in_table]][1] = k;\n\t\t\t\t\tpos_in_table++;\n\t\t\t\t\tcodevalue++;\n\t\t\t\t}\n\t\t\t\tcodevalue*=2;\n\t\t\t}\n\t\t\treturn HT;\n\t\t}\n\t\t\n\t\tfunction initHuffmanTbl()\n\t\t{\n\t\t\tYDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);\n\t\t\tUVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);\n\t\t\tYAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);\n\t\t\tUVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);\n\t\t}\n\t\n\t\tfunction initCategoryNumber()\n\t\t{\n\t\t\tvar nrlower = 1;\n\t\t\tvar nrupper = 2;\n\t\t\tfor (var cat = 1; cat <= 15; cat++) {\n\t\t\t\t//Positive numbers\n\t\t\t\tfor (var nr = nrlower; nr<nrupper; nr++) {\n\t\t\t\t\tcategory[32767+nr] = cat;\n\t\t\t\t\tbitcode[32767+nr] = [];\n\t\t\t\t\tbitcode[32767+nr][1] = cat;\n\t\t\t\t\tbitcode[32767+nr][0] = nr;\n\t\t\t\t}\n\t\t\t\t//Negative numbers\n\t\t\t\tfor (var nrneg =-(nrupper-1); nrneg<=-nrlower; nrneg++) {\n\t\t\t\t\tcategory[32767+nrneg] = cat;\n\t\t\t\t\tbitcode[32767+nrneg] = [];\n\t\t\t\t\tbitcode[32767+nrneg][1] = cat;\n\t\t\t\t\tbitcode[32767+nrneg][0] = nrupper-1+nrneg;\n\t\t\t\t}\n\t\t\t\tnrlower <<= 1;\n\t\t\t\tnrupper <<= 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction initRGBYUVTable() {\n\t\t\tfor(var i = 0; i < 256;i++) {\n\t\t\t\tRGB_YUV_TABLE[i]      \t\t=  19595 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+ 256)>>0] \t=  38470 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+ 512)>>0] \t=   7471 * i + 0x8000;\n\t\t\t\tRGB_YUV_TABLE[(i+ 768)>>0] \t= -11059 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1024)>>0] \t= -21709 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1280)>>0] \t=  32768 * i + 0x807FFF;\n\t\t\t\tRGB_YUV_TABLE[(i+1536)>>0] \t= -27439 * i;\n\t\t\t\tRGB_YUV_TABLE[(i+1792)>>0] \t= - 5329 * i;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// IO functions\n\t\tfunction writeBits(bs)\n\t\t{\n\t\t\tvar value = bs[0];\n\t\t\tvar posval = bs[1]-1;\n\t\t\twhile ( posval >= 0 ) {\n\t\t\t\tif (value & (1 << posval) ) {\n\t\t\t\t\tbytenew |= (1 << bytepos);\n\t\t\t\t}\n\t\t\t\tposval--;\n\t\t\t\tbytepos--;\n\t\t\t\tif (bytepos < 0) {\n\t\t\t\t\tif (bytenew == 0xFF) {\n\t\t\t\t\t\twriteByte(0xFF);\n\t\t\t\t\t\twriteByte(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twriteByte(bytenew);\n\t\t\t\t\t}\n\t\t\t\t\tbytepos=7;\n\t\t\t\t\tbytenew=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeByte(value)\n\t\t{\n\t\t\t//byteout.push(clt[value]); // write char directly instead of converting later\n      byteout.push(value);\n\t\t}\n\t\n\t\tfunction writeWord(value)\n\t\t{\n\t\t\twriteByte((value>>8)&0xFF);\n\t\t\twriteByte((value   )&0xFF);\n\t\t}\n\t\t\n\t\t// DCT & quantization core\n\t\tfunction fDCTQuant(data, fdtbl)\n\t\t{\n\t\t\tvar d0, d1, d2, d3, d4, d5, d6, d7;\n\t\t\t/* Pass 1: process rows. */\n\t\t\tvar dataOff=0;\n\t\t\tvar i;\n\t\t\tvar I8 = 8;\n\t\t\tvar I64 = 64;\n\t\t\tfor (i=0; i<I8; ++i)\n\t\t\t{\n\t\t\t\td0 = data[dataOff];\n\t\t\t\td1 = data[dataOff+1];\n\t\t\t\td2 = data[dataOff+2];\n\t\t\t\td3 = data[dataOff+3];\n\t\t\t\td4 = data[dataOff+4];\n\t\t\t\td5 = data[dataOff+5];\n\t\t\t\td6 = data[dataOff+6];\n\t\t\t\td7 = data[dataOff+7];\n\t\t\t\t\n\t\t\t\tvar tmp0 = d0 + d7;\n\t\t\t\tvar tmp7 = d0 - d7;\n\t\t\t\tvar tmp1 = d1 + d6;\n\t\t\t\tvar tmp6 = d1 - d6;\n\t\t\t\tvar tmp2 = d2 + d5;\n\t\t\t\tvar tmp5 = d2 - d5;\n\t\t\t\tvar tmp3 = d3 + d4;\n\t\t\t\tvar tmp4 = d3 - d4;\n\t\n\t\t\t\t/* Even part */\n\t\t\t\tvar tmp10 = tmp0 + tmp3;\t/* phase 2 */\n\t\t\t\tvar tmp13 = tmp0 - tmp3;\n\t\t\t\tvar tmp11 = tmp1 + tmp2;\n\t\t\t\tvar tmp12 = tmp1 - tmp2;\n\t\n\t\t\t\tdata[dataOff] = tmp10 + tmp11; /* phase 3 */\n\t\t\t\tdata[dataOff+4] = tmp10 - tmp11;\n\t\n\t\t\t\tvar z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\n\t\t\t\tdata[dataOff+2] = tmp13 + z1; /* phase 5 */\n\t\t\t\tdata[dataOff+6] = tmp13 - z1;\n\t\n\t\t\t\t/* Odd part */\n\t\t\t\ttmp10 = tmp4 + tmp5; /* phase 2 */\n\t\t\t\ttmp11 = tmp5 + tmp6;\n\t\t\t\ttmp12 = tmp6 + tmp7;\n\t\n\t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n\t\t\t\tvar z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\n\t\t\t\tvar z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\n\t\t\t\tvar z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\n\t\t\t\tvar z3 = tmp11 * 0.707106781; /* c4 */\n\t\n\t\t\t\tvar z11 = tmp7 + z3;\t/* phase 5 */\n\t\t\t\tvar z13 = tmp7 - z3;\n\t\n\t\t\t\tdata[dataOff+5] = z13 + z2;\t/* phase 6 */\n\t\t\t\tdata[dataOff+3] = z13 - z2;\n\t\t\t\tdata[dataOff+1] = z11 + z4;\n\t\t\t\tdata[dataOff+7] = z11 - z4;\n\t\n\t\t\t\tdataOff += 8; /* advance pointer to next row */\n\t\t\t}\n\t\n\t\t\t/* Pass 2: process columns. */\n\t\t\tdataOff = 0;\n\t\t\tfor (i=0; i<I8; ++i)\n\t\t\t{\n\t\t\t\td0 = data[dataOff];\n\t\t\t\td1 = data[dataOff + 8];\n\t\t\t\td2 = data[dataOff + 16];\n\t\t\t\td3 = data[dataOff + 24];\n\t\t\t\td4 = data[dataOff + 32];\n\t\t\t\td5 = data[dataOff + 40];\n\t\t\t\td6 = data[dataOff + 48];\n\t\t\t\td7 = data[dataOff + 56];\n\t\t\t\t\n\t\t\t\tvar tmp0p2 = d0 + d7;\n\t\t\t\tvar tmp7p2 = d0 - d7;\n\t\t\t\tvar tmp1p2 = d1 + d6;\n\t\t\t\tvar tmp6p2 = d1 - d6;\n\t\t\t\tvar tmp2p2 = d2 + d5;\n\t\t\t\tvar tmp5p2 = d2 - d5;\n\t\t\t\tvar tmp3p2 = d3 + d4;\n\t\t\t\tvar tmp4p2 = d3 - d4;\n\t\n\t\t\t\t/* Even part */\n\t\t\t\tvar tmp10p2 = tmp0p2 + tmp3p2;\t/* phase 2 */\n\t\t\t\tvar tmp13p2 = tmp0p2 - tmp3p2;\n\t\t\t\tvar tmp11p2 = tmp1p2 + tmp2p2;\n\t\t\t\tvar tmp12p2 = tmp1p2 - tmp2p2;\n\t\n\t\t\t\tdata[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\n\t\t\t\tdata[dataOff+32] = tmp10p2 - tmp11p2;\n\t\n\t\t\t\tvar z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\n\t\t\t\tdata[dataOff+16] = tmp13p2 + z1p2; /* phase 5 */\n\t\t\t\tdata[dataOff+48] = tmp13p2 - z1p2;\n\t\n\t\t\t\t/* Odd part */\n\t\t\t\ttmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\n\t\t\t\ttmp11p2 = tmp5p2 + tmp6p2;\n\t\t\t\ttmp12p2 = tmp6p2 + tmp7p2;\n\t\n\t\t\t\t/* The rotator is modified from fig 4-8 to avoid extra negations. */\n\t\t\t\tvar z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\n\t\t\t\tvar z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\n\t\t\t\tvar z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\n\t\t\t\tvar z3p2 = tmp11p2 * 0.707106781; /* c4 */\n\t\n\t\t\t\tvar z11p2 = tmp7p2 + z3p2;\t/* phase 5 */\n\t\t\t\tvar z13p2 = tmp7p2 - z3p2;\n\t\n\t\t\t\tdata[dataOff+40] = z13p2 + z2p2; /* phase 6 */\n\t\t\t\tdata[dataOff+24] = z13p2 - z2p2;\n\t\t\t\tdata[dataOff+ 8] = z11p2 + z4p2;\n\t\t\t\tdata[dataOff+56] = z11p2 - z4p2;\n\t\n\t\t\t\tdataOff++; /* advance pointer to next column */\n\t\t\t}\n\t\n\t\t\t// Quantize/descale the coefficients\n\t\t\tvar fDCTQuant;\n\t\t\tfor (i=0; i<I64; ++i)\n\t\t\t{\n\t\t\t\t// Apply the quantization and scaling factor & Round to nearest integer\n\t\t\t\tfDCTQuant = data[i]*fdtbl[i];\n\t\t\t\toutputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5)|0) : ((fDCTQuant - 0.5)|0);\n\t\t\t\t//outputfDCTQuant[i] = fround(fDCTQuant);\n\n\t\t\t}\n\t\t\treturn outputfDCTQuant;\n\t\t}\n\t\t\n\t\tfunction writeAPP0()\n\t\t{\n\t\t\twriteWord(0xFFE0); // marker\n\t\t\twriteWord(16); // length\n\t\t\twriteByte(0x4A); // J\n\t\t\twriteByte(0x46); // F\n\t\t\twriteByte(0x49); // I\n\t\t\twriteByte(0x46); // F\n\t\t\twriteByte(0); // = \"JFIF\",'\\0'\n\t\t\twriteByte(1); // versionhi\n\t\t\twriteByte(1); // versionlo\n\t\t\twriteByte(0); // xyunits\n\t\t\twriteWord(1); // xdensity\n\t\t\twriteWord(1); // ydensity\n\t\t\twriteByte(0); // thumbnwidth\n\t\t\twriteByte(0); // thumbnheight\n\t\t}\n\n\t\tfunction writeAPP1(exifBuffer) {\n\t\t\tif (!exifBuffer) return;\n\n\t\t\twriteWord(0xFFE1); // APP1 marker\n\n\t\t\tif (exifBuffer[0] === 0x45 &&\n\t\t\t\t\texifBuffer[1] === 0x78 &&\n\t\t\t\t\texifBuffer[2] === 0x69 &&\n\t\t\t\t\texifBuffer[3] === 0x66) {\n\t\t\t\t// Buffer already starts with EXIF, just use it directly\n\t\t\t\twriteWord(exifBuffer.length + 2); // length is buffer + length itself!\n\t\t\t} else {\n\t\t\t\t// Buffer doesn't start with EXIF, write it for them\n\t\t\t\twriteWord(exifBuffer.length + 5 + 2); // length is buffer + EXIF\\0 + length itself!\n\t\t\t\twriteByte(0x45); // E\n\t\t\t\twriteByte(0x78); // X\n\t\t\t\twriteByte(0x69); // I\n\t\t\t\twriteByte(0x66); // F\n\t\t\t\twriteByte(0); // = \"EXIF\",'\\0'\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < exifBuffer.length; i++) {\n\t\t\t\twriteByte(exifBuffer[i]);\n\t\t\t}\n\t\t}\n\n\t\tfunction writeSOF0(width, height)\n\t\t{\n\t\t\twriteWord(0xFFC0); // marker\n\t\t\twriteWord(17);   // length, truecolor YUV JPG\n\t\t\twriteByte(8);    // precision\n\t\t\twriteWord(height);\n\t\t\twriteWord(width);\n\t\t\twriteByte(3);    // nrofcomponents\n\t\t\twriteByte(1);    // IdY\n\t\t\twriteByte(0x11); // HVY\n\t\t\twriteByte(0);    // QTY\n\t\t\twriteByte(2);    // IdU\n\t\t\twriteByte(0x11); // HVU\n\t\t\twriteByte(1);    // QTU\n\t\t\twriteByte(3);    // IdV\n\t\t\twriteByte(0x11); // HVV\n\t\t\twriteByte(1);    // QTV\n\t\t}\n\t\n\t\tfunction writeDQT()\n\t\t{\n\t\t\twriteWord(0xFFDB); // marker\n\t\t\twriteWord(132);\t   // length\n\t\t\twriteByte(0);\n\t\t\tfor (var i=0; i<64; i++) {\n\t\t\t\twriteByte(YTable[i]);\n\t\t\t}\n\t\t\twriteByte(1);\n\t\t\tfor (var j=0; j<64; j++) {\n\t\t\t\twriteByte(UVTable[j]);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeDHT()\n\t\t{\n\t\t\twriteWord(0xFFC4); // marker\n\t\t\twriteWord(0x01A2); // length\n\t\n\t\t\twriteByte(0); // HTYDCinfo\n\t\t\tfor (var i=0; i<16; i++) {\n\t\t\t\twriteByte(std_dc_luminance_nrcodes[i+1]);\n\t\t\t}\n\t\t\tfor (var j=0; j<=11; j++) {\n\t\t\t\twriteByte(std_dc_luminance_values[j]);\n\t\t\t}\n\t\n\t\t\twriteByte(0x10); // HTYACinfo\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\twriteByte(std_ac_luminance_nrcodes[k+1]);\n\t\t\t}\n\t\t\tfor (var l=0; l<=161; l++) {\n\t\t\t\twriteByte(std_ac_luminance_values[l]);\n\t\t\t}\n\t\n\t\t\twriteByte(1); // HTUDCinfo\n\t\t\tfor (var m=0; m<16; m++) {\n\t\t\t\twriteByte(std_dc_chrominance_nrcodes[m+1]);\n\t\t\t}\n\t\t\tfor (var n=0; n<=11; n++) {\n\t\t\t\twriteByte(std_dc_chrominance_values[n]);\n\t\t\t}\n\t\n\t\t\twriteByte(0x11); // HTUACinfo\n\t\t\tfor (var o=0; o<16; o++) {\n\t\t\t\twriteByte(std_ac_chrominance_nrcodes[o+1]);\n\t\t\t}\n\t\t\tfor (var p=0; p<=161; p++) {\n\t\t\t\twriteByte(std_ac_chrominance_values[p]);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction writeSOS()\n\t\t{\n\t\t\twriteWord(0xFFDA); // marker\n\t\t\twriteWord(12); // length\n\t\t\twriteByte(3); // nrofcomponents\n\t\t\twriteByte(1); // IdY\n\t\t\twriteByte(0); // HTY\n\t\t\twriteByte(2); // IdU\n\t\t\twriteByte(0x11); // HTU\n\t\t\twriteByte(3); // IdV\n\t\t\twriteByte(0x11); // HTV\n\t\t\twriteByte(0); // Ss\n\t\t\twriteByte(0x3f); // Se\n\t\t\twriteByte(0); // Bf\n\t\t}\n\t\t\n\t\tfunction processDU(CDU, fdtbl, DC, HTDC, HTAC){\n\t\t\tvar EOB = HTAC[0x00];\n\t\t\tvar M16zeroes = HTAC[0xF0];\n\t\t\tvar pos;\n\t\t\tvar I16 = 16;\n\t\t\tvar I63 = 63;\n\t\t\tvar I64 = 64;\n\t\t\tvar DU_DCT = fDCTQuant(CDU, fdtbl);\n\t\t\t//ZigZag reorder\n\t\t\tfor (var j=0;j<I64;++j) {\n\t\t\t\tDU[ZigZag[j]]=DU_DCT[j];\n\t\t\t}\n\t\t\tvar Diff = DU[0] - DC; DC = DU[0];\n\t\t\t//Encode DC\n\t\t\tif (Diff==0) {\n\t\t\t\twriteBits(HTDC[0]); // Diff might be 0\n\t\t\t} else {\n\t\t\t\tpos = 32767+Diff;\n\t\t\t\twriteBits(HTDC[category[pos]]);\n\t\t\t\twriteBits(bitcode[pos]);\n\t\t\t}\n\t\t\t//Encode ACs\n\t\t\tvar end0pos = 63; // was const... which is crazy\n\t\t\tfor (; (end0pos>0)&&(DU[end0pos]==0); end0pos--) {};\n\t\t\t//end0pos = first element in reverse order !=0\n\t\t\tif ( end0pos == 0) {\n\t\t\t\twriteBits(EOB);\n\t\t\t\treturn DC;\n\t\t\t}\n\t\t\tvar i = 1;\n\t\t\tvar lng;\n\t\t\twhile ( i <= end0pos ) {\n\t\t\t\tvar startpos = i;\n\t\t\t\tfor (; (DU[i]==0) && (i<=end0pos); ++i) {}\n\t\t\t\tvar nrzeroes = i-startpos;\n\t\t\t\tif ( nrzeroes >= I16 ) {\n\t\t\t\t\tlng = nrzeroes>>4;\n\t\t\t\t\tfor (var nrmarker=1; nrmarker <= lng; ++nrmarker)\n\t\t\t\t\t\twriteBits(M16zeroes);\n\t\t\t\t\tnrzeroes = nrzeroes&0xF;\n\t\t\t\t}\n\t\t\t\tpos = 32767+DU[i];\n\t\t\t\twriteBits(HTAC[(nrzeroes<<4)+category[pos]]);\n\t\t\t\twriteBits(bitcode[pos]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif ( end0pos != I63 ) {\n\t\t\t\twriteBits(EOB);\n\t\t\t}\n\t\t\treturn DC;\n\t\t}\n\n\t\tfunction initCharLookupTable(){\n\t\t\tvar sfcc = String.fromCharCode;\n\t\t\tfor(var i=0; i < 256; i++){ ///// ACHTUNG // 255\n\t\t\t\tclt[i] = sfcc(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.encode = function(image,quality) // image data object\n\t\t{\n\t\t\tvar time_start = new Date().getTime();\n\t\t\t\n\t\t\tif(quality) setQuality(quality);\n\t\t\t\n\t\t\t// Initialize bit writer\n\t\t\tbyteout = new Array();\n\t\t\tbytenew=0;\n\t\t\tbytepos=7;\n\t\n\t\t\t// Add JPEG headers\n\t\t\twriteWord(0xFFD8); // SOI\n\t\t\twriteAPP0();\n\t\t\twriteAPP1(image.exifBuffer);\n\t\t\twriteDQT();\n\t\t\twriteSOF0(image.width,image.height);\n\t\t\twriteDHT();\n\t\t\twriteSOS();\n\n\t\n\t\t\t// Encode 8x8 macroblocks\n\t\t\tvar DCY=0;\n\t\t\tvar DCU=0;\n\t\t\tvar DCV=0;\n\t\t\t\n\t\t\tbytenew=0;\n\t\t\tbytepos=7;\n\t\t\t\n\t\t\t\n\t\t\tthis.encode.displayName = \"_encode_\";\n\n\t\t\tvar imageData = image.data;\n\t\t\tvar width = image.width;\n\t\t\tvar height = image.height;\n\n\t\t\tvar quadWidth = width*4;\n\t\t\tvar tripleWidth = width*3;\n\t\t\t\n\t\t\tvar x, y = 0;\n\t\t\tvar r, g, b;\n\t\t\tvar start,p, col,row,pos;\n\t\t\twhile(y < height){\n\t\t\t\tx = 0;\n\t\t\t\twhile(x < quadWidth){\n\t\t\t\tstart = quadWidth * y + x;\n\t\t\t\tp = start;\n\t\t\t\tcol = -1;\n\t\t\t\trow = 0;\n\t\t\t\t\n\t\t\t\tfor(pos=0; pos < 64; pos++){\n\t\t\t\t\trow = pos >> 3;// /8\n\t\t\t\t\tcol = ( pos & 7 ) * 4; // %8\n\t\t\t\t\tp = start + ( row * quadWidth ) + col;\t\t\n\t\t\t\t\t\n\t\t\t\t\tif(y+row >= height){ // padding bottom\n\t\t\t\t\t\tp-= (quadWidth*(y+1+row-height));\n\t\t\t\t\t}\n\n\t\t\t\t\tif(x+col >= quadWidth){ // padding right\t\n\t\t\t\t\t\tp-= ((x+col) - quadWidth +4)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tr = imageData[ p++ ];\n\t\t\t\t\tg = imageData[ p++ ];\n\t\t\t\t\tb = imageData[ p++ ];\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t/* // calculate YUV values dynamically\n\t\t\t\t\tYDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\n\t\t\t\t\tUDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\n\t\t\t\t\tVDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\n\t\t\t\t\t*/\n\t\t\t\t\t\n\t\t\t\t\t// use lookup table (slightly faster)\n\t\t\t\t\tYDU[pos] = ((RGB_YUV_TABLE[r]             + RGB_YUV_TABLE[(g +  256)>>0] + RGB_YUV_TABLE[(b +  512)>>0]) >> 16)-128;\n\t\t\t\t\tUDU[pos] = ((RGB_YUV_TABLE[(r +  768)>>0] + RGB_YUV_TABLE[(g + 1024)>>0] + RGB_YUV_TABLE[(b + 1280)>>0]) >> 16)-128;\n\t\t\t\t\tVDU[pos] = ((RGB_YUV_TABLE[(r + 1280)>>0] + RGB_YUV_TABLE[(g + 1536)>>0] + RGB_YUV_TABLE[(b + 1792)>>0]) >> 16)-128;\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\n\t\t\t\tDCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\n\t\t\t\tDCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\n\t\t\t\tx+=32;\n\t\t\t\t}\n\t\t\t\ty+=8;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t////////////////////////////////////////////////////////////////\n\t\n\t\t\t// Do the bit alignment of the EOI marker\n\t\t\tif ( bytepos >= 0 ) {\n\t\t\t\tvar fillbits = [];\n\t\t\t\tfillbits[1] = bytepos+1;\n\t\t\t\tfillbits[0] = (1<<(bytepos+1))-1;\n\t\t\t\twriteBits(fillbits);\n\t\t\t}\n\t\n\t\t\twriteWord(0xFFD9); //EOI\n\n\t\t\tif (false) {}\n      return Buffer.from(byteout);\n\n\t\t\tvar jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\n\t\t\t\n\t\t\tbyteout = [];\n\t\t\t\n\t\t\t// benchmarking\n\t\t\tvar duration = new Date().getTime() - time_start;\n    \t\t//console.log('Encoding time: '+ duration + 'ms');\n    \t\t//\n\t\t\t\n\t\t\treturn jpegDataUri\t\t\t\n\t}\n\t\n\tfunction setQuality(quality){\n\t\tif (quality <= 0) {\n\t\t\tquality = 1;\n\t\t}\n\t\tif (quality > 100) {\n\t\t\tquality = 100;\n\t\t}\n\t\t\n\t\tif(currentQuality == quality) return // don't recalc if unchanged\n\t\t\n\t\tvar sf = 0;\n\t\tif (quality < 50) {\n\t\t\tsf = Math.floor(5000 / quality);\n\t\t} else {\n\t\t\tsf = Math.floor(200 - quality*2);\n\t\t}\n\t\t\n\t\tinitQuantTables(sf);\n\t\tcurrentQuality = quality;\n\t\t//console.log('Quality set to: '+quality +'%');\n\t}\n\t\n\tfunction init(){\n\t\tvar time_start = new Date().getTime();\n\t\tif(!quality) quality = 50;\n\t\t// Create tables\n\t\tinitCharLookupTable()\n\t\tinitHuffmanTbl();\n\t\tinitCategoryNumber();\n\t\tinitRGBYUVTable();\n\t\t\n\t\tsetQuality(quality);\n\t\tvar duration = new Date().getTime() - time_start;\n    \t//console.log('Initialization '+ duration + 'ms');\n\t}\n\t\n\tinit();\n\t\n};\n\nif (true) {\n\tmodule.exports = encode;\n} else {}\n\nfunction encode(imgData, qu) {\n  if (typeof qu === 'undefined') qu = 50;\n  var encoder = new JPEGEncoder(qu);\n\tvar data = encoder.encode(imgData, qu);\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n}\n\n// helper function to get the imageData of an existing image on the current page.\nfunction getImageDataFromImage(idOrElement){\n\tvar theImg = (typeof(idOrElement)=='string')? document.getElementById(idOrElement):idOrElement;\n\tvar cvs = document.createElement('canvas');\n\tcvs.width = theImg.width;\n\tcvs.height = theImg.height;\n\tvar ctx = cvs.getContext(\"2d\");\n\tctx.drawImage(theImg,0,0);\n\t\n\treturn (ctx.getImageData(0, 0, cvs.width, cvs.height));\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/thaw-image-processing.ts/node_modules/jpeg-js/lib/encoder.js?");

/***/ }),

/***/ "./node_modules/to-array-buffer/index.js":
/*!***********************************************!*\
  !*** ./node_modules/to-array-buffer/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\r\n * @module  to-array-buffer\r\n */\r\n\r\n\r\n\r\nvar str2ab = __webpack_require__(/*! string-to-arraybuffer */ \"./node_modules/string-to-arraybuffer/index.js\")\r\nvar flat = __webpack_require__(/*! flatten-vertex-data */ \"./node_modules/flatten-vertex-data/index.js\")\r\n// var isBlob = require('is-blob')\r\n\r\n\r\nmodule.exports = function toArrayBuffer (arg) {\r\n\t//zero-length or undefined-like\r\n\tif (!arg) return null\r\n\r\n\t//array buffer\r\n\tif (arg instanceof ArrayBuffer) return arg\r\n\r\n\t//try to decode data-uri\r\n\tif (typeof arg === 'string') {\r\n\t\treturn str2ab(arg)\r\n\t}\r\n\r\n\t// File & Blob\r\n\t// if (isBlob(src) || (src instanceof global.File)) {\r\n\t\t// FIXME: we cannot use it here bc FileReader is async\r\n\t// }\r\n\r\n\t//array buffer view: TypedArray, DataView, Buffer etc\r\n\tif (ArrayBuffer.isView(arg)) {\r\n\t\t// if byteOffset is not 0, return sub-reference (slice is the only way)\r\n\t\tif (arg.byteOffset) {\r\n\t\t\treturn arg.buffer.slice(arg.byteOffset, arg.byteOffset + arg.byteLength)\r\n\t\t}\r\n\t\treturn arg.buffer\r\n\t}\r\n\r\n\t//buffer/data nested: NDArray, ImageData etc.\r\n\t//FIXME: NDArrays with custom data type may be invalid for this procedure\r\n\tif (arg.buffer || arg.data || arg._data) {\r\n\t\tvar result = toArrayBuffer(arg.buffer || arg.data || arg._data)\r\n\t\treturn result\r\n\t}\r\n\r\n\t// detect if flat\r\n\tif (Array.isArray(arg)) {\r\n\t\tfor (var i = 0; i < arg.length; i++) {\r\n\t\t\tif (arg[i].length != null) {\r\n\t\t\t\targ = flat(arg)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//array-like or unknown\r\n\t//consider Uint8Array knows how to treat the input\r\n\tvar result = new Uint8Array(arg)\r\n\r\n\tif (!result.length) return null\r\n\treturn result.buffer\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/to-array-buffer/index.js?");

/***/ }),

/***/ "./node_modules/to-uint8/index.js":
/*!****************************************!*\
  !*** ./node_modules/to-uint8/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* @module to-float32 */\r\n\r\n\r\n\r\nvar toab = __webpack_require__(/*! to-array-buffer */ \"./node_modules/to-array-buffer/index.js\")\r\nvar isFloat = __webpack_require__(/*! is-float-array */ \"./node_modules/is-float-array/index.js\")\r\nvar clamp = __webpack_require__(/*! clamp */ \"./node_modules/clamp/index.js\")\r\nvar flat = __webpack_require__(/*! arr-flatten */ \"./node_modules/arr-flatten/index.js\")\r\nvar isBase64 = __webpack_require__(/*! is-base64 */ \"./node_modules/is-base64/is-base64.js\")\r\n\r\nmodule.exports = function tou8 (src, detectFloat) {\r\n  if (!src) return null\r\n\r\n  if (src.data) src = src.data\r\n\r\n  // shortcut uint8s\r\n  if (src instanceof Uint8Array) return src\r\n  if (src instanceof Uint8ClampedArray) return new Uint8Array(src.buffer)\r\n\r\n  if (detectFloat == null) detectFloat = true\r\n\r\n  // if at least one component is an array - flatten data\r\n  if (Array.isArray(src)) {\r\n    for (var i = 0; i < src.length; i++) {\r\n      if (src[i] && src[i].length != null) {\r\n        src = flat(src)\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  // convert float to int\r\n  if (isFloat(src)) {\r\n\t  if (detectFloat) {\r\n\t    // if at least one pixel is more than 1, then does not convert input array\r\n      for (var i = 0; i < src.length; i++) {\r\n        if (src[i] > 1 || src[i] < 0) {\r\n          return uninfinite(new Uint8Array(src), src)\r\n        }\r\n      }\r\n    }\r\n\r\n    var pixels = new Uint8Array(src.length)\r\n    for (var i = 0; i < src.length; i++) {\r\n      pixels[i] = clamp(src[i], 0, 1) * 255\r\n    }\r\n\r\n    return uninfinite(pixels, src)\r\n\t}\r\n\r\n  // array-ish\r\n  if (src.length != null && typeof src !== 'string') {\r\n    return uninfinite(new Uint8Array(src), src)\r\n  }\r\n\r\n  // non-array\r\n  var buf = toab(src)\r\n  if (!buf) return null\r\n  return uninfinite(new Uint8Array(buf), src)\r\n}\r\n\r\n// disclose infinities\r\nfunction uninfinite(u, src) {\r\n  for (var i = 0; i < src.length; i++) {\r\n    if (src[i] === Infinity) u[i] = 255\r\n  }\r\n  return u\r\n}\r\n\n\n//# sourceURL=webpack:///./node_modules/to-uint8/index.js?");

/***/ }),

/***/ "./node_modules/type-name/index.js":
/*!*****************************************!*\
  !*** ./node_modules/type-name/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * type-name - Just a reasonable typeof\n *\n * https://github.com/twada/type-name\n *\n * Copyright (c) 2014-2016 Takuto Wada\n * Licensed under the MIT license.\n *   https://github.com/twada/type-name/blob/master/LICENSE\n */\n\n\nvar toStr = Object.prototype.toString;\n\nfunction funcName (f) {\n    if (f.name) {\n        return f.name;\n    }\n    var match = /^\\s*function\\s*([^\\(]*)/im.exec(f.toString());\n    return match ? match[1] : '';\n}\n\nfunction ctorName (obj) {\n    var strName = toStr.call(obj).slice(8, -1);\n    if ((strName === 'Object' || strName === 'Error') && obj.constructor) {\n        return funcName(obj.constructor);\n    }\n    return strName;\n}\n\nfunction typeName (val) {\n    var type;\n    if (val === null) {\n        return 'null';\n    }\n    type = typeof val;\n    if (type === 'object') {\n        return ctorName(val);\n    }\n    return type;\n}\n\nmodule.exports = typeName;\n\n\n//# sourceURL=webpack:///./node_modules/type-name/index.js?");

/***/ }),

/***/ "./node_modules/utils-copy-error/lib/copy.js":
/*!***************************************************!*\
  !*** ./node_modules/utils-copy-error/lib/copy.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar deepCopy = __webpack_require__( /*! utils-copy */ \"./node_modules/utils-copy/lib/index.js\" );\nvar getKeys = __webpack_require__( /*! object-keys */ \"./node_modules/object-keys/index.js\" ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n\n\n//# sourceURL=webpack:///./node_modules/utils-copy-error/lib/copy.js?");

/***/ }),

/***/ "./node_modules/utils-copy-error/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/utils-copy-error/lib/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// EXPORTS //\n\nmodule.exports = __webpack_require__( /*! ./copy.js */ \"./node_modules/utils-copy-error/lib/copy.js\" );\n\n\n//# sourceURL=webpack:///./node_modules/utils-copy-error/lib/index.js?");

/***/ }),

/***/ "./node_modules/utils-copy/lib/deepcopy.js":
/*!*************************************************!*\
  !*** ./node_modules/utils-copy/lib/deepcopy.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\n// MODULES //\n\nvar isArray = __webpack_require__( /*! validate.io-array */ \"./node_modules/validate.io-array/lib/index.js\" );\nvar isBuffer = __webpack_require__( /*! validate.io-buffer */ \"./node_modules/validate.io-buffer/lib/index.js\" );\nvar typeName = __webpack_require__( /*! type-name */ \"./node_modules/type-name/index.js\" );\nvar regex = __webpack_require__( /*! utils-regex-from-string */ \"./node_modules/utils-regex-from-string/lib/index.js\" );\nvar copyError = __webpack_require__( /*! utils-copy-error */ \"./node_modules/utils-copy-error/lib/index.js\" );\nvar indexOf = __webpack_require__( /*! utils-indexof */ \"./node_modules/utils-indexof/lib/index.js\" );\nvar objectKeys = __webpack_require__( /*! object-keys */ \"./node_modules/object-keys/index.js\" );\nvar typedArrays = __webpack_require__( /*! ./typedarrays.js */ \"./node_modules/utils-copy/lib/typedarrays.js\" );\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: cloneInstance( val )\n*\tClones a class instance.\n*\n*\tWARNING: this should only be used for simple cases. Any instances with privileged access to variables (e.g., within closures) cannot be cloned. This approach should be considered fragile.\n*\n*\tNOTE: the function is greedy, disregarding the notion of a 'level'. Instead, the function deep copies all properties, as we assume the concept of 'level' applies only to the class instance reference but not to its internal state. This prevents, in theory, two instances from sharing state.\n*\n* @private\n* @param {Object} val - class instance\n* @returns {Object} new instance\n*/\nfunction cloneInstance( val ) {\n\tvar cache = [];\n\tvar refs = [];\n\tvar names;\n\tvar name;\n\tvar desc;\n\tvar tmp;\n\tvar ref;\n\tvar i;\n\n\tref = Object.create( Object.getPrototypeOf( val ) );\n\tcache.push( val );\n\trefs.push( ref );\n\n\tnames = Object.getOwnPropertyNames( val );\n\tfor ( i = 0; i < names.length; i++ ) {\n\t\tname = names[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( val, name );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\ttmp = ( isArray( val[name] ) ) ? [] : {};\n\t\t\tdesc.value = deepCopy( val[name], tmp, cache, refs, -1 );\n\t\t}\n\t\tObject.defineProperty( ref, name, desc );\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( ref );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( ref );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( ref );\n\t}\n\treturn ref;\n} // end FUNCTION cloneInstance()\n\n\n// DEEP COPY //\n\n/**\n* FUNCTION: deepCopy( val, copy, cache, refs, level )\n*\tRecursively performs a deep copy of an input object.\n*\n* @private\n* @param {Array|Object} val - value to copy\n* @param {Array|Object} copy - copy\n* @param {Array} cache - an array of visited objects\n* @param {Array} refs - an array of object references\n* @param {Number} level - copy depth\n* @returns {*} deep copy\n*/\nfunction deepCopy( val, copy, cache, refs, level ) {\n\tvar parent;\n\tvar keys;\n\tvar name;\n\tvar desc;\n\tvar ctor;\n\tvar key;\n\tvar ref;\n\tvar x;\n\tvar i;\n\tvar j;\n\n\tlevel = level - 1;\n\n\t// Primitives and functions...\n\tif (\n\t\ttypeof val !== 'object' ||\n\t\tval === null\n\t) {\n\t\treturn val;\n\t}\n\tif ( isBuffer( val ) ) {\n\t\treturn new Buffer( val );\n\t}\n\tif ( val instanceof Error ) {\n\t\treturn copyError( val );\n\t}\n\t// Objects...\n\tname = typeName( val );\n\n\tif ( name === 'Date' ) {\n\t\treturn new Date( +val );\n\t}\n\tif ( name === 'RegExp' ) {\n\t\treturn regex( val.toString() );\n\t}\n\tif ( name === 'Set' ) {\n\t\treturn new Set( val );\n\t}\n\tif ( name === 'Map' ) {\n\t\treturn new Map( val );\n\t}\n\tif (\n\t\tname === 'String' ||\n\t\tname === 'Boolean' ||\n\t\tname === 'Number'\n\t) {\n\t\t// Return an equivalent primitive!\n\t\treturn val.valueOf();\n\t}\n\tctor = typedArrays[ name ];\n\tif ( ctor ) {\n\t\treturn ctor( val );\n\t}\n\t// Class instances...\n\tif (\n\t\tname !== 'Array' &&\n\t\tname !== 'Object'\n\t) {\n\t\t// Cloning requires ES5 or higher...\n\t\tif ( typeof Object.freeze === 'function' ) {\n\t\t\treturn cloneInstance( val );\n\t\t}\n\t\treturn {};\n\t}\n\t// Arrays and plain objects...\n\tkeys = objectKeys( val );\n\tif ( level > 0 ) {\n\t\tparent = name;\n\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\tkey = keys[ j ];\n\t\t\tx = val[ key ];\n\n\t\t\t// Primitive, Buffer, special class instance...\n\t\t\tname = typeName( x );\n\t\t\tif (\n\t\t\t\ttypeof x !== 'object' ||\n\t\t\t\tx === null ||\n\t\t\t\t(\n\t\t\t\t\tname !== 'Array' &&\n\t\t\t\t\tname !== 'Object'\n\t\t\t\t) ||\n\t\t\t\tisBuffer( x )\n\t\t\t) {\n\t\t\t\tif ( parent === 'Object' ) {\n\t\t\t\t\tdesc = Object.getOwnPropertyDescriptor( val, key );\n\t\t\t\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\t\t\t\tdesc.value = deepCopy( x );\n\t\t\t\t\t}\n\t\t\t\t\tObject.defineProperty( copy, key, desc );\n\t\t\t\t} else {\n\t\t\t\t\tcopy[ key ] = deepCopy( x );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Circular reference...\n\t\t\ti = indexOf( cache, x );\n\t\t\tif ( i !== -1 ) {\n\t\t\t\tcopy[ key ] = refs[ i ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Plain array or object...\n\t\t\tref = ( isArray(x) ) ? [] : {};\n\t\t\tcache.push( x );\n\t\t\trefs.push( ref );\n\t\t\tif ( parent === 'Array' ) {\n\t\t\t\tcopy[ key ] = deepCopy( x, ref, cache, refs, level );\n\t\t\t} else {\n\t\t\t\tdesc = Object.getOwnPropertyDescriptor( val, key );\n\t\t\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\t\t\tdesc.value = deepCopy( x, ref, cache, refs, level );\n\t\t\t\t}\n\t\t\t\tObject.defineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ( name === 'Array' ) {\n\t\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\t\tkey = keys[ j ];\n\t\t\t\tcopy[ key ] = val[ key ];\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( j = 0; j < keys.length; j++ ) {\n\t\t\t\tkey = keys[ j ];\n\t\t\t\tdesc = Object.getOwnPropertyDescriptor( val, key );\n\t\t\t\tObject.defineProperty( copy, key, desc );\n\t\t\t}\n\t\t}\n\t}\n\tif ( !Object.isExtensible( val ) ) {\n\t\tObject.preventExtensions( copy );\n\t}\n\tif ( Object.isSealed( val ) ) {\n\t\tObject.seal( copy );\n\t}\n\tif ( Object.isFrozen( val ) ) {\n\t\tObject.freeze( copy );\n\t}\n\treturn copy;\n} // end FUNCTION deepCopy()\n\n\n// EXPORTS //\n\nmodule.exports = deepCopy;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/utils-copy/lib/deepcopy.js?");

/***/ }),

/***/ "./node_modules/utils-copy/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/utils-copy/lib/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar isArray = __webpack_require__( /*! validate.io-array */ \"./node_modules/validate.io-array/lib/index.js\" );\nvar isNonNegativeInteger = __webpack_require__( /*! validate.io-nonnegative-integer */ \"./node_modules/validate.io-nonnegative-integer/lib/index.js\" );\nvar PINF = __webpack_require__( /*! const-pinf-float64 */ \"./node_modules/const-pinf-float64/lib/index.js\" );\nvar deepCopy = __webpack_require__( /*! ./deepcopy.js */ \"./node_modules/utils-copy/lib/deepcopy.js\" );\n\n\n// COPY //\n\n/**\n* FUNCTION: createCopy( value[, level] )\n*\tCopy or deep clone a value to an arbitrary depth.\n*\n* @param {*} value - value to be copied\n* @param {Number} [level=+infinity] - option to control copy depth. For example, set to `0` for a shallow copy. Default behavior returns a full deep copy.\n* @returns {*} copy\n*/\nfunction createCopy( val, level ) {\n\tvar copy;\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( level ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. Level must be a nonnegative integer. Value: `' + level + '`.' );\n\t\t}\n\t\tif ( level === 0 ) {\n\t\t\treturn val;\n\t\t}\n\t} else {\n\t\tlevel = PINF;\n\t}\n\tcopy = ( isArray(val) ) ? [] : {};\n\treturn deepCopy( val, copy, [val], [copy], level );\n} // end FUNCTION createCopy()\n\n\n// EXPORTS //\n\nmodule.exports = createCopy;\n\n\n//# sourceURL=webpack:///./node_modules/utils-copy/lib/index.js?");

/***/ }),

/***/ "./node_modules/utils-copy/lib/typedarrays.js":
/*!****************************************************!*\
  !*** ./node_modules/utils-copy/lib/typedarrays.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar objectKeys = __webpack_require__( /*! object-keys */ \"./node_modules/object-keys/index.js\" );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n\n\n//# sourceURL=webpack:///./node_modules/utils-copy/lib/typedarrays.js?");

/***/ }),

/***/ "./node_modules/utils-indexof/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/utils-indexof/lib/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar isArrayLike = __webpack_require__( /*! validate.io-array-like */ \"./node_modules/validate.io-array-like/lib/index.js\" );\nvar isInteger = __webpack_require__( /*! validate.io-integer-primitive */ \"./node_modules/validate.io-integer-primitive/lib/index.js\" );\n\n\n// INDEXOF //\n\n/**\n* FUNCTION: indexOf( arr, searchElement[, fromIndex] )\n*\tReturns the first index at which a given element can be found.\n*\n* @param {Array|String|Object} arr - array-like object\n* @param {*} searchElement - element to find\n* @param {Number} [fromIndex] - starting index (if negative, the start index is determined relative to last element)\n* @returns {Number} index or -1\n*/\nfunction indexOf( arr, searchElement, fromIndex ) {\n\tvar len;\n\tvar i;\n\tif ( !isArrayLike( arr ) ) {\n\t\tthrow new TypeError( 'invalid input argument. First argument must be an array-like object. Value: `' + arr + '`.' );\n\t}\n\tlen = arr.length;\n\tif ( len === 0 ) {\n\t\treturn -1;\n\t}\n\tif ( arguments.length === 3 ) {\n\t\tif ( !isInteger( fromIndex ) ) {\n\t\t\tthrow new TypeError( 'invalid input argument. `fromIndex` must be an integer. Value: `' + fromIndex + '`.' );\n\t\t}\n\t\tif ( fromIndex >= 0 ) {\n\t\t\tif ( fromIndex >= len ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\ti = fromIndex;\n\t\t} else {\n\t\t\ti = len + fromIndex;\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ti = 0;\n\t}\n\tif ( searchElement !== searchElement ) { // check for NaN\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] !== arr[ i ] ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( arr[ i ] === searchElement ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n} // end FUNCTION indexOf()\n\n\n// EXPORTS //\n\nmodule.exports = indexOf;\n\n\n//# sourceURL=webpack:///./node_modules/utils-indexof/lib/index.js?");

/***/ }),

/***/ "./node_modules/utils-regex-from-string/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/utils-regex-from-string/lib/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar isString = __webpack_require__( /*! validate.io-string-primitive */ \"./node_modules/validate.io-string-primitive/lib/index.js\" ),\n\tRE = __webpack_require__( /*! regex-regex */ \"./node_modules/regex-regex/lib/index.js\" );\n\n\n// REGEX //\n\n/**\n* FUNCTION: regex( str )\n*\tParses a regular expression string and returns a new regular expression.\n*\n* @param {String} str - regular expression string\n* @returns {RegExp|Null} regular expression or null\n*/\nfunction regex( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide a regular expression string. Value: `' + str + '`.' );\n\t}\n\t// Capture the regular expression pattern and any flags:\n\tstr = RE.exec( str );\n\n\t// Create a new regular expression:\n\treturn ( str ) ? new RegExp( str[1], str[2] ) : null;\n} // end FUNCTION regex()\n\n\n// EXPORTS //\n\nmodule.exports = regex;\n\n\n//# sourceURL=webpack:///./node_modules/utils-regex-from-string/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-array-like/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/validate.io-array-like/lib/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar isInteger = __webpack_require__( /*! validate.io-integer-primitive */ \"./node_modules/validate.io-integer-primitive/lib/index.js\" );\n\n\n// CONSTANTS //\n\nvar MAX = __webpack_require__( /*! const-max-uint32 */ \"./node_modules/const-max-uint32/lib/index.js\" );\n\n\n// IS ARRAY-LIKE //\n\n/**\n* FUNCTION: isArrayLike( value )\n*\tValidates if a value is array-like.\n*\n* @param {*} value - value to validate\n* @param {Boolean} boolean indicating if a value is array-like\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX\n\t);\n} // end FUNCTION isArrayLike()\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-array-like/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-array/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/validate.io-array/lib/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n* FUNCTION: isArray( value )\n*\tValidates if a value is an array.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an array\n*/\nfunction isArray( value ) {\n\treturn Object.prototype.toString.call( value ) === '[object Array]';\n} // end FUNCTION isArray()\n\n// EXPORTS //\n\nmodule.exports = Array.isArray || isArray;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-array/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-buffer/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/validate.io-buffer/lib/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n* FUNCTION: isBuffer( value )\n*\tValidates if a value is a Buffer object.\n*\n* @param {*} value - value to validate\n* @returns {Boolean} boolean indicating if a value is a Buffer object\n*/\nfunction isBuffer( val ) {\n\treturn typeof val === 'object' &&\n\t\tval !== null &&\n\t\t(\n\t\t\tval._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tval.constructor &&\n\t\t\t\ttypeof val.constructor.isBuffer === 'function' &&\n\t\t\t\tval.constructor.isBuffer( val )\n\t\t\t)\n\t\t);\n} // end FUNCTION isBuffer()\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-buffer/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-integer-primitive/lib/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/validate.io-integer-primitive/lib/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// MODULES //\n\nvar isNumber = __webpack_require__( /*! validate.io-number-primitive */ \"./node_modules/validate.io-number-primitive/lib/index.js\" );\n\n\n// IS INTEGER //\n\n/**\n* FUNCTION: isInteger( value )\n*\tValidates if a value is a number primitive, excluding `NaN`, and an integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a integer primitive\n*/\nfunction isInteger( value ) {\n\treturn isNumber( value ) && value%1 === 0;\n} // end FUNCTION isInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-integer-primitive/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-integer/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/validate.io-integer/lib/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n*\n*\tVALIDATE: integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n\n\n// MODULES //\n\nvar isNumber = __webpack_require__( /*! validate.io-number */ \"./node_modules/validate.io-number/lib/index.js\" );\n\n\n// ISINTEGER //\n\n/**\n* FUNCTION: isInteger( value )\n*\tValidates if a value is an integer.\n*\n* @param {Number} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an integer\n*/\nfunction isInteger( value ) {\n\treturn isNumber( value ) && value%1 === 0;\n} // end FUNCTION isInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-integer/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-ndarray-like/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/validate.io-ndarray-like/lib/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n* FUNCTION: ndarrayLike( value )\n*\tValidates if a value is ndarray-like.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is ndarray-like\n*/\nfunction ndarrayLike( v ) {\n\treturn v !== null &&\n\t\ttypeof v === 'object' &&\n\t\ttypeof v.data === 'object' &&\n\t\ttypeof v.shape === 'object' &&\n\t\ttypeof v.strides === 'object' &&\n\t\ttypeof v.offset === 'number' &&\n\t\ttypeof v.dtype === 'string' &&\n\t\ttypeof v.length === 'number';\n} // end FUNCTION ndarrayLike()\n\n\n// EXPORTS //\n\nmodule.exports = ndarrayLike;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-ndarray-like/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-nonnegative-integer/lib/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/validate.io-nonnegative-integer/lib/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n*\n*\tVALIDATE: nonnegative-integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a nonnegative integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n\n\n// MODULES //\n\nvar isInteger = __webpack_require__( /*! validate.io-integer */ \"./node_modules/validate.io-integer/lib/index.js\" );\n\n\n// IS NONNEGATIVE INTEGER //\n\n/**\n* FUNCTION: isNonNegativeInteger( value )\n*\tValidates if a value is a nonnegative integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a nonnegative integer\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn isInteger( value ) && value >= 0;\n} // end FUNCTION isNonNegativeInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-nonnegative-integer/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-number-primitive/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/validate.io-number-primitive/lib/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n*\n*\tVALIDATE: number-primitive\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a number primitive.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n\n\n/**\n* FUNCTION: isNumber( value )\n*\tValidates if a value is a number primitive, excluding `NaN`.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a number primitive\n*/\nfunction isNumber( value ) {\n\treturn (typeof value === 'number') && (value === value);\n} // end FUNCTION isNumber()\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-number-primitive/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-number/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/validate.io-number/lib/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n*\n*\tVALIDATE: number\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a number.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n\n\n/**\n* FUNCTION: isNumber( value )\n*\tValidates if a value is a number.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a number\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' || Object.prototype.toString.call( value ) === '[object Number]' ) && value.valueOf() === value.valueOf();\n} // end FUNCTION isNumber()\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-number/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-positive-integer/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/validate.io-positive-integer/lib/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n*\n*\tVALIDATE: positive-integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a positive integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n\n\n// MODULES //\n\nvar isInteger = __webpack_require__( /*! validate.io-integer */ \"./node_modules/validate.io-integer/lib/index.js\" );\n\n\n// IS POSITIVE INTEGER //\n\n/**\n* FUNCTION: isPositiveInteger( value )\n*\tValidates if a value is a positive integer.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is a positive integer\n*/\nfunction isPositiveInteger( value ) {\n\treturn isInteger( value ) && value > 0;\n} // end FUNCTION isPositiveInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-positive-integer/lib/index.js?");

/***/ }),

/***/ "./node_modules/validate.io-string-primitive/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/validate.io-string-primitive/lib/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {Boolean} boolean indicating if a value is a string primitive\n*/\nfunction isString( value ) {\n\treturn typeof value === 'string';\n} // end FUNCTION isString()\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n\n\n//# sourceURL=webpack:///./node_modules/validate.io-string-primitive/lib/index.js?");

/***/ }),

/***/ "./node_modules/weak-map/weak-map.js":
/*!*******************************************!*\
  !*** ./node_modules/weak-map/weak-map.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright (C) 2011 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Install a leaky WeakMap emulation on platforms that\n * don't provide a built-in one.\n *\n * <p>Assumes that an ES5 platform where, if {@code WeakMap} is\n * already present, then it conforms to the anticipated ES6\n * specification. To run this file on an ES5 or almost ES5\n * implementation where the {@code WeakMap} specification does not\n * quite conform, run <code>repairES5.js</code> first.\n *\n * <p>Even though WeakMapModule is not global, the linter thinks it\n * is, which is why it is in the overrides list below.\n *\n * <p>NOTE: Before using this WeakMap emulation in a non-SES\n * environment, see the note below about hiddenRecord.\n *\n * @author Mark S. Miller\n * @requires crypto, ArrayBuffer, Uint8Array, navigator, console\n * @overrides WeakMap, ses, Proxy\n * @overrides WeakMapModule\n */\n\n/**\n * This {@code WeakMap} emulation is observably equivalent to the\n * ES-Harmony WeakMap, but with leakier garbage collection properties.\n *\n * <p>As with true WeakMaps, in this emulation, a key does not\n * retain maps indexed by that key and (crucially) a map does not\n * retain the keys it indexes. A map by itself also does not retain\n * the values associated with that map.\n *\n * <p>However, the values associated with a key in some map are\n * retained so long as that key is retained and those associations are\n * not overridden. For example, when used to support membranes, all\n * values exported from a given membrane will live for the lifetime\n * they would have had in the absence of an interposed membrane. Even\n * when the membrane is revoked, all objects that would have been\n * reachable in the absence of revocation will still be reachable, as\n * far as the GC can tell, even though they will no longer be relevant\n * to ongoing computation.\n *\n * <p>The API implemented here is approximately the API as implemented\n * in FF6.0a1 and agreed to by MarkM, Andreas Gal, and Dave Herman,\n * rather than the offially approved proposal page. TODO(erights):\n * upgrade the ecmascript WeakMap proposal page to explain this API\n * change and present to EcmaScript committee for their approval.\n *\n * <p>The first difference between the emulation here and that in\n * FF6.0a1 is the presence of non enumerable {@code get___, has___,\n * set___, and delete___} methods on WeakMap instances to represent\n * what would be the hidden internal properties of a primitive\n * implementation. Whereas the FF6.0a1 WeakMap.prototype methods\n * require their {@code this} to be a genuine WeakMap instance (i.e.,\n * an object of {@code [[Class]]} \"WeakMap}), since there is nothing\n * unforgeable about the pseudo-internal method names used here,\n * nothing prevents these emulated prototype methods from being\n * applied to non-WeakMaps with pseudo-internal methods of the same\n * names.\n *\n * <p>Another difference is that our emulated {@code\n * WeakMap.prototype} is not itself a WeakMap. A problem with the\n * current FF6.0a1 API is that WeakMap.prototype is itself a WeakMap\n * providing ambient mutability and an ambient communications\n * channel. Thus, if a WeakMap is already present and has this\n * problem, repairES5.js wraps it in a safe wrappper in order to\n * prevent access to this channel. (See\n * PATCH_MUTABLE_FROZEN_WEAKMAP_PROTO in repairES5.js).\n */\n\n/**\n * If this is a full <a href=\n * \"http://code.google.com/p/es-lab/wiki/SecureableES5\"\n * >secureable ES5</a> platform and the ES-Harmony {@code WeakMap} is\n * absent, install an approximate emulation.\n *\n * <p>If WeakMap is present but cannot store some objects, use our approximate\n * emulation as a wrapper.\n *\n * <p>If this is almost a secureable ES5 platform, then WeakMap.js\n * should be run after repairES5.js.\n *\n * <p>See {@code WeakMap} for documentation of the garbage collection\n * properties of this WeakMap emulation.\n */\n(function WeakMapModule() {\n  \"use strict\";\n\n  if (typeof ses !== 'undefined' && ses.ok && !ses.ok()) {\n    // already too broken, so give up\n    return;\n  }\n\n  /**\n   * In some cases (current Firefox), we must make a choice betweeen a\n   * WeakMap which is capable of using all varieties of host objects as\n   * keys and one which is capable of safely using proxies as keys. See\n   * comments below about HostWeakMap and DoubleWeakMap for details.\n   *\n   * This function (which is a global, not exposed to guests) marks a\n   * WeakMap as permitted to do what is necessary to index all host\n   * objects, at the cost of making it unsafe for proxies.\n   *\n   * Do not apply this function to anything which is not a genuine\n   * fresh WeakMap.\n   */\n  function weakMapPermitHostObjects(map) {\n    // identity of function used as a secret -- good enough and cheap\n    if (map.permitHostObjects___) {\n      map.permitHostObjects___(weakMapPermitHostObjects);\n    }\n  }\n  if (typeof ses !== 'undefined') {\n    ses.weakMapPermitHostObjects = weakMapPermitHostObjects;\n  }\n\n  // IE 11 has no Proxy but has a broken WeakMap such that we need to patch\n  // it using DoubleWeakMap; this flag tells DoubleWeakMap so.\n  var doubleWeakMapCheckSilentFailure = false;\n\n  // Check if there is already a good-enough WeakMap implementation, and if so\n  // exit without replacing it.\n  if (typeof WeakMap === 'function') {\n    var HostWeakMap = WeakMap;\n    // There is a WeakMap -- is it good enough?\n    if (typeof navigator !== 'undefined' &&\n        /Firefox/.test(navigator.userAgent)) {\n      // We're now *assuming not*, because as of this writing (2013-05-06)\n      // Firefox's WeakMaps have a miscellany of objects they won't accept, and\n      // we don't want to make an exhaustive list, and testing for just one\n      // will be a problem if that one is fixed alone (as they did for Event).\n\n      // If there is a platform that we *can* reliably test on, here's how to\n      // do it:\n      //  var problematic = ... ;\n      //  var testHostMap = new HostWeakMap();\n      //  try {\n      //    testHostMap.set(problematic, 1);  // Firefox 20 will throw here\n      //    if (testHostMap.get(problematic) === 1) {\n      //      return;\n      //    }\n      //  } catch (e) {}\n\n    } else {\n      // IE 11 bug: WeakMaps silently fail to store frozen objects.\n      var testMap = new HostWeakMap();\n      var testObject = Object.freeze({});\n      testMap.set(testObject, 1);\n      if (testMap.get(testObject) !== 1) {\n        doubleWeakMapCheckSilentFailure = true;\n        // Fall through to installing our WeakMap.\n      } else {\n        module.exports = WeakMap;\n        return;\n      }\n    }\n  }\n\n  var hop = Object.prototype.hasOwnProperty;\n  var gopn = Object.getOwnPropertyNames;\n  var defProp = Object.defineProperty;\n  var isExtensible = Object.isExtensible;\n\n  /**\n   * Security depends on HIDDEN_NAME being both <i>unguessable</i> and\n   * <i>undiscoverable</i> by untrusted code.\n   *\n   * <p>Given the known weaknesses of Math.random() on existing\n   * browsers, it does not generate unguessability we can be confident\n   * of.\n   *\n   * <p>It is the monkey patching logic in this file that is intended\n   * to ensure undiscoverability. The basic idea is that there are\n   * three fundamental means of discovering properties of an object:\n   * The for/in loop, Object.keys(), and Object.getOwnPropertyNames(),\n   * as well as some proposed ES6 extensions that appear on our\n   * whitelist. The first two only discover enumerable properties, and\n   * we only use HIDDEN_NAME to name a non-enumerable property, so the\n   * only remaining threat should be getOwnPropertyNames and some\n   * proposed ES6 extensions that appear on our whitelist. We monkey\n   * patch them to remove HIDDEN_NAME from the list of properties they\n   * returns.\n   *\n   * <p>TODO(erights): On a platform with built-in Proxies, proxies\n   * could be used to trap and thereby discover the HIDDEN_NAME, so we\n   * need to monkey patch Proxy.create, Proxy.createFunction, etc, in\n   * order to wrap the provided handler with the real handler which\n   * filters out all traps using HIDDEN_NAME.\n   *\n   * <p>TODO(erights): Revisit Mike Stay's suggestion that we use an\n   * encapsulated function at a not-necessarily-secret name, which\n   * uses the Stiegler shared-state rights amplification pattern to\n   * reveal the associated value only to the WeakMap in which this key\n   * is associated with that value. Since only the key retains the\n   * function, the function can also remember the key without causing\n   * leakage of the key, so this doesn't violate our general gc\n   * goals. In addition, because the name need not be a guarded\n   * secret, we could efficiently handle cross-frame frozen keys.\n   */\n  var HIDDEN_NAME_PREFIX = 'weakmap:';\n  var HIDDEN_NAME = HIDDEN_NAME_PREFIX + 'ident:' + Math.random() + '___';\n\n  if (typeof crypto !== 'undefined' &&\n      typeof crypto.getRandomValues === 'function' &&\n      typeof ArrayBuffer === 'function' &&\n      typeof Uint8Array === 'function') {\n    var ab = new ArrayBuffer(25);\n    var u8s = new Uint8Array(ab);\n    crypto.getRandomValues(u8s);\n    HIDDEN_NAME = HIDDEN_NAME_PREFIX + 'rand:' +\n      Array.prototype.map.call(u8s, function(u8) {\n        return (u8 % 36).toString(36);\n      }).join('') + '___';\n  }\n\n  function isNotHiddenName(name) {\n    return !(\n        name.substr(0, HIDDEN_NAME_PREFIX.length) == HIDDEN_NAME_PREFIX &&\n        name.substr(name.length - 3) === '___');\n  }\n\n  /**\n   * Monkey patch getOwnPropertyNames to avoid revealing the\n   * HIDDEN_NAME.\n   *\n   * <p>The ES5.1 spec requires each name to appear only once, but as\n   * of this writing, this requirement is controversial for ES6, so we\n   * made this code robust against this case. If the resulting extra\n   * search turns out to be expensive, we can probably relax this once\n   * ES6 is adequately supported on all major browsers, iff no browser\n   * versions we support at that time have relaxed this constraint\n   * without providing built-in ES6 WeakMaps.\n   */\n  defProp(Object, 'getOwnPropertyNames', {\n    value: function fakeGetOwnPropertyNames(obj) {\n      return gopn(obj).filter(isNotHiddenName);\n    }\n  });\n\n  /**\n   * getPropertyNames is not in ES5 but it is proposed for ES6 and\n   * does appear in our whitelist, so we need to clean it too.\n   */\n  if ('getPropertyNames' in Object) {\n    var originalGetPropertyNames = Object.getPropertyNames;\n    defProp(Object, 'getPropertyNames', {\n      value: function fakeGetPropertyNames(obj) {\n        return originalGetPropertyNames(obj).filter(isNotHiddenName);\n      }\n    });\n  }\n\n  /**\n   * <p>To treat objects as identity-keys with reasonable efficiency\n   * on ES5 by itself (i.e., without any object-keyed collections), we\n   * need to add a hidden property to such key objects when we\n   * can. This raises several issues:\n   * <ul>\n   * <li>Arranging to add this property to objects before we lose the\n   *     chance, and\n   * <li>Hiding the existence of this new property from most\n   *     JavaScript code.\n   * <li>Preventing <i>certification theft</i>, where one object is\n   *     created falsely claiming to be the key of an association\n   *     actually keyed by another object.\n   * <li>Preventing <i>value theft</i>, where untrusted code with\n   *     access to a key object but not a weak map nevertheless\n   *     obtains access to the value associated with that key in that\n   *     weak map.\n   * </ul>\n   * We do so by\n   * <ul>\n   * <li>Making the name of the hidden property unguessable, so \"[]\"\n   *     indexing, which we cannot intercept, cannot be used to access\n   *     a property without knowing the name.\n   * <li>Making the hidden property non-enumerable, so we need not\n   *     worry about for-in loops or {@code Object.keys},\n   * <li>monkey patching those reflective methods that would\n   *     prevent extensions, to add this hidden property first,\n   * <li>monkey patching those methods that would reveal this\n   *     hidden property.\n   * </ul>\n   * Unfortunately, because of same-origin iframes, we cannot reliably\n   * add this hidden property before an object becomes\n   * non-extensible. Instead, if we encounter a non-extensible object\n   * without a hidden record that we can detect (whether or not it has\n   * a hidden record stored under a name secret to us), then we just\n   * use the key object itself to represent its identity in a brute\n   * force leaky map stored in the weak map, losing all the advantages\n   * of weakness for these.\n   */\n  function getHiddenRecord(key) {\n    if (key !== Object(key)) {\n      throw new TypeError('Not an object: ' + key);\n    }\n    var hiddenRecord = key[HIDDEN_NAME];\n    if (hiddenRecord && hiddenRecord.key === key) { return hiddenRecord; }\n    if (!isExtensible(key)) {\n      // Weak map must brute force, as explained in doc-comment above.\n      return void 0;\n    }\n\n    // The hiddenRecord and the key point directly at each other, via\n    // the \"key\" and HIDDEN_NAME properties respectively. The key\n    // field is for quickly verifying that this hidden record is an\n    // own property, not a hidden record from up the prototype chain.\n    //\n    // NOTE: Because this WeakMap emulation is meant only for systems like\n    // SES where Object.prototype is frozen without any numeric\n    // properties, it is ok to use an object literal for the hiddenRecord.\n    // This has two advantages:\n    // * It is much faster in a performance critical place\n    // * It avoids relying on Object.create(null), which had been\n    //   problematic on Chrome 28.0.1480.0. See\n    //   https://code.google.com/p/google-caja/issues/detail?id=1687\n    hiddenRecord = { key: key };\n\n    // When using this WeakMap emulation on platforms where\n    // Object.prototype might not be frozen and Object.create(null) is\n    // reliable, use the following two commented out lines instead.\n    // hiddenRecord = Object.create(null);\n    // hiddenRecord.key = key;\n\n    // Please contact us if you need this to work on platforms where\n    // Object.prototype might not be frozen and\n    // Object.create(null) might not be reliable.\n\n    try {\n      defProp(key, HIDDEN_NAME, {\n        value: hiddenRecord,\n        writable: false,\n        enumerable: false,\n        configurable: false\n      });\n      return hiddenRecord;\n    } catch (error) {\n      // Under some circumstances, isExtensible seems to misreport whether\n      // the HIDDEN_NAME can be defined.\n      // The circumstances have not been isolated, but at least affect\n      // Node.js v0.10.26 on TravisCI / Linux, but not the same version of\n      // Node.js on OS X.\n      return void 0;\n    }\n  }\n\n  /**\n   * Monkey patch operations that would make their argument\n   * non-extensible.\n   *\n   * <p>The monkey patched versions throw a TypeError if their\n   * argument is not an object, so it should only be done to functions\n   * that should throw a TypeError anyway if their argument is not an\n   * object.\n   */\n  (function(){\n    var oldFreeze = Object.freeze;\n    defProp(Object, 'freeze', {\n      value: function identifyingFreeze(obj) {\n        getHiddenRecord(obj);\n        return oldFreeze(obj);\n      }\n    });\n    var oldSeal = Object.seal;\n    defProp(Object, 'seal', {\n      value: function identifyingSeal(obj) {\n        getHiddenRecord(obj);\n        return oldSeal(obj);\n      }\n    });\n    var oldPreventExtensions = Object.preventExtensions;\n    defProp(Object, 'preventExtensions', {\n      value: function identifyingPreventExtensions(obj) {\n        getHiddenRecord(obj);\n        return oldPreventExtensions(obj);\n      }\n    });\n  })();\n\n  function constFunc(func) {\n    func.prototype = null;\n    return Object.freeze(func);\n  }\n\n  var calledAsFunctionWarningDone = false;\n  function calledAsFunctionWarning() {\n    // Future ES6 WeakMap is currently (2013-09-10) expected to reject WeakMap()\n    // but we used to permit it and do it ourselves, so warn only.\n    if (!calledAsFunctionWarningDone && typeof console !== 'undefined') {\n      calledAsFunctionWarningDone = true;\n      console.warn('WeakMap should be invoked as new WeakMap(), not ' +\n          'WeakMap(). This will be an error in the future.');\n    }\n  }\n\n  var nextId = 0;\n\n  var OurWeakMap = function() {\n    if (!(this instanceof OurWeakMap)) {  // approximate test for new ...()\n      calledAsFunctionWarning();\n    }\n\n    // We are currently (12/25/2012) never encountering any prematurely\n    // non-extensible keys.\n    var keys = []; // brute force for prematurely non-extensible keys.\n    var values = []; // brute force for corresponding values.\n    var id = nextId++;\n\n    function get___(key, opt_default) {\n      var index;\n      var hiddenRecord = getHiddenRecord(key);\n      if (hiddenRecord) {\n        return id in hiddenRecord ? hiddenRecord[id] : opt_default;\n      } else {\n        index = keys.indexOf(key);\n        return index >= 0 ? values[index] : opt_default;\n      }\n    }\n\n    function has___(key) {\n      var hiddenRecord = getHiddenRecord(key);\n      if (hiddenRecord) {\n        return id in hiddenRecord;\n      } else {\n        return keys.indexOf(key) >= 0;\n      }\n    }\n\n    function set___(key, value) {\n      var index;\n      var hiddenRecord = getHiddenRecord(key);\n      if (hiddenRecord) {\n        hiddenRecord[id] = value;\n      } else {\n        index = keys.indexOf(key);\n        if (index >= 0) {\n          values[index] = value;\n        } else {\n          // Since some browsers preemptively terminate slow turns but\n          // then continue computing with presumably corrupted heap\n          // state, we here defensively get keys.length first and then\n          // use it to update both the values and keys arrays, keeping\n          // them in sync.\n          index = keys.length;\n          values[index] = value;\n          // If we crash here, values will be one longer than keys.\n          keys[index] = key;\n        }\n      }\n      return this;\n    }\n\n    function delete___(key) {\n      var hiddenRecord = getHiddenRecord(key);\n      var index, lastIndex;\n      if (hiddenRecord) {\n        return id in hiddenRecord && delete hiddenRecord[id];\n      } else {\n        index = keys.indexOf(key);\n        if (index < 0) {\n          return false;\n        }\n        // Since some browsers preemptively terminate slow turns but\n        // then continue computing with potentially corrupted heap\n        // state, we here defensively get keys.length first and then use\n        // it to update both the keys and the values array, keeping\n        // them in sync. We update the two with an order of assignments,\n        // such that any prefix of these assignments will preserve the\n        // key/value correspondence, either before or after the delete.\n        // Note that this needs to work correctly when index === lastIndex.\n        lastIndex = keys.length - 1;\n        keys[index] = void 0;\n        // If we crash here, there's a void 0 in the keys array, but\n        // no operation will cause a \"keys.indexOf(void 0)\", since\n        // getHiddenRecord(void 0) will always throw an error first.\n        values[index] = values[lastIndex];\n        // If we crash here, values[index] cannot be found here,\n        // because keys[index] is void 0.\n        keys[index] = keys[lastIndex];\n        // If index === lastIndex and we crash here, then keys[index]\n        // is still void 0, since the aliasing killed the previous key.\n        keys.length = lastIndex;\n        // If we crash here, keys will be one shorter than values.\n        values.length = lastIndex;\n        return true;\n      }\n    }\n\n    return Object.create(OurWeakMap.prototype, {\n      get___:    { value: constFunc(get___) },\n      has___:    { value: constFunc(has___) },\n      set___:    { value: constFunc(set___) },\n      delete___: { value: constFunc(delete___) }\n    });\n  };\n\n  OurWeakMap.prototype = Object.create(Object.prototype, {\n    get: {\n      /**\n       * Return the value most recently associated with key, or\n       * opt_default if none.\n       */\n      value: function get(key, opt_default) {\n        return this.get___(key, opt_default);\n      },\n      writable: true,\n      configurable: true\n    },\n\n    has: {\n      /**\n       * Is there a value associated with key in this WeakMap?\n       */\n      value: function has(key) {\n        return this.has___(key);\n      },\n      writable: true,\n      configurable: true\n    },\n\n    set: {\n      /**\n       * Associate value with key in this WeakMap, overwriting any\n       * previous association if present.\n       */\n      value: function set(key, value) {\n        return this.set___(key, value);\n      },\n      writable: true,\n      configurable: true\n    },\n\n    'delete': {\n      /**\n       * Remove any association for key in this WeakMap, returning\n       * whether there was one.\n       *\n       * <p>Note that the boolean return here does not work like the\n       * {@code delete} operator. The {@code delete} operator returns\n       * whether the deletion succeeds at bringing about a state in\n       * which the deleted property is absent. The {@code delete}\n       * operator therefore returns true if the property was already\n       * absent, whereas this {@code delete} method returns false if\n       * the association was already absent.\n       */\n      value: function remove(key) {\n        return this.delete___(key);\n      },\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (typeof HostWeakMap === 'function') {\n    (function() {\n      // If we got here, then the platform has a WeakMap but we are concerned\n      // that it may refuse to store some key types. Therefore, make a map\n      // implementation which makes use of both as possible.\n\n      // In this mode we are always using double maps, so we are not proxy-safe.\n      // This combination does not occur in any known browser, but we had best\n      // be safe.\n      if (doubleWeakMapCheckSilentFailure && typeof Proxy !== 'undefined') {\n        Proxy = undefined;\n      }\n\n      function DoubleWeakMap() {\n        if (!(this instanceof OurWeakMap)) {  // approximate test for new ...()\n          calledAsFunctionWarning();\n        }\n\n        // Preferable, truly weak map.\n        var hmap = new HostWeakMap();\n\n        // Our hidden-property-based pseudo-weak-map. Lazily initialized in the\n        // 'set' implementation; thus we can avoid performing extra lookups if\n        // we know all entries actually stored are entered in 'hmap'.\n        var omap = undefined;\n\n        // Hidden-property maps are not compatible with proxies because proxies\n        // can observe the hidden name and either accidentally expose it or fail\n        // to allow the hidden property to be set. Therefore, we do not allow\n        // arbitrary WeakMaps to switch to using hidden properties, but only\n        // those which need the ability, and unprivileged code is not allowed\n        // to set the flag.\n        //\n        // (Except in doubleWeakMapCheckSilentFailure mode in which case we\n        // disable proxies.)\n        var enableSwitching = false;\n\n        function dget(key, opt_default) {\n          if (omap) {\n            return hmap.has(key) ? hmap.get(key)\n                : omap.get___(key, opt_default);\n          } else {\n            return hmap.get(key, opt_default);\n          }\n        }\n\n        function dhas(key) {\n          return hmap.has(key) || (omap ? omap.has___(key) : false);\n        }\n\n        var dset;\n        if (doubleWeakMapCheckSilentFailure) {\n          dset = function(key, value) {\n            hmap.set(key, value);\n            if (!hmap.has(key)) {\n              if (!omap) { omap = new OurWeakMap(); }\n              omap.set(key, value);\n            }\n            return this;\n          };\n        } else {\n          dset = function(key, value) {\n            if (enableSwitching) {\n              try {\n                hmap.set(key, value);\n              } catch (e) {\n                if (!omap) { omap = new OurWeakMap(); }\n                omap.set___(key, value);\n              }\n            } else {\n              hmap.set(key, value);\n            }\n            return this;\n          };\n        }\n\n        function ddelete(key) {\n          var result = !!hmap['delete'](key);\n          if (omap) { return omap.delete___(key) || result; }\n          return result;\n        }\n\n        return Object.create(OurWeakMap.prototype, {\n          get___:    { value: constFunc(dget) },\n          has___:    { value: constFunc(dhas) },\n          set___:    { value: constFunc(dset) },\n          delete___: { value: constFunc(ddelete) },\n          permitHostObjects___: { value: constFunc(function(token) {\n            if (token === weakMapPermitHostObjects) {\n              enableSwitching = true;\n            } else {\n              throw new Error('bogus call to permitHostObjects___');\n            }\n          })}\n        });\n      }\n      DoubleWeakMap.prototype = OurWeakMap.prototype;\n      module.exports = DoubleWeakMap;\n\n      // define .constructor to hide OurWeakMap ctor\n      Object.defineProperty(WeakMap.prototype, 'constructor', {\n        value: WeakMap,\n        enumerable: false,  // as default .constructor is\n        configurable: true,\n        writable: true\n      });\n    })();\n  } else {\n    // There is no host WeakMap, so we must use the emulation.\n\n    // Emulated WeakMaps are incompatible with native proxies (because proxies\n    // can observe the hidden name), so we must disable Proxy usage (in\n    // ArrayLike and Domado, currently).\n    if (typeof Proxy !== 'undefined') {\n      Proxy = undefined;\n    }\n\n    module.exports = OurWeakMap;\n  }\n})();\n\n\n//# sourceURL=webpack:///./node_modules/weak-map/weak-map.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ })

/******/ });